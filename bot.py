import os

import weaponlist
from environ import environ
os.environ.update(environ)

from telebot import TeleBot
import npclist
import skillinfo
from sys import getsizeof
from npclist import *
from keyboards import *
from gametexts import *
from datetime import datetime
import requests
from openworld import *
import pokemonlist
import shennon
import math
#from Lan import lt, localized_language_name
from shop_items import name_to_weapon

from chatwars import cw_skillinfo, cw_weaponlist
from chatwars.utils import *
from chatwars.db import CWDatabase

def sendm(b, chat_id, text, parse_mode=None, entities=None,
    disable_web_page_preview=None, disable_notification=None, protect_content= None, reply_to_message_id= None,
    allow_sending_without_reply= None,
    reply_markup= None,
    timeout= None, message_thread_id= None, reply_parameters= None,
    link_preview_options = None, business_connection_id= None, message_effect_id= None):
    try:
        msg = b.send_message(chat_id, text, parse_mode=parse_mode,
            disable_web_page_preview=disable_web_page_preview,
            disable_notification=disable_notification, reply_to_message_id=reply_to_message_id,
            reply_markup=reply_markup)
        return msg
    except:
        pass


def inc_user_bot_counter(user, falseanswer = False):
    if not falseanswer:

        cwusers.update_one({'id':user['id']},{'$inc':{'bot_counter':1}})
        user['bot_counter'] += 1
    else:
        cwusers.update_one({'id': user['id']}, {'$inc': {'false_answer': 1}})
        user['false_answer'] += 1

    if user['bot_counter'] >= 2:
        cwlogs.send_message(441399484, '❗️Игрок '+user['name']+' (id: '+str(user['id'])+') попался на ботоводстве '+str(user['bot_counter'])+' раз!❗️')
    if user['false_answer'] >= 2:
        cwlogs.send_message(441399484,
                            '❗️Игрок ' + user['name'] + ' (id: ' + str(user['id']) + ') попался на неправильном ответе ' + str(
                                user['false_answer']) + ' раз!❗️')


def create_demons_for_rat():
    x = {}
    i = 0
    while len(x) < 1000:
        x.update({str(i):{'pattern':random_duelrat_weights(), 'score':0, 'number':str(i)}})
        i += 1

    return x

from constants import *

token = os.environ['token']
token = '7761726947:AAGOpSlfreC-GPanhCb89Vs5hS4vafxV0RQ' #ТОКЕН ВЕГАНКИ
#token = '' #ТОКЕН ДЛЯ ТЕСТОВ
bot = TeleBot(token)
print(bot.get_me())

novice_alex_id = 674065123
pasyuk_2_id = 441399484
cwbottoken = os.getenv("CWBOT_TOKEN")
cwbot = TeleBot(cwbottoken, num_threads=1)
#cwbot = TeleBot(token, num_threads = 2) # ТЕСТОВЫЙ ТОКЕН
#cwlogs = TeleBot(cwlogstoken)

radiodemonphoto = 'AgACAgIAAxkBAAFWvZdlu81ilDpKOcbV2iS6xyQHpQMtpgACadIxG99S4ElQibTbkJ2SkwEAAwIAA3kAAzQE'
knight_photo = "AgACAgIAAxkBAAGXY6loPrZTdxQy-ZoknAQ2e_bxgB_0dwACgPMxG82Y-UmAjLGPg2XlCwEAAwIAA3kAAzYE"

# ОТБРОСЬ НАДЕЖДУ
# ВСЯК СЮДА ВХОДЯЩИЙ


client = MongoClient(os.environ['database2'])
db = client.veganwars_rebuild
users = db.users
duelstats = db.duelstats
massbattlestats = db.massbattlestats
teamstats = db.teamstats
rats = db.rats
world = db.openworld
wakeups = db.wakeups

ratdemons = db.ratdemons

cwdb = CWDatabase(client)
cwusers = cwdb.users
allcastles = cwdb.castles
auction = cwdb.auction
resourceauc = cwdb.resourceauc
lastbattletime_db = cwdb.last_battle
cwtroll = cwdb.troll
if cwtroll.find_one({}) == None:
    cwtroll.insert_one({'gold':0, 'pogs':0, 'exp':0})

antibot_pics = {
        'AgACAgIAAxkBAAEl8GJkiua5K9umw-vUk9g0zhi-3kn4sAAClccxG26TWEif520JrR16YgEAAwIAA20AAy8E':'1',
        'AgACAgIAAxkBAAEl8LZkiucRWD5QXJrKGrhSL6hzC2yj9wACw8cxG26TWEg9hTbiAjnSQQEAAwIAA20AAy8E':'2',
        'AgACAgIAAxkBAAEl8Mhkiucm7OvUG8jer3q-iJbE9zE9xwACyccxG26TWEgWqCmVzgGwAAEBAAMCAANtAAMvBA':'3'
    }

def picid_to_code(picid):
    return antibot_pics[picid]

def code_to_picid(code):
    for ids in antibot_pics:
        if antibot_pics[ids] == code:
            return ids


def get_answer(fileid):
    quests = ['1', '2', '3']
    answers = ['6', '3', '20']
    i = 0
    for ids in quests:
        if ids == fileid:
            return answers[i]
        i += 1
    return None

now_captcha = []
captcha_timer = []

def dont_answer(user, msg):
    if user['id'] in now_captcha:
        inc_user_bot_counter(user, falseanswer = False)
        now_captcha.remove(user['id'])
        cwbot.delete_message(user['id'], msg.message_id)
    else:
        pass
    
def timerremove(user):
    captcha_timer.remove(user['id'])

def captcha(user):
    if user['id'] in now_captcha:
        return
    if user['id'] in captcha_timer:
        return
    captcha_timer.append(user['id'])
    threading.Timer(300, timerremove, args = [user]).start()
    quest_types = ['math']#, 'pic', 'random']
    quest_type = random.choice(quest_types)
    if quest_type == 'math':
        quests = ['1', '2', '3']
        answers = []
        quest = random.choice(quests)
        answer = get_answer(quest)
        kblist = []
        for i in range(3):
            x = random.randint(-20, 20)
            kblist.append(types.InlineKeyboardButton(text=str(x), callback_data='questanswer?' + quest + '?' + str(x)))
        kblist.append(types.InlineKeyboardButton(text = str(answer), callback_data = 'questanswer?' + quest + '?' + str(answer)))
        random.shuffle(kblist)
        kb = types.InlineKeyboardMarkup()
        for ids in kblist:
            kb.add(ids)
        try:
            msg = cwbot.send_photo(user['id'], code_to_picid(quest), reply_markup=kb)
            threading.Timer(60, dont_answer, args = [user, msg]).start()
            now_captcha.append(user['id'])
        except:
            sendm(cwbot, 441399484, traceback.format_exc())

@cwbot.callback_query_handler(func = lambda call: call.data[:11] == 'questanswer')
def questanssss(call):
    if call.from_user.id not in now_captcha:
        cwbot.delete_message(call.message.chat.id, call.message.message_id)
        return
    quest = call.data.split('?')[1]
    trueans = get_answer(quest)
    userans = get_answer(quest)
    user = cwusers.find_one({'id':call.from_user.id})
    if userans != trueans:
        inc_user_bot_counter(user, falseanswer = True)
    else:
        cwbot.answer_callback_query(call.id, "✅")
    cwbot.delete_message(call.message.chat.id, call.message.message_id)
    try:
        now_captcha.remove(call.from_user.id)
    except:
        pass


@cwbot.message_handler(content_types = ['photo'])
def phhhotom(m):
    if m.from_user.id == 441399484:
        sendm(cwbot, m.chat.id, m.photo[-1].file_id)

if True:
    if rats.find_one({}) == None:
        rats.insert_one({'wins': 0, 'games': 0})
    try:
        rats.find_one({})['diff1']
    except:
        rats.update_one({}, {
            '$set': {'diff1': {'wins': 0, 'games': 0}, 'diff2': {'wins': 0, 'games': 0}, 'diff3': {'wins': 0, 'games': 0}}})
    if massbattlestats.find_one({}) == None:
        massbattlestats.insert_one({'skills': {}, 'weapons': {}, 'builds': {}})
    if duelstats.find_one({}) == None:
        duelstats.insert_one({'skills': {}, 'weapons': {}, 'builds': {}})
    if teamstats.find_one({}) == None:
        teamstats.insert_one({'skills': {}, 'weapons': {}, 'builds': {}})
    if wakeups.find_one({}) == None:
        wakeups.insert_one({'wakeups': []})

# if world.find_one({}) == None:
#    ow = generate_open_world()
#    world.insert_one({'world':ow})
try:
    world.find_one({})['npc']
except:
    world.update_one({}, {'$set': {'npc': {}}})

#cwusers.update_many({},{'$set':{'bot_counter':0, 'false_answer':0}})

has_necrostaff = []

from shop_items import scrolls_to_sale, weapons_to_sale, generate_object_code, create_scroll, create_weapon, \
    create_skill, create_recipe
from shop_items import create_undefined_scroll, allscrolls, get_lvl_weapon, get_cw_player_weapon
from shop_items import allrecipes_red, allrecipes_green, allrecipes_blue, get_cw_battleitem_name, create_essence

cwratweapons = [cw_weaponlist.Pistol_1, cw_weaponlist.Pistol_2, cw_weaponlist.Pistol_3,
                cw_weaponlist.ShortSword_1, cw_weaponlist.ShortSword_2, cw_weaponlist.ShortSword_3,
                cw_weaponlist.Revolver_1, cw_weaponlist.Revolver_2, cw_weaponlist.Revolver_3,
                cw_weaponlist.Revolver_4_1, cw_weaponlist.Revolver_4_2,
                cw_weaponlist.Baseball_1, cw_weaponlist.Baseball_2, cw_weaponlist.Baseball_3,
                cw_weaponlist.Baseball_4_1, cw_weaponlist.Baseball_4_2,
                cw_weaponlist.Knife_1, cw_weaponlist.Knife_2, cw_weaponlist.Knife_3,
                cw_weaponlist.Knife_4_1, cw_weaponlist.Knife_4_2,
                cw_weaponlist.Obrez_1, cw_weaponlist.Obrez_2, cw_weaponlist.Obrez_3,
                cw_weaponlist.Obrez_4_1, cw_weaponlist.Obrez_4_2,
                cw_weaponlist.Torch_1, cw_weaponlist.Torch_2, cw_weaponlist.Torch_3,
                cw_weaponlist.Torch_4_1, cw_weaponlist.Torch_4_2,
                cw_weaponlist.Flamethrower_1, cw_weaponlist.Flamethrower_2, cw_weaponlist.Flamethrower_3,
                cw_weaponlist.Flamethrower_4_1,
                cw_weaponlist.Axe_1, cw_weaponlist.Axe_2, cw_weaponlist.Axe_3,
                cw_weaponlist.Axe_4_1, cw_weaponlist.Axe_4_2,
                cw_weaponlist.Kastet_1, cw_weaponlist.Kastet_2, cw_weaponlist.Kastet_3,
                cw_weaponlist.Kastet_4_1, cw_weaponlist.Kastet_4_2,
                cw_weaponlist.Kuvalda_1, cw_weaponlist.Kuvalda_2, cw_weaponlist.Kuvalda_3,
                cw_weaponlist.Kuvalda_4_1, cw_weaponlist.Kuvalda_4_2,
                cw_weaponlist.Chain_1, cw_weaponlist.Chain_2, cw_weaponlist.Chain_3,
                cw_weaponlist.Chain_4_1, cw_weaponlist.Chain_4_2,
                cw_weaponlist.Bow_1, cw_weaponlist.Bow_2, cw_weaponlist.Bow_3,
                cw_weaponlist.Bow_4_1, cw_weaponlist.Bow_4_2,
                cw_weaponlist.Molot_1, cw_weaponlist.Molot_2, cw_weaponlist.Molot_3,
                cw_weaponlist.Molot_4_1, cw_weaponlist.Molot_4_2,
                cw_weaponlist.Tesak_1, cw_weaponlist.Tesak_2, cw_weaponlist.Tesak_3,
                cw_weaponlist.Tesak_4_1, cw_weaponlist.Tesak_4_2
                ]

def get_cw_skill_description(skill):
    return cw_skillinfo.info[skill['skillcode'] + '?' + str(skill['lvl'])]


auction_wait = []

takeitemlock = []

lvltable = {}
a = 1.9
totalexp = 0
lvl = 1
while lvl < 40:
    y = round(pow((lvl * 5), a));
    lvltable[lvl] = {'totalexp': totalexp, 'expfornextlvl': y}
    totalexp += y
    lvl += 1
lvltable[40] = {'totalexp': totalexp, 'expfornextlvl': 99999999999}

foresttable = {}
a = 1.6
totalforest = 0
lvl = 1
while lvl < 40:
    y = round(pow((lvl * 1), a)) + 4;
    foresttable[lvl] = {'totalforest': totalforest, 'forestfornextlvl': y}
    totalforest += y
    lvl += 1

foresttable[40] = {'totalforest': totalforest, 'forestfornextlvl': 999999999}

######################################################################CW BATTLE######################################################################
#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################


castlefightinfo = {}

cwgames = {}

cw_duel_find = {}

wtbqueue = []

allcastlesbattletext = {}

def getcastletop_percent(players, x):
    tops = {}
    sumdamage = 0
    roleplayers = {}
    for ids in players:
        player = players[ids]
        if player['castlefightrole'] == x:
            roleplayers.update({player['id']: player})
    for ids in roleplayers:
        player = roleplayers[ids]
        if player['castlefightrole'] == x:
            if player['castle'] not in tops:
                tops.update({player['castle']: 0})
            tops[player['castle']] += player['do_damage_in_hp']
            sumdamage += player['do_damage_in_hp']

    percentages = {}
    for ids in tops:
        if ids not in percentages:
            percentages.update({ids:0})
    for ids in percentages:
        dmg = tops[ids]
        try:
            percent = dmg/sumdamage
        except:
            percent = 0
        percentages[ids] = percent
    sorted_perc = {}
    while len(list(percentages)) > 0:
        maxp = -1
        for ids in percentages:
            if percentages[ids] > maxp:
                maxp = percentages[ids]
                topp = ids
        sorted_perc.update({topp:percentages[topp]})
        percentages.pop(topp)
    return sorted_perc

def getcastletop(players, x, returnplayers=False):
    tops = []
    roleplayers = {}
    for ids in players:
        player = players[ids]
        if player['castlefightrole'] == x:
            roleplayers.update({player['id']: player})
    while len(tops) < 3 and len(roleplayers) > 0:
        maxdmg = -1
        topplayer = None
        for ids in roleplayers:
            player = roleplayers[ids]
            if player['castlefightrole'] == x:
                if player['do_damage_in_hp'] > maxdmg:
                    maxdmg = player['do_damage_in_hp']
                    topplayer = player
        tops.append(topplayer)
        roleplayers.pop(topplayer['id'])
    text = ''
    for ids in tops:
        text += castle_to_emoji(ids['castle']) + '' + ids['name'] + ' (' + str(ids['do_damage_in_hp']) + '), '
    if text != '':
        text = text[:len(text) - 2]
        text += '.'
    if not returnplayers:
        return text
    else:
        return tops


def get_cw_player_skills(user):
    pskills = []
    for ids in user['equipped_skills']:
        skill = user['equipped_skills'][ids]
        skilltoadd = skill['skillcode'] + '?' + str(skill['lvl'])
        pskills.append(skilltoadd)
    return pskills


# commit

def set_player_bar_stats(player, user):
    player['drunk'] = 0
    player['napitok'] = None
    player['food'] = None
    player['stakan'] = None
    player['orders'] = []


def set_player_battle_stats(player, user):
    player['weapon'] = get_cw_player_weapon(user)
    player['hp'] = user['hp']
    player['name'] = user['name']
    player['maxhp'] = user['maxhp']
    player['dmglimit'] = user['dmglimit']
    player['maxdmglimit'] = user['maxdmglimit']
    player['energy'] = user['energy']
    player['maxenergy'] = user['maxenergy']
    player['skills'] = get_cw_player_skills(user)
    player['lvl'] = user['lvl']
    iforb = []
    for ids in user['items_for_battle']:
        iforb.append(ids)
    player['inventory'] = iforb
    try:
        if user['resources']['rat_toys'] > 0:
            player['have_rat_toy'] = True
    except:
        pass
    if player['weapon'].name == 'Сюрикены':
        if player['weapon'].lvl == 1:
            player['shurikens'] = 2
        if player['weapon'].lvl == 2:
            player['shurikens'] = 4
        if player['weapon'].lvl == 3:
            player['shurikens'] = 6
        if player['weapon'].lvl == 4:
            player['shurikens'] = 6
    if player['weapon'].name == 'Тесак':
        if player['weapon'].lvl == 1:
            player['tesak_bonus'] = 3
        if player['weapon'].lvl == 2:
            player['tesak_bonus'] = 4
        if player['weapon'].lvl == 3:
            player['tesak_bonus'] = 5
        if player['weapon'].lvl == 4:
            player['tesak_bonus'] = 5
            if player['weapon'].modification == 1:
                player['tesak_bonus'] = 10
    if player['weapon'].lvl == 4:
        player['collecting_souls'] = True
    for ids in user['inventory']:
        item = user['inventory'][ids]
        if item['type'] == 'essence':
            player['collecting_souls'] = True
            break

def give_gold_to_players(stolengold, players, target='defer'):
    roleplayers = {}
    for ids in players:
        player = players[ids]
        if player['castlefightrole'] == target:
            if not player['full_npc']:
                roleplayers.update({player['id']: player})
    sum_damage = 0
    gold_remain = stolengold
    for ids in roleplayers:
        player = roleplayers[ids]
        sum_damage += player['do_damage_in_hp']
    if sum_damage == 0:
        for ids in roleplayers:
            player = roleplayers[ids]
            try:
                dmgpercent = 100/len(roleplayers)
            except:
                dmgpercent = 0
            givegold = int((stolengold / 100) * dmgpercent)
            gold_remain -= givegold
            cwusers.update_one({'id': player['id']}, {'$inc': {'changebattlegold': givegold}})
    else:
        for ids in roleplayers:
            player = roleplayers[ids]
            try:
                dmgpercent = (player['do_damage_in_hp'] / sum_damage) * 100
            except:
                dmgpercent = 0
            givegold = int((stolengold / 100) * dmgpercent)
            gold_remain -= givegold
            cwusers.update_one({'id': player['id']}, {'$inc': {'changebattlegold': givegold}})
    if gold_remain > 0:
        dopgoldplayer = roleplayers[random.choice(list(roleplayers))]
        cwusers.update_one({'id': dopgoldplayer['id']}, {'$inc': {'changebattlegold': gold_remain}})


def give_resources_to_players(stolenres, players, target='attacker'):
    roleplayers = {}
    for ids in players:
        player = players[ids]
        if not player['full_npc']:
            if player['castlefightrole'] == target:
                roleplayers.update({player['id']: player})
    sum_damage = 0
    res_remain = stolenres
    stolenresamount = 0
    for ids in stolenres:
        stolenresamount += stolenres[ids]
    for ids in roleplayers:
        player = roleplayers[ids]
        sum_damage += player['do_damage_in_hp']
    for ids in roleplayers:
        player = roleplayers[ids]
        try:
            dmgpercent = (player['do_damage_in_hp'] / sum_damage) * 100
        except:
            dmgpercent = 0
        giveresamount = int((stolenresamount / 100) * dmgpercent)
        giveres = {}
        while giveresamount > 0:
            curres = random.choice(list(stolenres))
            while stolenres[curres] <= 0:
                curres = random.choice(list(stolenres))
            if curres not in giveres:
                giveres[curres] = 1
            else:
                giveres[curres] += 1
            stolenres[curres] -= 1
            giveresamount -= 1
        user = cwdb.get_user(player['id'])
        for idss in giveres:
            if idss not in user['changebattleres']:
                cwusers.update_one({'id': player['id']}, {'$set': {'changebattleres.' + idss: giveres[idss]}})
            else:
                cwusers.update_one({'id': player['id']}, {'$inc': {'changebattleres.' + idss: giveres[idss]}})
    if sum_damage == 0:
        for ids in roleplayers:
            player = roleplayers[ids]
            try:
                dmgpercent = 100/len(roleplayers)
            except:
                dmgpercent = 0
            giveresamount = int((stolenresamount / 100) * dmgpercent)
            giveres = {}
            while giveresamount > 0:
                curres = random.choice(list(stolenres))
                while stolenres[curres] <= 0:
                    curres = random.choice(list(stolenres))
                if curres not in giveres:
                    giveres[curres] = 1
                else:
                    giveres[curres] += 1
                stolenres[curres] -= 1
                giveresamount -= 1
            user = cwdb.get_user(player['id'])
            for idss in giveres:
                if idss not in user['changebattleres']:
                    cwusers.update_one({'id': player['id']}, {'$set': {'changebattleres.' + idss: giveres[idss]}})
                else:
                    cwusers.update_one({'id': player['id']}, {'$inc': {'changebattleres.' + idss: giveres[idss]}})



def steal_gold(castle=None, players=None, test=False):
    stolengold = 0
    if castle != None:
        for ids in cwusers.find({'castle': castle}):
            player = ids
            sgold = int((player['gold'] / 100) * 30)
            stolengold += sgold
            if not test:
                cwusers.update_one({'id': player['id']}, {'$inc': {'changebattlegold': -sgold}})
    else:
        for ids in players:
            player = cwusers.find_one({'id': players[ids]['id']})
            if player != None:
                sgold = int((player['gold'] / 100) * 30)
                stolengold += sgold
                if not test:
                    cwusers.update_one({'id': player['id']}, {'$inc': {'changebattlegold': -sgold}})
    return stolengold


def steal_resources(castle, test=False):
    stolenres = {}
    # stolengold = 0
    for ids in cwusers.find({'castle': castle}):
        player = ids
        playerstolenres = {}
        playerresamount = 0
        for idss in player['resources']:
            playerresamount += player['resources'][idss]
        stolenamount = int((playerresamount / 100) * 15)
        while stolenamount > 0:
            curres = random.choice(list(player['resources']))
            while player['resources'][curres] <= 0:
                curres = random.choice(list(player['resources']))
            if curres not in playerstolenres:
                playerstolenres[curres] = 1
            else:
                playerstolenres[curres] += 1
            stolenamount -= 1
            player['resources'][curres] -= 1
        for idss in playerstolenres:
            if idss not in player['changebattleres']:
                if not test:
                    cwusers.update_one({'id': player['id']}, {'$set': {'changebattleres.' + idss: -playerstolenres[idss]}})
            else:
                if not test:
                    cwusers.update_one({'id': player['id']}, {'$inc': {'changebattleres.' + idss: -playerstolenres[idss]}})
            if idss not in stolenres:
                stolenres[idss] = playerstolenres[idss]
            else:
                stolenres[idss] += playerstolenres[idss]

    return stolenres

def summon_rat_companion_old_version(game, user, player):
    ratt = summon_rat(game, 1)
    rskills = []
    rweaponlvl = player['weapon'].lvl
    for ids in ratt:
        rat = ratt[ids]
        break
    ratlvl = player['lvl']
    buff = 0
    buffen = 0
    if ratlvl >= 10:
        buff += 1
        buffen += 1
    if ratlvl >= 25:
        buff += 1
    if ratlvl >= 40:
        buff += 1
    rat_skills = rskills
    rat_item_amount = 2
    rat_weapon = get_cw_rat_weapon(rweaponlvl, blockedw = ['Короткий меч', 'Пистолет'])
    # rat_weapon = rweapon#get_cw_rat_weapon(rat_weaponlvl)
    rat_items = get_cw_rat_items(rat_item_amount)
    rat['weapon'] = rat_weapon
    rat['skills'] = rat_skills
    # rat['items'] = rat_items
    rat['hp'] = 3 + buff
    rat['maxhp'] = 3 + buff
    rat['energy'] = 4 + buffen
    rat['maxenergy'] = 4 + buffen
    rat['dmglimit'] = 5 + buff
    rat['maxdmglimit'] = 5 + buff
    rat['inventory'] = rat_items
    rat['name'] = 'Крыса[' + player['name'] + ']|🐭'
    rat['team'] = player['team']
    rat['castlefightrole'] =  player['castlefightrole']
    rat['castle'] = user['castle']
    rat['full_npc'] = True
    # summon_rats.update(ratt)
    cwusers.update_one({'id': user['id']}, {'$set': {'summon_castlefight_rat': False}})
    return ratt

def summon_rat_companion(game, user, player):
    ratt = summon_rat(game, 1)
    for ids in ratt:
        rat = ratt[ids]
        break
    ratlvl = user['lvl']
    buff = 0
    buffen = 0
    if ratlvl >= 10:
        buff += 1
        buffen += 1
    if ratlvl >= 25:
        buff += 1
    if ratlvl >= 40:
        buff += 1
    rat_skillnumber = len(player['skills'])
    rat_weaponlvl = player['weapon'].lvl
    rat_skill_lvl_summary = 0
    for idss in player['skills']:
        lvl = int(idss.split('?')[1])
        rat_skill_lvl_summary += lvl
    rat_item_amount = len(player['inventory'])
    rat_skills = get_cw_rat_skills(rat_skillnumber, rat_skill_lvl_summary)
    rat_weapon = get_cw_rat_weapon(rat_weaponlvl, blockedw = ['Короткий меч', 'Пистолет'])
    rat_items = get_cw_rat_items(rat_item_amount)
    rat['weapon'] = rat_weapon
    rat['skills'] = rat_skills
    rat['hp'] = 3 + buff
    rat['maxhp'] = 3 + buff
    rat['energy'] = 4 + buffen
    rat['maxenergy'] = 4 + buffen
    rat['dmglimit'] = 5 + buff
    rat['maxdmglimit'] = 5 + buff
    rat['inventory'] = rat_items
    rat['name'] = 'Крыса[' + player['name'] + ']|🐭'
    rat['team'] = player['team']
    rat['castlefightrole'] = player['castlefightrole']
    rat['castle'] = player['castle']
    rat['full_npc'] = True
    rat['allies'] = player['allies']
    return ratt



def castlefight(test=False):
    castlelist = ['rat', 'darkcastle', 'necromant', 'explosion']
    starttime = time.time()
    castles = {}
    users = cwdb.users.find({})
    cwdb.clean_for_battle()
    allcastlesbattletext.clear()
    for ids in castlelist:
        castles.update(createcastle(ids))
    for ids in users:
        if ids['current_act'] == 'def':
            castles[ids['castle']]['defers'].update({ids['id']: ids})
        elif ids['current_act'] == 'attack':
            castles[ids['attack_target']]['attackers'].update({ids['id']: ids})

    for ids in castles:
        castle = castles[ids]
        allcastlesbattletext[ids] = []
        game = creategame(chatid=castle['name'], castlefight=True)
        loosestreak = allcastles.find_one({})[ids]['loosestreak']
        for idss in game:
            game = game[idss]
            break
        summon_rats = []
        for idss in castle['defers']:
            user = castle['defers'][idss]
            #####################################################################################################################################################
            game['players'].update(
                createplayer(uid=user['id'], weapon=user['weapon'], hp=user['hp'], name=user['name']))
            player = game['players'][user['id']]
            player['team'] = user['castle']
            player['controller'] = 'bot'
            player['loosedamage'] += loosestreak
            player.update({'castlefightrole': 'defer', 'castle': user['castle']})
            set_player_battle_stats(player, user)
            try:
                try:
                    user['summon_castlefight_rat']
                except:
                    user['summon_castlefight_rat'] = False
                if user['summon_castlefight_rat']:
                    rat = summon_rat_companion(game, user, player)
                    summon_rats.append(rat)
                    if not test:
                        cwusers.update_one({'id': user['id']}, {'$set': {'summon_castlefight_rat': False}})
            except:
                sendm(cwbot, 441399484, traceback.format_exc())
            try:
                try:
                    user['necromant_reborn_buff']
                except:
                    user['necromant_reborn_buff'] = False
                if user['necromant_reborn_buff']:
                    game['necromant_reborn_buff'] += 1
                    if not test:
                        cwusers.update_one({'id':user['id']},{'$set':{'necromant_reborn_buff':False}})
            except:
                sendm(cwbot, 441399484, traceback.format_exc())
            try:
                try:
                    user['next_battle_explosion']
                except:
                    user['next_battle_explosion'] = False
                if user['next_battle_explosion']:
                    player['castle_explosion'] = True
                    if not test:
                        cwusers.update_one({'id': user['id']}, {'$set': {'next_battle_explosion': False}})
            except:
                sendm(cwbot, 441399484, traceback.format_exc())
            try:
                try:
                    user['summon_dark_demon']
                except:
                    user['summon_dark_demon'] = False
                if user['summon_dark_demon']:
                    player['summon_dark_demon'] = True
                    if not test:
                        cwusers.update_one({'id': user['id']}, {'$set': {'summon_dark_demon': False}})
            except:
                sendm(cwbot, 441399484, traceback.format_exc())



        #################################################################################################################################################

        for idss in castle['attackers']:
            newattackers = {}
            user = castle['attackers'][idss]
            #####################################################################################################################################################
            game['players'].update(
                createplayer(uid=user['id'], weapon=user['weapon'], hp=user['hp'], name=user['name']))
            player = game['players'][user['id']]
            player['team'] = user['castle']
            player['controller'] = 'bot'
            player.update({'castlefightrole': 'attacker', 'castle': user['castle']})
            set_player_battle_stats(player, user)
            try:
                try:
                    user['summon_castlefight_rat']
                except:
                    user['summon_castlefight_rat'] = False
                if user['summon_castlefight_rat']:
                    rat = summon_rat_companion(game, user, player)
                    summon_rats.append(rat)
                    if not test:
                        cwusers.update_one({'id': user['id']}, {'$set': {'summon_castlefight_rat': False}})
            except:
                sendm(cwbot, 441399484, traceback.format_exc())
            try:
                try:
                    user['necromant_reborn_buff']
                except:
                    user['necromant_reborn_buff'] = False
                if user['necromant_reborn_buff']:
                    game['necromant_reborn_buff'] += 1
                    if not test:
                        cwusers.update_one({'id':user['id']},{'$set':{'necromant_reborn_buff':False}})
            except:
                sendm(cwbot, 441399484, traceback.format_exc())
            try:
                try:
                    user['summon_dark_demon']
                except:
                    user['summon_dark_demon'] = False
                if user['summon_dark_demon']:
                    player['summon_dark_demon'] = True
                    if not test:
                        cwusers.update_one({'id': user['id']}, {'$set': {'summon_dark_demon': False}})
            except:
                sendm(cwbot, 441399484, traceback.format_exc())
            try:
                try:
                    user['next_battle_explosion']
                except:
                    user['next_battle_explosion'] = False
                if user['next_battle_explosion']:
                    player['castle_explosion'] = True
                    if not test:
                        cwusers.update_one({'id': user['id']}, {'$set': {'next_battle_explosion': False}})
            except:
                sendm(cwbot, 441399484, traceback.format_exc())

        for idss in summon_rats:
            game['players'].update(idss)

        #################################################################################################################################################
        for idss in game['players']:
            allcastlecodes = ['rat', 'explosion', 'necromant', 'darkcastle']
            game['players'][idss].update({'castlefighttexts': []})
            if game['players'][idss]['team'] != castle['name']:
                for idsss in allcastlecodes:
                    if idsss != castle['name']:
                        game['players'][idss]['allies'].append(idsss)
        goo(None, None, game)
        # if sea['defpower']<sea['attackerspower']:
        #    sea['saved']=False
    text = ''
    allc = allcastles.find_one({})
    for ids in castlefightinfo:
        castle = castlefightinfo[ids]
        if castle['winner'] == None or castle['winner'] == 'defers':
            castle['score'] += 8
            loosestreak = allcastles.find_one({})[ids]['loosestreak']
            if loosestreak > 0:
                if not test:
                    allcastles.update_one({}, {'$inc': {ids + '.loosestreak': -1}})
            text += '🛡' + castle_to_name(castle['name']) + ' отстоял свою территорию!\nТоп атакующих:\n'
            attackers_top = getcastletop(castle['players'], 'attacker')
            if attackers_top != '':
                text += attackers_top + '\n'

            text += 'Топ защитников:\n'
            defers_top = getcastletop(castle['players'], 'defer')
            if defers_top != '':
                text += defers_top + '\n'
            else:
                text += ''
            atkers = {}
            for idss in castle['players']:
                    if castle['players'][idss]['castlefightrole'] == 'attacker':
                        atkers.update({castle['players'][idss]['id']: castle['players'][idss]})
                        exp = 1
                        user = cwdb.get_user(castle['players'][idss]['id'])
                        if user != None:
                            if not test:
                                cwusers.update_one({'id': user['id']}, {'$inc': {'exp': exp, 'changebattleexp': exp}})
                                user['exp'] += 1
                                check_lvlup(user)
                    else:
                        user = cwdb.get_user(castle['players'][idss]['id'])
                        if user != None:
                            if not test:
                                exp = exp_for_quest(user['lvl'])
                                multipler = random.randint(7, 13)
                                multipler = multipler / 10
                                exp = int(exp * multipler)
                                cwusers.update_one({'id': user['id']}, {'$inc': {'exp': exp, 'changebattleexp': exp}})
                                user['exp'] += exp
                                check_lvlup(user)
            stolengold = steal_gold(players=atkers, test=test)
            text += 'Атакующие потеряли ' + str(stolengold) + '💰.\n\n'
            if not test:
                give_gold_to_players(stolengold, castle['players'], 'defer')


        else:
            castle['score'] += 0
            scores = []
            scoreforcastle = 3
            castlepos = 1
            if not test:
                allcastles.update_one({}, {'$inc': {ids + '.loosestreak': 1}})
            if allc['rat']['score'] > allc[ids]['score']:
                castlepos += 1
            if allc['darkcastle']['score'] > allc[ids]['score']:
                castlepos += 1
            if allc['necromant']['score'] > allc[ids]['score']:
                castlepos += 1
            if allc['explosion']['score'] > allc[ids]['score']:
                castlepos += 1
            if castlepos == 4:
                scoreforcastle = 8
            if castlepos == 3:
                scoreforcastle = 12
            if castlepos == 2:
                scoreforcastle = 16
            if castlepos == 1:
                scoreforcastle = 20
            #castletopattackers = getcastletop(castle['players'], 'attacker', returnplayers=True)
            #for idss in castletopattackers:
            #    atker = idss
            #    if atker['castle'] not in scores:
            #        scores.append(atker['castle'])
            #        castlefightinfo[atker['castle']]['score'] += scoreforcastle
            castletoppercents = getcastletop_percent(castle['players'], 'attacker')
            countscore = scoreforcastle
            for idss in castletoppercents:
                takenscore = scoreforcastle * castletoppercents[idss]
                takenscore = math.ceil(takenscore)
                if takenscore > countscore:
                    takenscore = countscore
                countscore -= takenscore
                if countscore < 0:
                    countscore = 0
                castlefightinfo[idss]['score'] += takenscore

            text += '💢' + castle_to_name(castle['name']) + ' потерпел поражение в битве!\nТоп атакующих:\n'
            attackers_top = getcastletop(castle['players'], 'attacker')
            if attackers_top != '':
                text += attackers_top + '\n'
            text += 'Топ защитников:\n'
            defers_top = getcastletop(castle['players'], 'defer')
            if defers_top != '':
                text += defers_top + '\n'
            else:
                text += ''
            stolenres = steal_resources(castle=ids, test=test)
            stolenresamount = 0
            for idss in stolenres:
                stolenresamount += stolenres[idss]
            stolengold = steal_gold(ids, test=test)
            if not test:
                give_gold_to_players(stolengold, castle['players'], 'attacker')
                give_resources_to_players(stolenres, castle['players'], 'attacker')
            text += 'Атакующие разграбили замок на ' + str(stolengold) + '💰 и ' + str(stolenresamount) + '📦.\n\n'
            for idss in castle['players']:
                if not castle['players'][idss]['full_npc']:
                    if castle['players'][idss]['castlefightrole'] == 'attacker':
                        if not test:
                            user = cwusers.find_one({'id': castle['players'][idss]['id']})
                            exp = exp_for_quest(user['lvl'])
                            multipler = random.randint(7, 13)
                            multipler = multipler / 10
                            exp = int(exp * multipler)
                            cwusers.update_one({'id': user['id']}, {'$inc': {'exp': exp, 'changebattleexp': exp}})
                            user['exp'] += exp
                            check_lvlup(user)
                    else:
                        if not test:
                            exp = 1
                            user = cwusers.find_one({'id': castle['players'][idss]['id']})
                            cwusers.update_one({'id': user['id']}, {'$inc': {'exp': exp, 'changebattleexp': exp}})
                            user['exp'] += exp
                            check_lvlup(user)

    text += '🏆Начисленные очки:\n'
    for ids in castlefightinfo:
        text += castle_to_name(castlefightinfo[ids]['name']) + ': ' + str(castlefightinfo[ids]['score']) + ' очков\n'
        if not test:
            allcastles.update_one({}, {'$inc': {castlefightinfo[ids]['name'] + '.score': castlefightinfo[ids]['score']}})
    if not test:
        cwusers.update_many({}, {'$set': {'attack_target': None, 'current_act': None}})
    for ids in cwusers.find({}):
        if not test:
            cwusers.update_one({'id': ids['id']}, {'$inc': {'gold': ids['changebattlegold']}})
            for idss in ids['changebattleres']:
                if idss not in ids['resources']:
                    cwusers.update_one({'id': ids['id']}, {'$set': {'resources.' + idss: ids['changebattleres'][idss]}})
                else:
                    cwusers.update_one({'id': ids['id']}, {'$inc': {'resources.' + idss: ids['changebattleres'][idss]}})
    if not test:
        msg = sendm(cwbot, officialchat, 'Результаты битвы:\n\n' + text)
    else:
        msg = sendm(cwbot, officialchat, 'Результаты ТЕСТОВОЙ битвы:\n\n' + text)
    cwbot.forward_message(-1001617111483, msg.chat.id, msg.message_id)
    castlefightinfo.clear()
    endtime = time.time()
    secs = int(endtime - starttime)
    sendm(cwbot, pasyuk_id, "Время битвы: " + str(secs) + ' секунд.')
    # for ids in allcastlesbattletext:
    #    sendm(cwbot, fullreportschannel, '*Лог битвы у ворот '+castle_to_name(ids)+':*\n', parse_mode = 'markdown')
    #    for idss in allcastlesbattletext[ids]:
    #        sendm(cwbot, fullreportschannel, idss)
    #        time.sleep(0.2)


last_castle_fight = {
    'time': 0
}

last_castle_fight['time'] = lastbattletime_db.find_one({})['time']

@cwbot.message_handler(func = lambda m: m.forward_from != None)
def forwardblock(m):
    return

def castlefight_check():
    first = True
    while True:
        if not first:
            try:
                current_datetime = datetime.now()
                if current_datetime.hour in [22, 6, 14]:
                    if time.time() - last_castle_fight['time'] > 3600 and current_datetime.minute in [0, 1, 2]:
                        last_castle_fight['time'] = time.time()
                        lastbattletime_db.update_one({}, {'$set': {'time': time.time()}})
                        if current_datetime.hour == 22:
                            cwusers.update_many({},{'$set':{'troll':1}})
                        sendm(cwbot, officialchat, "Начинается битва замков!")
                        castlefight()
                        showalllogs()
                        sendm(cwbot, officialchat, "Битва замков окончена! Полные отчеты о битвах можно найти на следующих каналах:\n\n"+
                                           "Замок Некроманта - https://t.me/+QHNp1MM_Z_QxMjgy\nЗамок магии взрывов - https://t.me/+PwdhmkCPdSRlOGQy\n"+
                                           "Замок тьмы - https://t.me/+NoPTCCrfjOcyOTY6\nКрысиный замок - https://t.me/+81Eixp_l6FFiMDBi")
            except:
                sendm(cwbot, pasyuk_id, traceback.format_exc())
        first = False
        time.sleep(20)


threading.Thread(target=castlefight_check, args=[]).start()

bargames = {}


def create_bar():
    game = creategame(chatid='bar')
    bargames.update(game)
    game = cwgames['bar']
    game['cwbar'] = True
    goo(game=game, bot=cwbot)


@cwbot.message_handler(commands=['castlefight'])
def castlefightinitt(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        sendm(cwbot, m.chat.id, "Начинается битва замков!")
        castlefight()
        showalllogs()
        sendm(cwbot, m.chat.id, "Битва замков закончилась!")
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())

@cwbot.message_handler(commands=['castlefight_test'])
def castlefightinitt(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        sendm(cwbot, m.chat.id, "Начинается ТЕСТОВАЯ битва замков без потери ресурсов!")
        castlefight(test=True)
        showalllogs()
        sendm(cwbot, m.chat.id, "ТЕСТОВАЯ битва замков закончилась!")
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())

@cwbot.message_handler(commands = ['fixrats'])
def fixratsss(m):
    amount = 0
    try:
        idd = int(m.text.split(' ')[1])
    except:
        return
    for ids in cwusers.find({}):
        if 'rat_toys' in ids['resources']:
            amount += ids['resources']['rat_toys']
            cwusers.update_one({'id':ids['id']},{'$set':{'resources.rat_toys':0}})
    cwusers.update_one({'id':idd},{'$inc':{'resources.rat_toys':amount}})
    sendm(cwbot, m.chat.id, 'all rat toys gone')

@cwbot.message_handler(commands=['givenoise'])
def givessss(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
        amount = int(m.text.split(' ')[2])
    except:
        return
    cwusers.update_one({'id': id}, {'$inc': {'noise_check': amount}})
    sendm(cwbot, m.chat.id, 'done!')

@cwbot.message_handler(commands=['resetspecials'])
def resetexppplll(m):
    if m.from_user.id != pasyuk_id:
        return
    cwusers.update_many({}, {'$set': {'last_explosion_use': 0}})
    cwusers.update_many({}, {'$set': {'last_dark_demon': 0}})
    cwusers.update_many({}, {'$set': {'last_summon_rat': 0}})
    cwusers.update_many({}, {'$set': {'last_necromant_reborn': 0}})
    sendm(cwbot, m.chat.id, 'done!')


@cwbot.message_handler(commands=['clearscore'])
def givessssclears(m):
    if m.from_user.id != pasyuk_id:
        return
    allcastles.update_one({}, {'$set': {'rat.score': 0, 'dark.score': 0, 'necromant.score': 0, 'explosion.score': 0}})
    sendm(cwbot, m.chat.id, 'cleared')

def sendlogs(ids, x, test = False):
    if ids == 'rat':
        logschat = -1001862559151
        logsbot = ratcastlelogsbot
    if ids == 'darkcastle':
        logschat = -1001891375607
        logsbot = darkcastlelogsbot
    if ids == 'necromant':
        logschat = -1001625669127
        logsbot = necromantcastlelogsbot
    if ids == 'explosion' or ids == 'explosions':
        logschat = -1001835306492
        logsbot = explosioncastlelogsbot
    if not test:
        logsbot.send_message(logschat, "⚔️Битва " + str(datetime.now().hour) + ":00⚔️")
    else:
        logsbot.send_message(logschat, "⚔️ТЕСТОВАЯ Битва без потери ресурсов " + str(datetime.now().hour) + ":00⚔️")
    time.sleep(3)
    for idss in x:
        curtext = idss
        if len(curtext) <= 4000:
            try:
                logsbot.send_message(logschat, curtext)
            except:
                sendm(cwbot, 441399484, traceback.format_exc())
        else:
            sumtexts = []
            while len(curtext) > 4000:
                sumtexts.append(curtext[:4000])
                curtext = curtext[4000:]
            for idsss in sumtexts:
                logsbot.send_message(logschat, idsss)
                time.sleep(3)
        time.sleep(3)
    time.sleep(3)
    logsbot.send_message(logschat, "⚔️Конец битвы⚔️")

def showalllogs(test = False):
    try:
        for ids in allcastlesbattletext:
            textcopy = allcastlesbattletext[ids]
            threading.Thread(target = sendlogs, args = [ids, textcopy, test]).start()
        allcastlesbattletext.clear()
    except:
        sendm(cwbot, 441399484, traceback.format_exc())


@cwbot.message_handler(commands=['showalllogs'])
def showalllogssss(m):
    if m.from_user.id != pasyuk_id:
        return
    showalllogs()


@cwbot.message_handler(commands=['givescore'])
def showalllogssssgivescore(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        castle = m.text.split(' ')[1]
        amount = int(m.text.split(' ')[2])
    except:
        return
    allcastles.update_one({}, {'$inc': {castle + '.score': amount}})
    sendm(cwbot, m.chat.id, 'done')


#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################
#####################################################################################################################################################

def check_users_stamina():
    while True:
        try:
            x = cwusers.find({})
            for ids in x:
                try:
                    needtime = 3600
                    if ids['current_act'] == None:
                        if 'goodsleep' in ids['equipped_skills']:
                            if ids['equipped_skills']['goodsleep']['lvl'] == 1:
                                needtime -= 300
                            if ids['equipped_skills']['goodsleep']['lvl'] == 2:
                                needtime -= 600
                            if ids['equipped_skills']['goodsleep']['lvl'] == 3:
                                needtime -= 900
                    if time.time() - ids['last_stamina_regen'] >= needtime:
                        if ids['stamina'] < ids['maxstamina']:
                            cwusers.update_one({'id': ids['id']}, {'$inc': {'stamina': 1}})
                            ids['stamina'] += 1
                            if ids['stamina'] == ids['maxstamina']:
                                try:
                                    sendm(cwbot, ids['id'], '🔋Энергия полностью восстановлена, вы готовы к сражению!')
                                except:
                                    pass
                            cwusers.update_one({'id': ids['id']}, {'$set': {'last_stamina_regen': time.time()}})
                    if time.time() - ids['last_hp_regen'] >= 6:
                        if ids['hp'] < ids['maxhp']:
                            cwusers.update_one({'id': ids['id']}, {'$inc': {'hp': 1}})
                            cwusers.update_one({'id': ids['id']}, {'$set': {'last_hp_regen': time.time()}})
                except:
                    try:
                        sendm(cwbot, pasyuk_id, traceback.format_exc())
                    except:
                        pass
        except:
            try:
                sendm(cwbot, pasyuk_id, traceback.format_exc())
            except:
                pass
        time.sleep(20)


threading.Thread(target=check_users_stamina, args=[]).start()

for ids in cwusers.find({}):
    if ids['current_act'] in ['quest_rathunt', 'quest_castle_protect', 'quest_noise_check', 'wait_help', 'troll']:
        cwusers.update_one({'id': ids['id']}, {'$set': {'current_act': None}})
        if ids['current_act'] != 'quest_noise_check':
            if ids['stamina'] < ids['maxstamina']:
                if ids['current_act'] not in ['wait_help']:
                    cwusers.update_one({'id': ids['id']}, {'$inc': {'stamina': 1}})
            if ids['current_act'] == 'troll':
                cwusers.update_one({'id': ids['id']}, {'$set': {'troll': 1}})
        else:
            if ids['noise_check'] < ids['max_noise_check']:
                cwusers.update_one({'id': ids['id']}, {'$inc': {'noise_check': 1}})
        try:
            sendm(cwbot, ids['id'],
                               'Бот был перезапущен, квест был отменён, затраченное действие было возвращено.')
        except:
            pass


# cwusers.update_many({},{'$set':{'max_items_for_battle':1}})
# cwusers.update_many({},{'$set':{'maxstamina':7}})
# cwusers.update_many({},{'$set':{'current_act':None, 'gold':0, 'resources':{}, 'exp':0, 'lvl':1, 'lvl_points':0, 'attack_target':None,
#                                'inventory':{},'lastbattlelogs':[], 'noise_check':0, 'pogs':0, 'equipped_greedy':0, 'equipped_goodsleep':0,
#                                'dmglimit':5,'maxdmglimit':5, 'birzha':[]}})

def create_cw_profile(m=None, name=None, username=None, uid=None, castle=None, who_invited=None):
    if m != None:
        name = m.from_user.first_name
        username = str(m.from_user.username)
        uid = m.from_user.id
        castle = None
    else:
        name = name
        username = username
        uid = uid
        castle = castle
    x = {
        'name': name,
        'username': username,
        'id': uid,
        'castle': castle,
        'lvl': 1,
        'exp': 0,
        'gold': 0,
        'lvl_points': 0,
        'stamina': 5,
        'maxstamina': 5,
        'hp': 3,
        'maxhp': 3,
        'dmglimit': 5,
        'maxdmglimit': 5,
        'energy': 4,
        'maxenergy': 4,
        'current_act': None,
        'attack_target': None,
        'skills': {},
        'skills_for_battle': {},
        'equipped_skills': {},
        'weapon_for_battle': None,
        'weapon': None,
        'max_skills': 1,
        'items': {},
        'items_for_battle': [],
        'max_items_for_battle': 1,
        'inventory': {},
        'resources': {},
        'lastbattlelogs': [],
        'noise_check': 0,
        'max_noise_check': 5,
        'last_stamina_regen': 0,
        'referal_friends': [],
        'who_invited': who_invited,
        'last_hp_regen': 0,
        'pogs': 0,
        'changebattlegold': 0,
        'changebattleres': {},
        'changebattleexp': 0,
        'set_name': False,
        'equipped_greedy': 0,
        'equipped_goodsleep': 0,
        'birzha': [],
        'last_activity': time.time(),
        'troll':1,
        'bot_counter': 0,
        'false_answer': 0
    }
    # x['skills'].update(create_cw_skill(code='boots', name='Удобные ботинки', lvl=1, skill_slots=1))
    return x


def need_forest_to_next_lvl(lvl):
    need = foresttable[lvl]['forestfornextlvl']
    return need


def need_exp_to_next_lvl(lvl):
    ANSWER = lvltable[lvl]['totalexp'] + lvltable[lvl]['expfornextlvl']
    return ANSWER


def exp_for_quest(lvl):
    middle_exp = (lvltable[lvl]['expfornextlvl']) / need_forest_to_next_lvl(lvl)
    return middle_exp
        

# expforquest = {}
# i = 1
# while i <= 39:
#    needexp = exp_for_quest(i)
#    expforquest.update({i:needexp})
#    i += 1

# needexpforlvl = {}
# i = 1
# while i <= 39:
#    needexp = need_exp_to_next_lvl(i)
#    needexpforlvl.update({i:needexp})
#    i += 1
cwban = db.cwban
cwblocked = []  # [213720647]


def is_user_banned(m):
    if m.from_user.id in cwblocked:
        return True
    return False


def cwblockedcheck():
    while True:
        for ids in cwban.find({}):
            if ids['id'] not in cwblocked:
                cwblocked.append(ids['id'])
        time.sleep(30)


threading.Thread(target=cwblockedcheck, args=[]).start()


@cwbot.message_handler(commands=['unbanname'])
def unbannnn(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        name = m.text.split('?')[1]
    except:
        sendm(cwbot, m.chat.id, 'Формат:\n/banname ?name')
        return
    x = cwusers.find_one({'name': name})
    if x == None or x['set_name'] == False:
        sendm(cwbot, m.chat.id, 'Игрока с таким именем не существует!')
        return
    if cwban.find_one({'id': x['id']}) == None:
        sendm(cwbot, m.chat.id, 'Игрок не забанен!')
        return
    cwban.delete_one({'id': x['id']})
    sendm(cwbot, m.chat.id, 'Игрок разблокирован!')


@cwbot.message_handler(commands=['banname'])
def bannnn(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        name = m.text.split('?')[1]
    except:
        sendm(cwbot, m.chat.id, 'Формат:\n/banname ?name')
        return
    x = cwusers.find_one({'name': name})
    if x == None or x['set_name'] == False:
        sendm(cwbot, m.chat.id, 'Игрока с таким именем не существует!')
        return
    if cwban.find_one({'id': x['id']}) != None:
        sendm(cwbot, m.chat.id, 'Игрок уже забанен!')
        return
    cwban.insert_one({'id': x['id'], 'name': x['name']})
    sendm(cwbot, m.chat.id, 'Игрок заблокирован!')


@cwbot.message_handler(commands=['banid'])
def bannnn(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
    except:
        sendm(cwbot, m.chat.id, 'Формат:\n/banid id')
        return
    x = cwusers.find_one({'id': id})
    if x == None or x['set_name'] == False:
        sendm(cwbot, m.chat.id, 'Игрока с таким id не существует!')
        return
    if cwban.find_one({'id': x['id']}) != None:
        sendm(cwbot, m.chat.id, 'Игрок уже забанен!')
        return
    cwban.insert_one({'id': x['id'], 'name': x['name']})
    sendm(cwbot, m.chat.id, 'Игрок заблокирован!')


@cwbot.message_handler(func=lambda m: is_user_banned(m))
def banneduserrrr(m):
    return


@cwbot.callback_query_handler(func=lambda call: is_user_banned(call))
def banneduserrrr(call):
    return


def create_cw_skill(code, name, lvl, skill_slots=1):
    return {code: {'name': name, 'lvl': lvl, 'skill_slots': skill_slots}}


def get_castle_kb(not_give=None):
    kb = types.ReplyKeyboardMarkup()
    if not_give != 'rat':
        kb.add(types.KeyboardButton("🐭Крысиный замок"))
    if not_give != 'darkcastle':
        kb.add(types.KeyboardButton("👁Замок тьмы"))
    if not_give != 'necromant':
        kb.add(types.KeyboardButton("🖤Замок некроманта"))
    if not_give != 'explosion':
        kb.add(types.KeyboardButton("💮Замок магии взрывов"))
    return kb


@cwbot.message_handler(commands=['repairitems'])
def stickerrrupdpsfdsp(m):
    if m.from_user.id == pasyuk_id:
        try:
            id = int(m.text.split(' ')[1])
        except:
            amount = 1

        cwusers.update_one({'id': id}, {'$set': {'items_for_battle': []}})
        sendm(cwbot, pasyuk_id, 'Done')


@cwbot.message_handler(commands=['regenstamina'])
def givessss(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
        amount = int(m.text.split(' ')[2])
    except:
        return
    cwusers.update_one({'id': id}, {'$inc': {'stamina': amount}})
    sendm(cwbot, m.chat.id, 'done!')


@cwbot.message_handler(commands=['givestamina'])
def givessss(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
        amount = int(m.text.split(' ')[2])
    except:
        return
    cwusers.update_one({'id': id}, {'$inc': {'maxstamina': amount}})
    sendm(cwbot, m.chat.id, 'done!')


@cwbot.message_handler(commands=['resetname'])
def givessss(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
    except:
        return
    cwusers.update_one({'id': id}, {'$set': {'set_name': False}})
    sendm(cwbot, m.chat.id, 'Done')


def is_main_chat(m):
    return m.chat.id == int(officialchat)


@cwbot.message_handler(func=lambda m: is_main_chat(m))
def msgs_from_mainchatt(m):
    return


@cwbot.message_handler(commands=['start'])
def cwstarttt(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user == None:
        try:
            ref = int(m.text.split(' ')[1])
        except:
            ref = None
        if ref == m.from_user.id:
            sendm(cwbot, m.chat.id, 'Нельзя регистрироваться по своей рефералке!')
            return
            ref = None
        whoinv = cwusers.find_one({'id': ref})
        if whoinv == None:
            ref = None
        cwusers.insert_one(create_cw_profile(m, who_invited=ref))
        sendm(cwbot, pasyuk_id, m.from_user.first_name + ' зарегистрировался!')
        user = cwusers.find_one({'id': m.from_user.id})
        if ref != None:
            sendm(cwbot, ref,
                               m.from_user.first_name + ' зарегистрировался в игре по вашей ссылке! Когда он получит 5, 10 и 15 уровни - вы получите +1 к максимальной стамине!')
            sendm(cwbot, pasyuk_id, whoinv['name'] + ' пригласил ' + m.from_user.first_name + '!')
    if user['castle'] == None:
        kb = get_castle_kb()
        sendm(cwbot, m.chat.id,
                           'Выберите замок, за который будете сражаться - потом вы не сможете изменить выбор:',
                           reply_markup=kb)
    else:
        text = get_profile_text(m)
        kb = main_menu_kb()
        sendm(cwbot, m.chat.id, text, reply_markup=kb)


def is_user_registered(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user == None:
        cwusers.insert_one(create_cw_profile(m))
        sendm(cwbot, pasyuk_id, m.from_user.first_name + ' зарегистрировался!')
        return False
    if user['castle'] == None:
        return False
    return True


@cwbot.message_handler(commands=['create_npc'])
def create_npc_cw(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        name = m.text.split('?')[1]
        uid = m.text.split('?')[2]
        castle = m.text.split('?')[3]
    except:
        sendm(cwbot, m.chat.id, 'Ошибка! Используйте следующий формат ввода:\n/create_npc ?name?id?castle')
        return
    user = cwusers.find_one({'id': uid})
    if user != None:
        sendm(cwbot, m.chat.id, 'Ошибка! НПС с таким айди уже существует!')
        return
    user = cwusers.find_one({'name': name})
    if user != None:
        sendm(cwbot, m.chat.id, 'Ошибка! игрок с таким именем уже существует!')
        return
    castlename = castle_to_name(castle)
    if castlename == None:
        sendm(cwbot, m.chat.id, 'Ошибка! Замка с таким кодом не существует!')
        return
    try:
        cwusers.insert_one(create_cw_profile(name=name, uid=uid, castle=castle))
        cwusers.update_one({'id': m.from_user.id}, {'$set': {'controllable_npc': uid}})
        sendm(cwbot, m.chat.id,
                           'НПС ' + name + ' с айди "' + uid + '" успешно создан в замке ' + castlename + '!')
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(commands=['del_npc'])
def create_npc_cw(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        uid = m.text.split(' ')[1]
    except:
        sendm(cwbot, m.chat.id, 'Ошибка! Используйте следующий формат ввода:\n/del_npc id')
        return
    npc = cwusers.find_one({'id': uid})
    if npc == None:
        sendm(cwbot, m.chat.id, 'Ошибка! НПС с таким айди не существует!')
        return
    cwusers.delete_one({'id': npc['id']})
    sendm(cwbot, m.chat.id, 'НПС с айди ' + npc['id'] + ' удален!')


@cwbot.message_handler(commands=['select_npc'])
def select_npc_cw(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        uid = m.text.split(' ')[1]
    except:
        sendm(cwbot, m.chat.id, 'Ошибка! Введите команду в следующем формате:\n/select_npc uid')
        return
    user = cwusers.find_one({'id': uid})
    if user == None:
        sendm(cwbot, m.chat.id, 'Ошибка! НПС с таким айди не существует!')
        return
    cwusers.update_one({'id': m.from_user.id}, {'$set': {'controllable_npc': uid}})
    sendm(cwbot, m.chat.id,
                       'Выбран НПС для контроля: ' + user['name'] + ' из ' + castle_to_name(user['castle']) + '!')


@cwbot.message_handler(commands=['calclvl'])
def calclvvlll(m):
    if m.from_user.id != pasyuk_id:
        return
    lvl = 1
    text = ''
    while lvl < 40:
        text += 'lvl.' + str(lvl) + ': totalexp=' + str(lvltable[lvl]['totalexp']) + ', exp for next lvl = ' + str(
            lvltable[lvl]['expfornextlvl']) + '\n'
        lvl += 1
    sendm(cwbot, m.chat.id, text)
    lvl = 1
    text = ''
    while lvl < 40:
        text += 'lvl.' + str(lvl) + ': totalforest=' + str(
            foresttable[lvl]['totalforest']) + ', forest for next lvl = ' + str(
            foresttable[lvl]['forestfornextlvl']) + '\n'
        lvl += 1
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(commands=['clear_castle'])
def clear_ccc(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        idd = int(m.text.split(' ')[1])
    except:
        return
    cwusers.update_one({'id': idd}, {'$set': {'castle': None}})
    sendm(cwbot, m.chat.id, 'done')


@cwbot.message_handler(commands=['attack_npc'])
def attack_npc_cw(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        try:
            castle = m.text.split(' ')[1]
        except:
            sendm(cwbot, m.chat.id, 'Ошибка! Введите команду в следующем формате:\n/attack_npc castle')
            return
        castlename = castle_to_name(castle)
        if castlename == None:
            sendm(cwbot, m.chat.id, 'Ошибка! Замка с таким кодом не существует!')
            return
        user = cwusers.find_one({'id': m.from_user.id})
        npc = cwusers.find_one({'id': user['controllable_npc']})
        if npc == None:
            sendm(cwbot, m.chat.id, 'Ошибка! Сначала выберите НПС командой /select_npc!')
            return
        cwusers.update_one({'id': npc['id']}, {'$set': {'attack_target': castle, 'current_act': 'attack'}})
        sendm(cwbot, m.chat.id, 'Успешно выбрана цель атаки для ' + npc['name'] + ' из ' + castle_to_name(
            npc['castle']) + ': ' + castlename + '!')
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(commands=['def_npc'])
def attack_npc_cw(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        user = cwusers.find_one({'id': m.from_user.id})
        npc = cwusers.find_one({'id': user['controllable_npc']})
        if npc == None:
            sendm(cwbot, m.chat.id, 'Ошибка! Сначала выберите НПС командой /select_npc!')
            return
        cwusers.update_one({'id': npc['id']}, {'$set': {'current_act': 'def'}})
        sendm(cwbot, m.chat.id, 'Успешно выбрано действие для ' + npc['name'] + ' из ' + castle_to_name(
            npc['castle']) + ': 🛡Защита ' + castle_to_name(npc['castle']) + '!')
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(commands=['givegold'])
def givegoldd(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        uid = int(m.text.split(' ')[1])
        gold = int(m.text.split(' ')[2])
    except:
        sendm(cwbot, m.chat.id, 'Ошибка! Используйте следующий формат:\n/givegold uid gold')
        return
    cwusers.update_one({'id': uid}, {'$inc': {'gold': gold}})
    sendm(cwbot, m.chat.id, 'Золото получено пользователем!')


@cwbot.message_handler(commands=['givepogs'])
def givegoldd(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        uid = int(m.text.split(' ')[1])
        gold = int(m.text.split(' ')[2])
    except:
        sendm(cwbot, m.chat.id, 'Ошибка! Используйте следующий формат:\n/givegold uid gold')
        return
    cwusers.update_one({'id': uid}, {'$inc': {'pogs': gold}})
    sendm(cwbot, m.chat.id, 'Поги получены пользователем!')


@cwbot.message_handler(commands=['giverecipe'])
def giverrrr(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        recipecode = m.text.split(' ')[1]
    except:
        return
    try:
        user = cwusers.find_one({'id': m.reply_to_message.from_user.id})
        color = random.choice(["blue", "red", "green"])
        # sendm(cwbot, m.chat.id, str(user))
        # recipecode = "recipe_"+color
        objectcode = generate_object_code(user)
        recipename = resource_to_name(recipecode)
        res = create_recipe(recipecode, objectcode, recipename, undefined=False, color=color)
        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: res}})
        sendm(cwbot, m.chat.id, 'Рецепт ' + recipecode + ' получен.')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['giveurecipe'])
def giverrrr(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
        color = m.text.split(' ')[2]
    except:
        return
    try:
        user = cwusers.find_one({'id': id})
        recipecode = "recipe_" + color
        objectcode = generate_object_code(user)
        recipename = resource_to_name(recipecode)
        res = create_recipe(recipecode, objectcode, recipename, undefined=True, color=color)
        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: res}})
        sendm(cwbot, m.chat.id, 'Рецепт ' + recipecode + ' получен.')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['giveuscroll'])
def giverrrr(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
    except:
        return
    try:
        user = cwusers.find_one({'id': id})
        # sendm(cwbot, m.chat.id, str(user))
        objectcode = generate_object_code(user)
        scroll = create_undefined_scroll(objectcode, resource_to_name("undefined_scroll"))
        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: scroll}})
        sendm(cwbot, m.chat.id, 'Неизвестный свиток получен.')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['givelvlpoints'])
def giverrrr(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
        amount = int(m.text.split(' ')[2])
    except:
        return
    try:
        user = cwusers.find_one({'id': id})
        # sendm(cwbot, m.chat.id, str(user))
        cwusers.update_one({'id': user['id']}, {'$inc': {'lvl_points': amount}})
        sendm(cwbot, m.chat.id, 'Очки лвла получены.')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['resetref'])
def giverrrr(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
    except:
        return
    try:
        user = cwusers.find_one({'id': id})
        cwusers.update_one({'id': user['id']}, {'$set': {'who_invited': None}})
        sendm(cwbot, m.chat.id, 'Reset referal.')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['removeweaponfromuser'])
def removewww(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        try:
            itemcode = m.text.split(' ')[2]
            id = int(m.text.split(' ')[1])
        except:
            return
        user = cwusers.find_one({'id': id})
        if itemcode not in user['inventory']:
            sendm(cwbot, m.chat.id, 'not in inv')
            return
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['removeskillfromuser'])
def removepricelll(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        try:
            skillcode = m.text.split(' ')[2]
            id = int(m.text.split(' ')[1])
        except:
            return
        sendm(cwbot, m.chat.id, 'Begin')
        for ids in cwusers.find({}):
            if ids['id'] == id:
                user = cwusers.find_one({'id': ids['id']})
                wasp = False
                plvl = 0
                if skillcode in user['skills']:
                    cwusers.update_one({'id': user['id']}, {'$unset': {'skills.' + skillcode: 1}})
                    wasp = True
                    plvl = user['skills'][skillcode]['lvl']
                if skillcode in user['equipped_skills']:
                    cwusers.update_one({'id': user['id']}, {'$unset': {'equipped_skills.' + skillcode: 1}})
                    wasp = True
                    plvl = user['equipped_skills'][skillcode]['lvl']
                if wasp:
                    sendm(cwbot, m.chat.id, 'was skills ' + user['name'] + ' = ' + str(user['skills']))
                    sendm(cwbot, m.chat.id,
                                       'was equipped skills ' + user['name'] + ' = ' + str(user['equipped_skills']))
                    sendm(cwbot, m.chat.id, 'was DNA ' + user['name'] + ' = ' + str(
                        user['lvl_points']) + '\nWAS pogs = ' + str(user['pogs']))
                    sendm(cwbot, m.chat.id, user['name'] + ' потерял ' + skillcode + ' лвла ' + str(plvl))
                    if plvl == 2:
                        cwusers.update_one({'id': user['id']}, {'$inc': {'lvl_points': 3}})
                    if plvl == 3:
                        cwusers.update_one({'id': user['id']}, {'$inc': {'lvl_points': 12}})
                    cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': 1}})
                    scrollamount = plvl
                    for i in range(scrollamount):
                        objectcode = generate_object_code(user)
                        newscroll = create_undefined_scroll(objectcode, resource_to_name("undefined_scroll"))
                        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: newscroll}})
                        user = cwusers.find_one({'id': user['id']})
                    sendm(cwbot, m.chat.id, 'now skills ' + user['name'] + ' = ' + str(user['skills']))
                    sendm(cwbot, m.chat.id,
                                       'now equipped skills ' + user['name'] + ' = ' + str(user['equipped_skills']))
                    sendm(cwbot, m.chat.id, 'now DNA ' + user['name'] + ' = ' + str(
                        user['lvl_points']) + '\nNOW pogs = ' + str(user['pogs']))

                for ids in user['inventory']:
                    if user['inventory'][ids]['type'] == 'scroll':
                        if user['inventory'][ids]['code'] == skillcode:
                            cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + ids: 1}})
                            objectcode = generate_object_code(user)
                            newscroll = create_undefined_scroll(objectcode, resource_to_name("undefined_scroll"))
                            cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: newscroll}})
                            cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': 1}})
                            sendm(cwbot, m.chat.id, user['name'] + ' get undefined scroll')

        sendm(cwbot, m.chat.id, 'End')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['removeobject'])
def removepricelllq(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        try:
            id = int(m.text.split(' ')[1])
            objectcode = m.text.split(' ')[2]
        except:
            return
        cwusers.update_one({'id': id}, {'$unset': {'inventory.' + objectcode: 1}})
        sendm(cwbot, m.chat.id, 'done')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['removeskill'])
def removepricelll(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        try:
            skillcode = m.text.split(' ')[1]
        except:
            return
        sendm(cwbot, m.chat.id, 'Begin')
        for ids in cwusers.find({}):
            user = cwusers.find_one({'id': ids['id']})
            wasp = False
            plvl = 0
            if skillcode in user['skills']:
                cwusers.update_one({'id': user['id']}, {'$unset': {'skills.' + skillcode: 1}})
                wasp = True
                plvl = user['skills'][skillcode]['lvl']
            if skillcode in user['equipped_skills']:
                cwusers.update_one({'id': user['id']}, {'$unset': {'equipped_skills.' + skillcode: 1}})
                wasp = True
                plvl = user['equipped_skills'][skillcode]['lvl']
            if wasp:
                sendm(cwbot, m.chat.id, 'was skills ' + user['name'] + ' = ' + str(user['skills']))
                sendm(cwbot, m.chat.id,
                                   'was equipped skills ' + user['name'] + ' = ' + str(user['equipped_skills']))
                sendm(cwbot, m.chat.id,
                                   'was DNA ' + user['name'] + ' = ' + str(user['lvl_points']) + '\nWAS pogs = ' + str(
                                       user['pogs']))
                sendm(cwbot, m.chat.id, user['name'] + ' потерял ' + skillcode + ' лвла ' + str(plvl))
                if plvl == 2:
                    cwusers.update_one({'id': user['id']}, {'$inc': {'lvl_points': 3}})
                if plvl == 3:
                    cwusers.update_one({'id': user['id']}, {'$inc': {'lvl_points': 12}})
                cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': 1}})
                scrollamount = plvl
                for i in range(scrollamount):
                    objectcode = generate_object_code(user)
                    newscroll = create_undefined_scroll(objectcode, resource_to_name("undefined_scroll"))
                    cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: newscroll}})
                    user = cwusers.find_one({'id': user['id']})
                sendm(cwbot, m.chat.id, 'now skills ' + user['name'] + ' = ' + str(user['skills']))
                sendm(cwbot, m.chat.id,
                                   'now equipped skills ' + user['name'] + ' = ' + str(user['equipped_skills']))
                sendm(cwbot, m.chat.id,
                                   'now DNA ' + user['name'] + ' = ' + str(user['lvl_points']) + '\nNOW pogs = ' + str(
                                       user['pogs']))

            for ids in user['inventory']:
                if user['inventory'][ids]['type'] == 'scroll':
                    if user['inventory'][ids]['code'] == skillcode:
                        cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + ids: 1}})
                        objectcode = generate_object_code(user)
                        newscroll = create_undefined_scroll(objectcode, resource_to_name("undefined_scroll"))
                        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: newscroll}})
                        cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': 1}})
                        sendm(cwbot, m.chat.id, user['name'] + ' get undefined scroll')

        sendm(cwbot, m.chat.id, 'End')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['medium_loot'])
def mediumlootgett(m):
    if m.from_user.id != pasyuk_id:
        return
    sendm(cwbot, m.chat.id, 'Начало обработки.')
    try:
        quest = m.text.split(' ')[1]
        if quest not in ["patrol", "rathunt", "duel"]:
            quest = "patrol"
    except:
        quest = "patrol"
    try:
        repeats = int(m.text.split(' ')[2])
    except:
        repeats = 100000
    sum_amount = {}
    for i in range(repeats):
        loot = get_loot_for_quest(quest=quest)
        for ids in loot:
            if ids not in sum_amount:
                sum_amount[ids] = loot[ids]
            else:
                sum_amount[ids] += loot[ids]

    text = 'Квест: ' + quest + '. Средние значения ресурсов:\n\n'
    for ids in sum_amount:
        medium = sum_amount[ids] / repeats
        text += resource_to_name(ids) + ': ' + str(medium) + '\n'
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(commands=['giveresource'])
def giverrrr(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
        resource = m.text.split(' ')[2]
        amount = int(m.text.split(' ')[3])
    except:
        return
    try:
        user = cwusers.find_one({'id': id})
        # sendm(cwbot, m.chat.id, str(user))
        if resource in user['resources']:
            cwusers.update_one({'id': user['id']}, {'$inc': {'resources.' + resource: amount}})
        else:
            cwusers.update_one({'id': user['id']}, {'$set': {'resources.' + resource: amount}})
        sendm(cwbot, m.chat.id, 'Ресурс получен.')
    except:
        sendm(cwbot, m.chat.id, traceback.format_exc())


@cwbot.message_handler(commands=['sethpregen'])
def sethpregennn(m):
    if m.from_user.id != pasyuk_id:
        return
    cwusers.update_one({'id': m.from_user.id}, {'$set': {'last_hp_regen': time.time()}})
    sendm(cwbot, m.chat.id, 'Fixed!')


kings = [792414733, 674065123, pasyuk_id, 733334564, 611961761, 1134827568]


def castlewarriorsfunc(m):
    if m.from_user.id not in kings:
        return
    user = cwusers.find_one({'id': m.from_user.id})
    text = 'Состав воинов замка ' + castle_to_name(user['castle']) + ':\n'
    for ids in cwusers.find({'castle': user['castle']}):
        if ids['castle'] == user['castle']:
            name = ids['name']
            try:
                if ids['set_name'] == False:
                    name = 'Не установил(а) игровое имя'
            except:
                pass
            uact = get_player_state(ids)
            text += '(' + uact + ') ```' + str(ids['id']) + '``` [' + name + '](tg://user?id=' + str(
                ids['id']) + ') 🏅' + str(ids['lvl']) + '\n'
    doptext = []
    if len(text) > 3000:
        while len(text) > 3000:
            text1 = text[:3000]
            doptext.append(text1)
            text = text[3000:]
        doptext.append(text)
        for ids in doptext:
            try:
                sendm(cwbot, m.chat.id, ids, parse_mode='markdown')
            except:
                try:
                    sendm(cwbot, m.chat.id, ids)
                except:
                    sendm(cwbot, 441399484, traceback.format_exc())
            time.sleep(3)
        #sendm(cwbot, m.chat.id, text, parse_mode='markdown')
    else:
        sendm(cwbot, m.chat.id, text, parse_mode='markdown')

@cwbot.message_handler(commands=['castle_warriors'])
def castleww(m):
    threading.Thread(target = castlewarriorsfunc, args = [m]).start()


@cwbot.message_handler(commands=['clear_inv'])
def givegolddclearinv(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        cwusers.update_one({'id': m.from_user.id}, {'$set': {'inventory': {}, 'resources': {}}})
    except:
        sendm(cwbot, m.chat.id, 'Ошибка!')
        return
    sendm(cwbot, m.chat.id, 'Инвентарь очищен!')


@cwbot.callback_query_handler(func=lambda call: not is_user_registered(call))
def calls_from_unregistered_user(call):
    return


@cwbot.message_handler(func=lambda m: not is_user_registered(m))
def msgs_from_notreg_user(m):
    if m.text not in ["🐭Крысиный замок", "👁Замок тьмы", "🖤Замок некроманта", "💮Замок магии взрывов"]:
        kb = get_castle_kb()
        sendm(cwbot, m.chat.id,
                           'Выберите замок, за который будете сражаться: (это тестовая версия игры, потом замок можно будет поменять)',
                           reply_markup=kb)
        return
    if m.text == "🐭Крысиный замок":
        cwusers.update_one({'id': m.from_user.id}, {'$set': {'castle': 'rat'}})
    if m.text == "👁Замок тьмы":
        cwusers.update_one({'id': m.from_user.id}, {'$set': {'castle': 'darkcastle'}})
    if m.text == "🖤Замок некроманта":
        cwusers.update_one({'id': m.from_user.id}, {'$set': {'castle': 'necromant'}})
    if m.text == "💮Замок магии взрывов":
        cwusers.update_one({'id': m.from_user.id}, {'$set': {'castle': 'explosion'}})
    kb = types.ReplyKeyboardRemove()
    sendm(cwbot, m.chat.id,
                       'Теперь вы живете и сражаетесь за ' + m.text + '. Набирайтесь опыта и сил, чтобы одолеть врага! Информация о вашем воине - /me.',
                       reply_markup=kb)


def is_user_setname(m):
    user = cwusers.find_one({'id': m.from_user.id})
    try:
        if user['set_name'] == False:
            return True
    except:
        cwusers.update_one({'id': m.from_user.id}, {'$set': {'set_name': False}})
        return True
    return False

@cwbot.message_handler(commands=['resetname'])
def setnnname(m):
    if m.from_user.id != 441399484:
        return
    try:
        target = int(m.text.split(' ')[1])
    except:
        sendm(cwbot, m.chat.id, 'Формат команды: /resetname 748752225')
        return
    cwusers.update_one({'id':target},{'$set':{'set_name':False}})
    sendm(cwbot, m.chat.id, 'Сброшено имя для '+str(target))

@cwbot.message_handler(commands=['setname'])
def setnnname(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['set_name'] != False:
        sendm(cwbot, m.chat.id, 'Вы уже установили себе игровое имя!')
        return
    try:
        newname = m.text.split('/setname ')[1]
    except:
        sendm(cwbot, m.chat.id, 'Неверный формат ввода! Пример:\n/setname Иван')
        return
    allowsymb = [' ', 'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с',
                 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ',
                 'ъ', 'ы', 'ь', 'э', 'ю', 'я', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
                 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
    adds = []
    for ids in allowsymb:
        if ids != ' ':
            adds.append(ids.capitalize())
    for ids in adds:
        allowsymb.append(ids)
    for ids in newname:
        if ids not in allowsymb:
            sendm(cwbot, m.chat.id, 'В нике разрешены только русские буквы, английские буквы и пробелы!')
            return
    if len(newname) > 25:
        sendm(cwbot, m.chat.id, 'Максимальная длина ника - 25 символов!')
        return
    for ids in cwusers.find({}):
        if ids['name'] == newname and ids['set_name']:
            sendm(cwbot, m.chat.id, 'Такое имя уже занято!')
            return
    cwusers.update_one({'id': m.from_user.id}, {'$set': {'name': newname, 'set_name': True}})
    kb = main_menu_kb()
    sendm(cwbot, m.chat.id, 'Теперь вас будут называть ' + newname + '!', reply_markup=kb)
    l = 'Ошибка. Обратитесь к Пасюку.'
    if user['castle'] == 'rat':
        l = ratslink
    if user['castle'] == 'darkcastle':
        l = darklink
    if user['castle'] == 'necromant':
        l = necromantlink
    if user['castle'] == 'explosion':
        l = explosionlink
    sendm(cwbot, m.chat.id,
                       'Ссылка на ваш замковый чат: ' + l + '. Ссылка на общий чат - @Veganochatwars. Канал с обновлениями бота - @Veganochatwars_updates.')


@cwbot.message_handler(func=lambda m: is_user_setname(m))
def msgs_from_notregname_user(m):
    sendm(cwbot, m.chat.id, 'Перед началом жизни в замке выберите себе имя командой /setname!')
    return


@cwbot.message_handler(commands=['referal'])
def reffff(m):
    ref = str(m.from_user.id)
    sendm(cwbot, m.chat.id,
                       'Вот ваша ссылка для приглашения друзей:\n' + 'https://telegram.me/Veganochatwars_bot?start=' + ref + '\n\nЕсли перешедший по ссылке игрок ' + \
                       'получает 5, 10 и 15 уровни - вы получаете +1 стамины за каждый!')


def is_castle_fight():
    current_datetime = datetime.now()
    if current_datetime.hour in [22, 6, 14]:
        if current_datetime.minute in [0, 1]:
            return True
    return False


def is_battle_near():
    current_datetime = datetime.now()
    if current_datetime.hour in [21, 5, 13]:
        if current_datetime.minute >= 52:
            return True
    return False


@cwbot.message_handler(func=lambda m: is_castle_fight())
def castlefightnoww(m):
    text = 'Ветер воет на лугах, в замках непривычно тихо. Воины залечивают свои раны и чинят доспехи после ' + \
           'утомительного боя. Все заведения и ворота замка закрываются на ближайшие пару минут. Обсудить бой можно в @Veganochatwars. Канал исключительно с ' + \
           'отчетами битв - @Veganochatwars_reports.'
    sendm(cwbot, m.chat.id, text)


def is_attack_message(m):
    if m.text == "🗡Атака":
        return True
    return False


def is_def_message(m):
    if m.text == "🛡Защита":
        return True
    return False


@cwbot.message_handler(commands=['castlelink'])
def castlelinkk(m):
    user = cwusers.find_one({'id': m.from_user.id})
    l = 'Ошибка. Обратитесь к Пасюку.'
    if user['castle'] == 'rat':
        l = ratslink
    if user['castle'] == 'darkcastle':
        l = darklink
    if user['castle'] == 'necromant':
        l = necromantlink
    if user['castle'] == 'explosion':
        l = explosionlink
    sendm(cwbot, m.chat.id,
                       'Ссылка на ваш замковый чат: ' + l + '. Ссылка на общий чат - @Veganochatwars. Канал с обновлениями бота - @Veganochatwars_updates.')


@cwbot.message_handler(func=lambda m: is_attack_message(m))
def atkkk(m):
    user = cwusers.find_one({'id': m.from_user.id})
    attackkb = get_castle_kb(not_give=user['castle'])
    sendm(cwbot, m.chat.id, 'Выберите замок для атаки:', reply_markup=attackkb)


@cwbot.message_handler(commands=['clear_castle'])
def delacc(m):
    return
    if m.from_user.id != pasyuk_id:
        return
    cwusers.delete_one({'id': m.from_user.id})
    sendm(cwbot, m.chat.id, 'Account removed.')


@cwbot.message_handler(commands=['clear_lvl'])
def delaclvlc(m):
    # return
    if m.from_user.id != pasyuk_id:
        return
    cwusers.update_one({'id': m.from_user.id}, {'$set': {'lvl': 1, 'exp': 0}})
    sendm(cwbot, m.chat.id, 'Account reset.')


@cwbot.message_handler(commands=['giveexp'])
def giveexppp(m):
    # return
    if m.from_user.id != pasyuk_id:
        return
    try:
        exp = int(m.text.split(' ')[1])
    except:
        return
    cwusers.update_one({'id': m.from_user.id}, {'$inc': {'exp': exp}})
    user = cwusers.find_one({'id': m.from_user.id})
    check_lvlup(user)
    sendm(cwbot, m.chat.id, 'ADD ' + str(exp) + ' exp.')


def get_time_to_battle():
    lastbattletime = last_castle_fight['time']
    nextbattletime = lastbattletime + 8 * 60 * 60
    secs = nextbattletime - time.time()
    mins = 0
    hours = 0
    while secs >= 60:
        secs -= 60
        mins += 1
    while mins >= 60:
        mins -= 60
        hours += 1
    if hours > 0:
        text = str(hours) + 'ч ' + str(mins) + 'м'
    else:
        text = str(mins) + 'м'
    if mins == 0 and hours == 0:
        text = 'несколько секунд'
    return text


@cwbot.message_handler(func=lambda m: is_def_message(m))
def deffffff(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['current_act'] in busy_acts:
        sendm(cwbot, m.chat.id, 'Вы сейчас чем-то заняты и не можете этого сделать.')
        return
    cwusers.update_one({'id': m.from_user.id}, {'$set': {'current_act': 'def'}})
    # kb = types.ReplyKeyboardRemove()
    kb = main_menu_kb()
    battletime = get_time_to_battle()
    sendm(cwbot, m.chat.id, 'Вы приготовились к защите замка. Битва через ' + battletime + '!', reply_markup=kb)


def check_castle_attack(m):
    if m.text == None:
        return False
    if m.text in ["🐭Крысиный замок", "👁Замок тьмы", "🖤Замок некроманта", "💮Замок магии взрывов"]:
        return True
    return False


@cwbot.message_handler(func=lambda m: check_castle_attack(m))
def select_castle_attack(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['current_act'] in busy_acts:
        sendm(cwbot, m.chat.id, 'Вы сейчас чем-то заняты и не можете этого сделать.')
        return
    castle = name_to_castle(m.text)
    if castle == user['castle']:
        sendm(cwbot, m.chat.id, 'Нельзя атаковать свой замок!')
        return
    cwusers.update_one({'id': m.from_user.id}, {'$set': {'attack_target': castle, 'current_act': 'attack'}})
    # kb = types.ReplyKeyboardRemove()
    kb = main_menu_kb()
    battletime = get_time_to_battle()
    sendm(cwbot, m.chat.id, 'Вы приготовились к атаке на ' + m.text + '. Битва через ' + battletime + '!',
                       reply_markup=kb)


@cwbot.message_handler(func=lambda m: m.text == "/special_ability")
def specialcastleabil(m):
    user = cwusers.find_one({'id': m.from_user.id})
    text = 'None'
    if user['lvl'] < 8:
        return
    if user['castle'] == 'explosion':
        text = "Способность замка 💮магии взрывов - EXPLOSIOOOOOOOON!\n\nЭкипировка способности не тратит место для способностей. В начале боя замков вы "+\
            "используете магию взрывов на случайного соперника, нанося 100 урона и поджигая цель на 100. До конца матча ваш персонаж будет оглушен.\n\n"+\
            "Экипировать для следующего боя - /use_explosion. Можно использовать раз в 24 часа."
    elif user['castle'] == "rat":
        text = "Способность 🐭крысиного замка - крысиная стая\n\nВместе с вами в следующую битву замков приходит сражаться случайная "+\
               "крыса из крысиного логова вашего уровня. Эта крыса не может взять в бой меч или пистолет.\n\nПризвать крысу - /summon_rat. Можно использовать раз в 24 часа."
    elif user['castle'] == "necromant":
        text = "Способность замка 🖤некроманта - воскрешение мертвых.\n\nПозволяет наложить на следующую битву замков проклятье, "+\
               "воскрешающее первых двух воинов в виде скелетов с уроном 1-3 и с 2 зомби-ходом. Скелеты восстают в ближнем бою со всеми игроками. "+\
               "За каждое последующее наложенное проклятье количество "+\
               "воскрешаемых воинов увеличивается на 1. Каждый следующий восставший скелет живет на ход дольше предыдущего."+\
               "Можно использовать раз в 24 часа.\n\n"+\
               "Использовать - /use_reborn."
    elif user['castle'] == "darkcastle":
        text = "Способность замка 👁тьмы - призыв демона тьмы.\n\nВсе, кто активировал эту способность, в следующей битве замков уничтожаются и призывают демона тьмы, "+\
            "характеристики которого зависят от количества и уровня способностей, взятых игроками, а так же от уровня их оружия и персонажа.\n\n"+\
               "Использовать - /use_dark. Можно "+\
            "использовать раз в 24 часа."
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(func=lambda m: m.text == "/summon_rat")
def specialcastleabil_userat(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['castle'] != 'rat':
        sendm(cwbot, m.chat.id, 'Вы не умеете использовать это!')
        return
    if user['lvl'] < 8:
        sendm(cwbot, m.chat.id, 'Вы недостаточно опытны, чтобы использовать это! Сначала достигните 8го уровня.')
        return
    try:
        if time.time() - user['last_summon_rat'] < 60*60*24:
            sendm(cwbot, m.chat.id, 'Эту способность можно использовать не чаще, чем раз в сутки!')
            return
    except:
        pass
    cwusers.update_one({'id': user['id']}, {'$set': {'summon_castlefight_rat': True, 'last_summon_rat':time.time()}})

    sendm(cwbot, m.chat.id, '✅В следующей битве вы позовете на помощь крысу из логова.')

@cwbot.message_handler(func=lambda m: m.text == "/use_dark")
def specialcastleabil_userat(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['castle'] != 'darkcastle':
        sendm(cwbot, m.chat.id, 'Вы не умеете использовать это!')
        return
    if user['lvl'] < 8:
        sendm(cwbot, m.chat.id, 'Вы недостаточно опытны, чтобы использовать это! Сначала достигните 8го уровня.')
        return
    try:
        if time.time() - user['last_dark_demon'] < 60*60*24:
            sendm(cwbot, m.chat.id, 'Эту способность можно использовать не чаще, чем раз в сутки!')
            return
    except:
        pass
    cwusers.update_one({'id': user['id']}, {'$set': {'summon_dark_demon': True, 'last_dark_demon':time.time()}})

    sendm(cwbot, m.chat.id, '✅В следующей битве вы призовете демона тьмы.')


@cwbot.message_handler(func=lambda m: m.text == "/use_reborn")
def specialcastleabil_userat(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['castle'] != 'necromant':
        sendm(cwbot, m.chat.id, 'Вы не умеете использовать это!')
        return
    if user['lvl'] < 8:
        sendm(cwbot, m.chat.id, 'Вы недостаточно опытны, чтобы использовать это! Сначала достигните 8го уровня.')
        return


    try:
        if time.time() - user['last_necromant_reborn'] < 60*60*24:
            sendm(cwbot, m.chat.id, 'Эту способность можно использовать не чаще, чем раз в сутки!')
            return
    except:
        pass
    cwusers.update_one({'id': user['id']}, {'$set': {'necromant_reborn_buff':True, 'last_necromant_reborn':time.time()}})
    sendm(cwbot, m.chat.id, '✅В следующей битве вы наложите на поле боя проклятье Некроманта.')

@cwbot.message_handler(func=lambda m: m.text == "/use_rat")
def specialcastleabil_userat(m):
    return
    user = cwusers.find_one({'id': m.from_user.id})
    if user['castle'] != 'rat':
        sendm(cwbot, m.chat.id, 'Вы не умеете использовать это!')
        return
    if user['lvl'] < 8:
        sendm(cwbot, m.chat.id, 'Вы недостаточно опытны, чтобы использовать это! Сначала достигните 8го уровня.')
        return
    try:
        user['personal_rat']
    except:
        sendm(cwbot, m.chat.id, 'У вас нет прирученной крысы!')
        return
    cwusers.update_one({'id':user['id']},{'$set':{'use_rat_castlefight':True}})
    sendm(cwbot, m.chat.id, '✅Вы возьмете крысу в следующий бой замков!')

@cwbot.message_handler(func=lambda m: m.text == "/craft_toy")
def specialcastleabil_createratdoll(m):
    return
    user = cwusers.find_one({'id': m.from_user.id})
    if user['castle'] != 'rat':
        sendm(cwbot, m.chat.id, 'Вы не умеете использовать это!')
        return
    if user['lvl'] < 8:
        sendm(cwbot, m.chat.id, 'Вы недостаточно опытны, чтобы использовать это! Сначала достигните 8го уровня.')
        return
    materials = {
        'diamonds':1,
        'wood':15,
        'plastic':15,
        'rope':10
    }

    allow = True
    for ids in materials:
        try:
            if user['resources'][ids] < materials[ids]:
                allow = False
                break
        except:
            allow = False
            break
    if not allow:
        sendm(cwbot, m.chat.id, 'Недостаточно материалов!')
        return
    try:
        user['resources']['rat_toys']
        cwusers.update_one({'id':user['id']},{'$inc':{'resources.rat_toys':1}})
    except:
        cwusers.update_one({'id': user['id']}, {'$set': {'resources.rat_toys': 1}})
    for ids in materials:
        cwusers.update_one({'id': user['id']}, {'$inc': {'resources.' + ids: -materials[ids]}})

    sendm(cwbot, m.chat.id, 'Вы успешно скрафтили игрушку для крыс!')


@cwbot.message_handler(func=lambda m: m.text == "/use_explosion")
def specialcastleabil_explos(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['castle'] != 'explosion':
        sendm(cwbot, m.chat.id, 'Вы не умеете использовать это!')
        return
    if user['lvl'] < 8:
        sendm(cwbot, m.chat.id, 'Вы недостаточно опытны, чтобы использовать это! Сначала достигните 8го уровня.')
        return
    try:
        if time.time() - user['last_explosion_use'] < 60*60*24:
            sendm(cwbot, m.chat.id, 'Эту способность можно использовать не чаще, чем раз в сутки!')
            return
    except:
        pass
    cwusers.update_one({'id':user['id']},{'$set':{'next_battle_explosion':True, 'last_explosion_use':time.time()}})
    sendm(cwbot, m.chat.id, '✅В следующем бою вы возьмете посох и используете магию взрывов.')


@cwbot.message_handler(commands=['score'])
def scoreee(m):
    x = allcastles.find_one({})
    text = 'Очки замков:\n\n'
    text += '*' + castle_to_name('rat') + '*: 🏆' + str(x['rat']['score']) + ' очков\n'
    text += '*' + castle_to_name('darkcastle') + '*: 🏆' + str(x['darkcastle']['score']) + ' очков\n'
    text += '*' + castle_to_name('necromant') + '*: 🏆' + str(x['necromant']['score']) + ' очков\n'
    text += '*' + castle_to_name('explosion') + '*: 🏆' + str(x['explosion']['score']) + ' очков\n'
    sendm(cwbot, m.chat.id, text, parse_mode='markdown')


def get_player_state(user):
    act = 'Неизвестно'
    if user['current_act'] == None:
        act = '🛌Отдых'
    elif user['current_act'] == 'attack':
        act = '🗡Атака ' + castle_to_name(user['attack_target'])
    elif user['current_act'] == 'def':
        act = '🛡Защита ' + castle_to_name(user['castle'])
    elif user['current_act'] == 'quest_rathunt':
        act = '🐭Битва с крысой'
    elif user['current_act'] == 'quest_noise_check':
        act = '🪓Сражение с вражеским бойцом'
    elif user['current_act'] == 'troll':
        act = '👹Прогулка до логова тролля'
    elif user['current_act'] == 'wait_help':
        act = '👹В плену у тролля, ожидаете помощи'
    elif user['current_act'] == 'quest_castle_protect':
        mins = 0
        secs_passed = time.time() - user['quest_started']
        secs_remained = 180 - secs_passed
        while secs_remained >= 60:
            mins += 1
            secs_remained -= 60
        if mins == 0:
            act = '🥾Патруль окрестностей. Вернётесь через несколько секунд.'
        else:
            act = '🥾Патруль окрестностей. Вернётесь через ' + str(mins) + ' минуты.'
    return act


def main_menu_kb():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton("🗡Атака"), types.KeyboardButton("🛡Защита"), types.KeyboardButton("🗺Квесты"))
    kb.add(types.KeyboardButton("🏅Профиль"), types.KeyboardButton("📦Инвентарь"), types.KeyboardButton("🏰Замок"))
    kb.add(types.KeyboardButton("🧬Способности"), types.KeyboardButton("💣Предметы"))
    return kb


def get_profile_text(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user == None:
        return "Пользователь не существует!"
    text = ''
    text += '❗️Битва четырех замков через ' + get_time_to_battle() + '!\n\n'
    text += user['name'] + ', воин ' + castle_to_name(user['castle']) + '\n'
    text += '🏅Уровень: ' + str(user['lvl']) + '\n'
    text += '🧬Очки навыков: ' + str(user['lvl_points']) + ' (/lvlup)\n'
    dopexpfornextlvl = lvltable[user['lvl']]['expfornextlvl']
    totalexp = lvltable[user['lvl']]['totalexp']
    diff = dopexpfornextlvl
    earned = user['exp'] - totalexp
    perc = (earned / diff) * 100
    perc = round(perc, 2)
    text += '🔥Опыт: ' + str(int(user['exp'])) + '/' + str(int(totalexp + dopexpfornextlvl)) + ' ' + str(perc) + '%\n'
    text += ''
    text += '💰' + str(user['gold']) + ' 👝' + str(user['pogs']) + '\n'
    secsfromstamina = time.time() - user['last_stamina_regen']
    needtime = 3600
    if user['current_act'] == None:
        if 'goodsleep' in user['equipped_skills']:
            if user['equipped_skills']['goodsleep']['lvl'] == 1:
                needtime -= 300
            if user['equipped_skills']['goodsleep']['lvl'] == 2:
                needtime -= 600
            if user['equipped_skills']['goodsleep']['lvl'] == 3:
                needtime -= 900
    secs = needtime - secsfromstamina
    mins = 0
    while secs >= 60:
        secs -= 60
        mins += 1
    if mins > 0:
        timefromstamina = str(mins) + "мин."
    else:
        timefromstamina = 'сейчас'
    timefromstamina = ' ⏰' + timefromstamina
    if user['stamina'] == user['maxstamina']:
        timefromstamina = ""

    secsfromhp = time.time() - user['last_hp_regen']
    secs = 600 - secsfromhp
    mins = 0
    while secs >= 60:
        secs -= 60
        mins += 1
    if mins > 0:
        timefromhp = str(mins) + "мин."
    else:
        timefromhp = 'сейчас'
    timefromhp = ' ⏰' + timefromhp
    if user['hp'] == user['maxhp']:
        timefromhp = ""

    text += '🔋Выносливость: ' + str(user['stamina']) + '/' + str(user['maxstamina']) + timefromstamina + '\n'
    text += '♥️' * user['hp'] + '|ХП: ' + str(user['hp']) + '/' + str(user['maxhp']) + timefromhp + '\n'
    weapontext = ''
    dopwtext = ''
    if user['weapon'] == None:
        weapontext = 'Кулаки lvl.1'
    else:
        weapontext = user['weapon']['name'] + ' lvl.' + str(user['weapon']['lvl'])
        dopwtext = ' (снять - /woff_' + user['weapon']['objectcode'] + ')'
    text += '⚔️Оружие: ' + weapontext + dopwtext + '\n'
    act = get_player_state(user)
    text += 'Состояние:\n' + act + '\n'
    try:
        if user['next_battle_explosion']:
            text += '💮Собираетесь применить магию взрывов в следующем бою.\n'
    except:
        pass
    try:
        if user['summon_castlefight_rat']:
            text += '🐭Собираетесь взять крысу в следующий бой.\n'
    except:
        pass
    try:
        if user['necromant_reborn_buff']:
            text += '🖤Собираетесь наложить проклятье Некроманта на следующее поле боя.\n'
    except:
        pass
    try:
        if user['summon_dark_demon']:
            text += '👁Собираетесь пожертвовать собой для призыва демона Тьмы в следующем бою.\n'
    except:
        pass
    if user['lvl'] >= 8:
        text += '❓Информация о расовой способности: /special_ability\n'
    return text


@cwbot.message_handler(func=lambda m: m.text[:6] == '/woff_')
def wofff(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['weapon'] == None:
        sendm(cwbot, m.chat.id, 'У вас нет экипированного оружия!')
        return
    weapon = user['weapon']
    objectcode = weapon['objectcode']
    cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: weapon, 'weapon': None}})
    sendm(cwbot, m.chat.id, 'Вы сняли текущее оружие!')


@cwbot.message_handler(commands=['me'])
def cwme(m):
    text = get_profile_text(m)
    kb = main_menu_kb()
    sendm(cwbot, m.chat.id, text, reply_markup=kb)


@cwbot.message_handler(func=lambda m: is_profile_message(m))
def profilemsggg(m):
    text = get_profile_text(m)
    kb = main_menu_kb()
    sendm(cwbot, m.chat.id, text, reply_markup=kb)
    user = cwusers.find_one({'id':m.from_user.id})
    try:
        if not user['know_about_ability'] and user['lvl'] >= 8:
            sendm(cwbot, user['id'],
                       'Вы стали достаточно опытны, чтобы мастера вашего замка обучили вас секретной способности, известной только им. ' + \
                       "Вас отвели в помещение, в котором вас встретил неизвестный человек, лица которого вы даже не могли разглядеть. " + \
                       "Вы внимательно выслушали все то, что он вам рассказал...\n\n" + \
                       "Показать информацию, которую вы узнали - /special_ability")
            cwusers.update_one({'id':user['id']},{'$set':{'know_about_ability':True}})
    except:
        if user['lvl'] >= 8:
            sendm(cwbot, user['id'],
                               'Вы стали достаточно опытны, чтобы мастера вашего замка обучили вас секретной способности, известной только им. ' + \
                               "Вас отвели в помещение, в котором вас встретил неизвестный человек, лица которого вы даже не могли разглядеть. " + \
                               "Вы внимательно выслушали все то, что он вам рассказал...\n\n" + \
                               "Показать информацию, которую вы узнали - /special_ability")
            cwusers.update_one({'id': user['id']}, {'$set': {'know_about_ability': True}})


def is_profile_message(m):
    if m.text == "🏅Профиль":
        return True
    return False


def is_quest_message(m):
    if m.text == "🗺Квесты":
        return True
    return False


def is_castle_message(m):
    if m.text == "🏰Замок":
        return True
    return False


def is_shop_message(m):
    if m.text == "🏚Магазин":
        return True
    return False


def is_scrolls_message(m):
    if m.text == "📜Свитки":
        return True
    return False

def is_class_message(m):
    if m.text == "⭐️Класс":
        return True
    return False



def is_weapons_message(m):
    if m.text == "⚙️Снаряжение":
        return True
    return False


def is_inventory_message(m):
    if m.text == "📦Инвентарь":
        return True
    return False


def is_skills_message(m):
    if m.text == "🧬Способности":
        return True
    return False


def is_craft_message(m):
    if m.text == "🛠Крафт":
        return True
    return False


def is_create_weapon_message(m):
    if m.text == "🛠Создание оружия":
        return True
    return False


def is_upgrade_weapon_message(m):
    if m.text == "🆙Улучшение оружия":
        return True
    return False


def is_auction_message(m):
    if m.text == "🛎Аукцион":
        return True
    return False


def is_scroll_decrypt_message(m):
    if m.text == "🗞❓Расшифровка свитков":
        return True
    return False


def is_recipe_decrypt_message(m):
    if m.text == "📓❓Расшифровка рецептов":
        return True
    return False


def is_items_message(m):
    if m.text == "💣Предметы":
        return True
    return False


def is_birzha_message(m):
    if m.text == "⚖️Биржа":
        return True
    return False


def is_bar_message(m):
    if m.text == "🍺Бар":
        return True
    return False


def quests_kb(user):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text="🥾|Патруль окрестностей", callback_data="quest_select?castle_protect"),
           types.InlineKeyboardButton(text="🐭|Крысиное логово", callback_data="quest_select?rathunt"))

    kb.add(types.InlineKeyboardButton(
        text="👀|Проверить странный шум (" + str(user['noise_check']) + '/' + str(user['max_noise_check']) + ')',
        callback_data="quest_select?noise_check"))
    kb.add(types.InlineKeyboardButton(text="👹|Тролль под мостом", callback_data="quest_select?troll"))
    return kb


def castle_kb():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton("🏚Магазин"), types.KeyboardButton("🛠Крафт"))
    kb.add(types.KeyboardButton("🛎Аукцион"), types.KeyboardButton("⚖️Биржа"))
    # kb.add(types.KeyboardButton("🍺Бар"))
    kb.add(types.KeyboardButton("🏅Профиль"))
    return kb


def shop_kb():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton("📜Свитки"), types.KeyboardButton("⚙️Снаряжение"))
    kb.add(types.KeyboardButton("🗞❓Расшифровка свитков"), types.KeyboardButton("📓❓Расшифровка рецептов"))
    kb.add(types.KeyboardButton("🏅Профиль"))
    return kb


def is_essence_craft(m):
    if m.text == "🌐Создание \"сущностей\"":
        return True
    return False

def craft_kb():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton("🛠Создание оружия"), types.KeyboardButton("🆙Улучшение оружия"))
    kb.add(types.KeyboardButton("🌐Создание \"сущностей\""))
    kb.add(types.KeyboardButton("🏅Профиль"))
    return kb

def class_to_text(x):
    if x == 'engineer':
        return 'Инженер'
    if x == 'alchemist':
        return "Алхимик"
    if x == 'knight':
        return 'Рыцарь'
    if x == 'defer':
        return 'Защитник'
    if x == 'summoner':
        return 'Призыватель'

def select_class_kb(user):
    kbs = []
    classes = ['engineer', 'alchemist', 'knight', 'defer', 'summoner']
    for ids in classes:
        kbs.append(types.InlineKeyboardButton(text=class_to_text(ids), callback_data = 'selectclass?'+ids))
    kb = types.InlineKeyboardMarkup()
    kb.add(*kbs)
    return kb

def is_essence_list_kb(m):
    if m.text == '🔮Список сущностей для крафта':
        return True
    return False

def essence_kb():
    kb = types.ReplyKeyboardMarkup()
    kb.add("🔮Список сущностей для крафта")
    kb.add("🏅Профиль")
    return kb

@cwbot.message_handler(func=lambda m: is_essence_list_kb(m))
def essencecrafttt(m):
    user = cwusers.find_one({'id': m.from_user.id})
    essencelist = []
    essencename = []
    weapons_to_craft = []
    for ids in user['inventory']:
        item = user['inventory'][ids]
        if item['type'] == 'weapon':
            if item['lvl'] == 3 and item['code'] not in ['shortsword', 'pistol']:
                if item['code'] not in weapons_to_craft:
                    weapons_to_craft.append(item['code'])
                else:
                    if item['code'] not in essencelist:
                        essencelist.append(item['code'])
                        essencename.append(item['name'])
    text = 'Для получения эссенции оружия вам нужно два одинаковых оружия 3го уровня и 25👝. Список эссенций, которые вы можете создать:\n\n'
    i = 0
    for ids in essencelist:
        text += "🌐Эссенция: "+essencename[i]+' (/essencecraft_'+ids+'_НомерМодификации)\n'
        i += 1
    text += '\nУзнать информацию об оружиях, которые получатся после наполнения эссенции энергией - /essenceinfo_weaponcode_1 /essenceinfo_weaponcode_2 (число на конце - номер модификации)'
    sendm(cwbot, m.chat.id, text)

@cwbot.message_handler(func = lambda m: m.text[:13] == '/essenceinfo_')
def essenceinfow(m):
    user = cwusers.find_one({'id': m.from_user.id})
    try:
        weaponcode = m.text.split('_')[1]
        modification = int(m.text.split('_')[2])
    except:
        sendm(cwbot, m.chat.id, 'Неправильный формат ввода команды! Пример:\n/essenceinfo_revolver_2')
        return
    if modification not in [1, 2]:
        sendm(cwbot, m.chat.id, 'Существуют только две модификации!')
        return

    try:
        objectcode = None
        weapon = get_lvl_weapon(weapon=None, objectcode=objectcode, code=weaponcode, lvl=4, need_create=True, modification = modification)
        if weapon == None:
            sendm(cwbot, m.chat.id, 'Такого оружия не существует!')
            return
        text = ''
        text += '⚔️|' + weapon['name'] + ' lvl.' + str(weapon['lvl']) + ', mod.'+str(modification)+':\n'
        text += weapon['description'] + '\n'
        if weapon['name'] not in ['Огнемет', 'Револьвер', 'Сюрикены']:
            text += '💢Урон: ' + str(1 + weapon['dmgbonus']) + '-' + str(weapon['cubes'] + weapon['dmgbonus']) + '\n'
        else:
            if weapon['name'] == 'Револьвер':
                wdmg = 3
            if weapon['name'] == 'Огнемет':
                wdmg = 1
                if weapon['lvl'] == 4 and weapon['modification'] == 2:
                    wdmg = 0
            if weapon['name'] == 'Сюрикены':
                wdmg = 2
            wdmg += weapon['dmgbonus']
            text += '💢Урон: ' + str(wdmg) + '\n'
        text += '🎯Точность: ' + str(weapon['accuracybonus']) + '\n'
        text += '⚡️Затраты энергии: ' + str(weapon['energycost']) + '\n'
        if weapon['ranged']:
            text += '🎯Дальнобойнее\n'
        else:
            text += '👊Ближнее\n'
        if weapon['lvl'] == 4:
            text += '🌐Собранные души: '+str(weapon['kills'])+'\n'
        sendm(cwbot, m.chat.id, text)
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func = lambda m: m.text[:14] == '/essencecraft_')
def essencecraftttt(m):
    try:
        user = cwusers.find_one({'id': m.from_user.id})
        try:
            weaponcode = m.text.split('_')[1]
            modification = int(m.text.split('_')[2])
        except:
            sendm(cwbot, m.chat.id, 'Ошибка в формате команды!')
            return
        if modification not in [1, 2]:
            sendm(cwbot, m.chat.id, 'Существует только две модификации!')
            return
        weaponamount = 0
        weapons_to_del = []
        for ids in user['inventory']:
            item = user['inventory'][ids]
            if item['type'] == 'weapon':
                if item['lvl'] == 3 and item['code'] == weaponcode:
                    weaponamount += 1
                    weapons_to_del.append(item['objectcode'])
        if user['pogs'] < 25:
            sendm(cwbot, m.chat.id, 'Недостаточно 👝 (нужно 25)!')
            return
        if weaponamount < 2:
            sendm(cwbot, m.chat.id, 'Недостаточно копий оружия 3го уровня (нужно 2)!')
            return
        objectcode = generate_object_code(user)
        name = 'Эссенция ('+name_to_weapon(weaponcode)+', модификация '+str(modification)+')'
        essence = create_essence(objectcode, weaponcode, name, modification)
        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: essence}})
        cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + weapons_to_del[0]: 1}})
        cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + weapons_to_del[1]: 1}})
        cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': -25}})
        sendm(cwbot, m.chat.id, 'Вы успешно создали предмет "'+essence['name']+'"!')
    except:
        sendm(cwbot, 441399484, traceback.format_exc())

@cwbot.message_handler(commands = ['giveweapon'])
def giveweaponnn(m):
    if m.from_user.id != 441399484:
        return
    user = cwusers.find_one({'id':int(m.text.split(' ')[1])})
    if user == None:
        return
    try:
        code = m.text.split(' ')[2]
    except:
        return
    objectcode = generate_object_code(user)
    weapon = get_lvl_weapon(weapon=None, objectcode=objectcode, code=code, lvl=3,
                            need_create=True)
    cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: weapon}})
    sendm(cwbot, m.chat.id, 'Выдал '+weapon['name']+' лвл3 пользователю '+user['name'])


@cwbot.message_handler(func=lambda m: is_essence_craft(m))
def essencecrafttt(m):
    user = cwusers.find_one({'id': m.from_user.id})
    text = 'На этом магическом столе вы можете извлекать 🌐сущность из сильнейших оружий, создавая нечто, описываемое первооткрывателями '+\
        'этого явления как "душа оружия".\n\n"__Если мы даже не можем быть уверены, есть ли "сознание" у окружающих нас людей, либо же все они - '+\
        '"философские зомби", то как можем мы быть уверены в том, что этого самого "сознания" нет у более простых форм жизни (и не только жизни)?__"\n\n'+\
        'Именно такие мысли возникали у тех, кто впервые смог достать из оружия его "душу". Данная субстанция, изначально не имеющая четкой формы, а напоминающая что-то, '+\
        'больше похожее на сгусток полупрозрачного вещества, поглощало энергию убитых владельцем существ, обретая физические очертания. Спустя время, накопив достаточно '+\
        'энергии, сущность обрела четкие физические очертания, став похожей на то оружие, которое было использовано для её изготовления. И была сильнее изначальной версии.'+\
        ' И даже в финальной форме оно не переставало поглощать энергию, немного изменяя свой внешний вид. Так мастера даже научились определять, сколько тем или иным '+\
        '"одушевленным" оружием было поглощено душ.'
    kb = essence_kb()
    sendm(cwbot, m.chat.id, text, reply_markup = kb, parse_mode = 'markdown')


@cwbot.message_handler(func=lambda m: is_class_message(m))
def classinfooo(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['lvl'] < 5:
        sendm(cwbot, m.chat.id, 'Сначала достигните 5го уровня!')
        return
    try:
        user['class']
    except:
        cwusers.update_one({'id':user['id']},{'$set':{'class':None}})
        user['class'] = None
    if user['class'] == None:
        kb = select_class_kb(user)
        sendm(cwbot, m.chat.id, "Пришло время выбрать себе специализацию. Что вам больше по душе - строить различные механизмы, или же строить различные механизмы? "+\
                           "(бля ну тут пока только инженер, тексты потом допишу)", kb = kb)

@cwbot.message_handler(func=lambda m: is_bar_message(m))
def barrrrrm(m):
    return
    user = cwusers.find_one({'id': m.from_user.id})
    if user['current_act'] in busy_acts:
        sendm(cwbot, m.chat.id, 'Вы сейчас чем-то заняты.')
        return
    try:
        game = bargames['bar']
    except:
        return
    if user['id'] in game['players']:
        sendm(cwbot, m.chat.id, 'Вы уже в баре!')
        return
    if user['id'] in game['waitbarplayers']:
        sendm(cwbot, m.chat.id, 'Вы уже в баре!')
        return
    game['waitbarplayers'].append(user['id'])
    sendm(cwbot, m.chat.id, 'Вы направляетесь в бар.')
    cwusers.update_one({'id': user['id']}, {'$set': {'current_act': 'bar'}})


@cwbot.message_handler(func=lambda m: is_birzha_message(m))
def itemsssssmmirzha(m):
    user = cwusers.find_one({'id': m.from_user.id})
    text = 'Для продажи ресурса введите команду /wts_кодресурса_число_цена. Пример:\n/wts_wood_10_3 - продажа 10 дерева по 3 монеты каждое. ' + \
           '\nВаши активные лоты (' + str(len(user['birzha'])) + '/3):\n\n'
    for ids in user['birzha']:
        x = resourceauc.find_one({'wtscode': ids})
        if x != None:
            text += resource_to_name(x['item']) + ': ' + str(x['amount']) + 'шт. по ' + str(
                x['cost']) + '💰. Отменить - /bcancel_' + x['wtscode'] + '\n\n'
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(func=lambda m: is_items_message(m))
def itemsssssm(m):
    user = cwusers.find_one({'id': m.from_user.id})
    text = '📦Предметы в инвентаре:\n'
    wasitem = False
    for ids in user['items']:
        if user['items'][ids] > 0:
            text += get_cw_battleitem_name(ids) + ': ' + str(
                user['items'][ids]) + '. Взять с собой - /takeitem_' + ids + '\n'
            wasitem = True
    if not wasitem:
        text += 'Пусто!\n'
    text += '\n'
    doptext = '✅Экипированные предметы:\n'
    for ids in user['items_for_battle']:
        doptext += get_cw_battleitem_name(ids) + '. Снять - /takeoffitem_' + ids + '\n'
    if len(user['items_for_battle']) == 0:
        doptext += 'Пусто!\n'
    text += doptext
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(func=lambda m: m.text[:10] == "/takeitem_")
def takeitemmmm(m):
    try:
        if m.from_user.id in takeitemlock:
            return
        takeitemlock.append(m.from_user.id)
        try:
            item = m.text.split('_')[1]
        except:
            takeitemlock.remove(m.from_user.id)
            return
        x = get_cw_battleitem_name(item)
        if x == "Неизвестно":
            sendm(cwbot, m.chat.id, 'Неизвестный предмет!')
            takeitemlock.remove(m.from_user.id)
            return
        user = cwusers.find_one({'id': m.from_user.id})
        if user['current_act'] in busy_acts:
            sendm(cwbot, m.chat.id, 'Вы сейчас чем-то заняты!')
            takeitemlock.remove(m.from_user.id)
            return
        if item not in user['items']:
            sendm(cwbot, m.chat.id, 'У вас нет этого предмета!')
            takeitemlock.remove(m.from_user.id)
            return
        if user['items'][item] <= 0:
            sendm(cwbot, m.chat.id, 'У вас нет этого предмета!')
            takeitemlock.remove(m.from_user.id)
            return
        if len(user['items_for_battle']) >= user['max_items_for_battle']:
            sendm(cwbot, m.chat.id, 'Достигнуто максимальное число предметов!')
            takeitemlock.remove(m.from_user.id)
            return
        if item in user['items_for_battle']:
            sendm(cwbot, m.chat.id, 'У вас в инвентаре уже есть такой предмет!')
            takeitemlock.remove(m.from_user.id)
            return
        cwusers.update_one({'id': user['id']}, {'$push': {'items_for_battle': item}})
        cwusers.update_one({'id': user['id']}, {'$inc': {'items.' + item: -1}})
        sendm(cwbot, m.chat.id, 'Успешно экипирован предмет: "' + x + '"!')
        takeitemlock.remove(m.from_user.id)
    except:
        takeitemlock.remove(m.from_user.id)
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: m.text[:11] == "/cancellot_")
def cancellaucc(m):
    lot = None
    try:
        code = m.text.split('_')[1]
    except:
        return
    for ids in auction.find({}):
        if ids['code'] == code:
            lot = ids
            break
    if lot == None:
        sendm(cwbot, m.chat.id, 'Такого лота не существует!')
        return
    user = cwusers.find_one({'id': m.from_user.id})
    if lot['owner'] != user['id']:
        sendm(cwbot, m.chat.id, 'Это не ваш лот!')
        return
    objectcode = generate_object_code(user)
    lot['item']['objectcode'] = objectcode
    cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: lot['item']}})
    if lot['buyer'] != None:
        cwusers.update_one({'id': lot['buyer']}, {'$inc': {'pogs': lot['cost']}})
        sendm(cwbot, lot['buyer'], 'Лот на товар "' + lot['item'][
            'name'] + '" был отменён, ваша ставка была возвращена.')
    auction.delete_one({'code': lot['code']})
    sendm(cwbot, m.chat.id, 'Вы отменили лот на товар "' + lot['item'][
        'name'] + '". Возвращенный предмет - /info_' + objectcode + '.')


@cwbot.message_handler(func=lambda m: m.text[:13] == "/takeoffitem_")
def takeitemmmm(m):
    try:
        if m.from_user.id in takeitemlock:
            return
        takeitemlock.append(m.from_user.id)
        try:
            item = m.text.split('_')[1]
        except:
            takeitemlock.remove(m.from_user.id)
            return
        x = get_cw_battleitem_name(item)
        if x == "Неизвестно":
            takeitemlock.remove(m.from_user.id)
            return
        user = cwusers.find_one({'id': m.from_user.id})
        if user['current_act'] in busy_acts:
            sendm(cwbot, m.chat.id, 'Вы сейчас чем-то заняты!')
            takeitemlock.remove(m.from_user.id)
            return
        if item not in user['items_for_battle']:
            sendm(cwbot, m.chat.id, 'Этот предмет у вас не экипирован!')
            takeitemlock.remove(m.from_user.id)
            return
        itemss = []
        for ids in user['items_for_battle']:
            itemss.append(ids)
        itemss.remove(item)
        cwusers.update_one({'id': user['id']}, {'$set': {'items_for_battle': itemss}})
        if item not in user['items']:
            cwusers.update_one({'id': user['id']}, {'$set': {'items.' + item: 1}})
        else:
            cwusers.update_one({'id': user['id']}, {'$inc': {'items.' + item: 1}})
        sendm(cwbot, m.chat.id, 'Успешно снят предмет: "' + x + '"!')
        takeitemlock.remove(m.from_user.id)
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: is_recipe_decrypt_message(m))
def recipedecryptmsgg(m):
    user = cwusers.find_one({'id': m.from_user.id})
    text = ''
    text += 'Вы находитесь в отделе лавки, который занимается расшифровкой древних записей. За хорошую цену, разумеется. ' + \
            'Чтобы расшифровать рецепт, нажмите соответствующу команду.\n\n'
    alreadycolors = []
    for ids in user['inventory']:
        item = user['inventory'][ids]
        if item['type'] == 'undefined_recipe':
            if item['color'] not in alreadycolors:
                alreadycolors.append(item['color'])
                goldcost = 100
                emoj = "📗"
                if item['color'] == 'red':
                    goldcost = 100
                    emoj = "📕"
                if item['color'] == 'blue':
                    goldcost = 100
                    emoj = "📘"
                if item['color'] == 'green':
                    goldcost = 100
                    emoj = "📗"
                text += emoj + item['name'] + ': 💰' + str(goldcost) + ' /dec_' + item['objectcode'] + '\n'
    if len(alreadycolors) == 0:
        text += 'У вас нет рецептов, которые можно расшифровать!'
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(func=lambda m: is_scroll_decrypt_message(m))
def scrolldecryptmsgg(m):
    user = cwusers.find_one({'id': m.from_user.id})
    text = ''
    text += 'Вы находитесь в отделе лавки, который занимается расшифровкой древних записей. За хорошую цену, разумеется. ' + \
            'Чтобы расшифровать свиток, нажмите соответствующу команду.\n\n'
    has = False
    for ids in user['inventory']:
        item = user['inventory'][ids]
        if item['type'] == 'undefined_scroll':
            has = True
            goldcost = 100
            text += "🗞" + item['name'] + ': 💰' + str(goldcost) + ' /dec_' + item['objectcode'] + '\n'
            break
    if not has:
        text += 'У вас нет свитков, которые можно расшифровать!'
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(func=lambda m: m.text[:5] == "/dec_")
def decryptrecipess(m):
    user = cwusers.find_one({'id': m.from_user.id})
    try:
        item = user['inventory'][m.text.split('_')[1]]
    except:
        sendm(cwbot, m.chat.id, 'Такого предмета у вас нет!')
        return
    if item['type'] not in ['undefined_scroll', 'undefined_recipe']:
        sendm(cwbot, m.chat.id, 'Это не свиток и не рецепт!')
        return
    if item['type'] == 'undefined_scroll':
        goldcost = 100
        if user['gold'] < goldcost:
            sendm(cwbot, m.chat.id, 'Недостаточно золота!')
            return
        scroll = random.choice(allscrolls)
        objectcode = generate_object_code(user)
        newscroll = create_scroll(scroll, objectcode)
        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: newscroll}})
        cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + item['objectcode']: 1}})
        cwusers.update_one({'id': user['id']}, {'$inc': {'gold': -goldcost}})
        sendm(cwbot, m.chat.id, 'Вы успешно расшифровали предмет: "📜' + newscroll['name'] + ' lvl.' + str(
            newscroll['lvl']) + '"! Просмотр - /info_' + objectcode)

    if item['type'] == 'undefined_recipe':
        goldcost = 100
        emoj = "📗"
        if item['color'] == 'red':
            goldcost = 100
            emoj = "📕"
            recipelist = allrecipes_red.copy()
        if item['color'] == 'blue':
            goldcost = 100
            emoj = "📘"
            recipelist = allrecipes_blue.copy()
        if item['color'] == 'green':
            goldcost = 100
            emoj = "📗"
            recipelist = allrecipes_green.copy()
        if user['gold'] < goldcost:
            sendm(cwbot, m.chat.id, 'Недостаточно золота!')
            return
        recipecode = random.choice(recipelist)
        objectcode = generate_object_code(user)
        recipename = resource_to_name(recipecode)
        newrecipe = create_recipe(recipecode, objectcode, recipename, undefined=False)
        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: newrecipe}})
        cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + item['objectcode']: 1}})
        cwusers.update_one({'id': user['id']}, {'$inc': {'gold': -goldcost}})
        sendm(cwbot, m.chat.id, 'Вы успешно расшифровали предмет: "📓' + newrecipe[
            'name'] + '"! Просмотр - /info_' + objectcode)


@cwbot.message_handler(commands = ['fix_abuse'])
def fixabusee(m):
    x = cwusers.find_one({'name': "Пасюк Лошадкин"})
    counter_saw = 0
    counter_claws = 0
    counter_bulava = 0
    sendm(cwbot, m.chat.id, 'Начало пиломета')
    for ids in x['inventory']:
        item = x['inventory'][ids]
        if item['name'] in ['Пиломет']:
            cwusers.update_one({'name':"Пасюк Лошадкин"},{'$unset':{'inventory.'+ids:1}})
            counter_saw += 1
    sendm(cwbot, m.chat.id, 'Удалено: ' + str(counter_saw) + ' пил, ' + str(counter_claws) + ' когтей, ' + str(
        counter_bulava) + ' булавы')
    sendm(cwbot, m.chat.id, 'Начало когтей')
    for ids in x['inventory']:
        item = x['inventory'][ids]
        if item['name'] in ['Стальные когти']:
            cwusers.update_one({'name':"Пасюк Лошадкин"},{'$unset':{'inventory.'+ids:1}})
            counter_claws += 1
    sendm(cwbot, m.chat.id, 'Удалено: ' + str(counter_saw) + ' пил, ' + str(counter_claws) + ' когтей, ' + str(
        counter_bulava) + ' булавы')
    sendm(cwbot, m.chat.id, 'Начало булавы')
    for ids in x['inventory']:
        item = x['inventory'][ids]
        if item['name'] in ['Булава']:
            cwusers.update_one({'name':"Пасюк Лошадкин"},{'$unset':{'inventory.'+ids:1}})
            counter_bulava += 1
    sendm(cwbot, m.chat.id, 'Удалено: '+str(counter_saw)+' пил, '+str(counter_claws)+' когтей, '+str(counter_bulava)+' булавы')


@cwbot.message_handler(func=lambda m: m.text[:11] == '/skillinfo_')
def skillinffooom(m):
    try:
        skill = m.text.split('_')[1]
        lvl = m.text.split('_')[2]
    except:
        sendm(cwbot, m.chat.id, 'Неправильный формат команды!')
        return
    try:
        text = cw_skillinfo.info[skill + '?' + lvl]
    except:
        sendm(cwbot, m.chat.id, 'Такого скилла не существует, либо вы ввели неправильный уровень!')
        return
    sendm(cwbot, m.chat.id, 'Описание способности:\n' + text)


@cwbot.message_handler(func=lambda m: is_castle_message(m))
def castlessmsggg(m):
    # user = cwusers.find_one({'id':m.from_user.id})
    kb = castle_kb()
    sendm(cwbot, m.chat.id, "Ваш родной замок. В магазине можно найти базовые свитки изучения скиллов и оружие.",
                       reply_markup=kb)


@cwbot.message_handler(func=lambda m: is_auction_message(m))
def auctionssmsggg(m):
    # user = cwusers.find_one({'id':m.from_user.id})
    text = ''
    text += 'На аукцион вы можете выкладывать вещи из вашего инвентаря. Игроки могут делать ставки на предмет, пока не выйдет время аукциона. ' + \
            'Формат ввода команды:\n/auc_jtUIq_3_1\nПервое число означает количество часов, на которое вы хотите запустить аукцион, а второе - минимальную ставку. ' + \
            'Если не ввести число, аукцион будет ' + \
            'выставлен на 3 часа.\n\nПросмотр ваших активных аукционов - /viewlots\nПросмотр ваших ставок - /viewbets\nПросмотр всех существующих аукционов - /viewalllots'
    sendm(cwbot, m.chat.id, text)


def get_user_inventory_text(user):
    text = ''
    for ids in user['inventory']:
        item = user['inventory'][ids]
        if item['type'] == 'weapon':
            if item['lvl'] == 4:
                text += '⚔️|' + item['name'] + ' (' + str(item['lvl']) + 'лвл mod.'+str(item['modification'])+') /info_' + ids + '\n'
            else:
                text += '⚔️|' + item['name'] + ' (' + str(item['lvl']) + 'лвл) /info_' + ids + '\n'

        elif item['type'] == 'scroll':
            text += '📜|Свиток способности "' + item['name'] + '" (' + str(item['lvl']) + 'лвл) /info_' + ids + '\n'
        elif item['type'] == 'recipe':
            text += '📓|' + item['name'] + ' /info_' + ids + '\n'
        elif item['type'] == 'undefined_recipe':
            emoj = "📕"
            etext = "Неизвестно"
            if item['code'] == "recipe_red":
                emoj = "📕"
                etext = "Красный рецепт"
            if item['code'] == "recipe_green":
                emoj = "📗"
                etext = "Зелёный рецепт"
            if item['code'] == "recipe_blue":
                emoj = "📘"
                etext = "Синий рецепт"
            text += emoj + '|' + etext + ' /info_' + ids + '\n'
        elif item['type'] == 'undefined_scroll':
            text += '🗞' + '|' + item['name'] + ' /info_' + ids + '\n'
        elif item['type'] == 'essence':
            text += '🌐|' + item['name'] + ' /info_' + ids + '\n'

    restext = ''
    for ids in user['resources']:
        if user['resources'][ids] > 0:
            restext += '📦' + resource_to_name(ids) + ': ' + str(user['resources'][ids]) + ' (/t_' + ids + ')\n'
    if restext != '':
        text += '\nРесурсы:\n' + restext
    return text


def get_user_skills_text(user):
    text = ''
    text += '✅Экипированные способности:'
    if len(user['equipped_skills']) > 0:
        text += '\n'
    for ids in user['equipped_skills']:
        skill = user['equipped_skills'][ids]
        text += '🧬' + skill['name'] + ' lvl.' + str(skill['lvl']) + ' (снять - /off_' + skill['skillcode'] + '), '
    if len(user['equipped_skills']) > 0:
        text = text[:len(text) - 2]
        text += '.'
    text += '\n\n'
    text += '📜Изученные способности:\n'
    for ids in user['skills']:
        skill = user['skills'][ids]
        text += '🧬' + skill['name'] + ' lvl.' + str(skill['lvl']) + ':\n'
        text += get_cw_skill_description(skill) + '\n'
        text += 'Экипировать - /use_' + skill['skillcode'] + ', экипировать только для битвы замков - /use_' + skill[
            'skillcode'] + '_castlefight.\n\n'
    return text


def get_user_skills_lvlup_text(user):
    text = ''
    text += '📜Изученные способности:\n'
    for ids in user['skills']:
        skill = user['skills'][ids]
        text += '🧬' + skill['name'] + ' lvl.' + str(skill['lvl']) + ':\n'
        text += get_cw_skill_description(skill) + '\n'
        lvluptext = ''
        cantlvl = False
        cost = 100
        if skill['lvl'] == 1:
            cost = 3
        if skill['lvl'] == 2:
            cost = 9
        if skill['lvl'] >= 3:
            cantlvl = True
        if not cantlvl:
            skill['lvl'] += 1
            lvluptext += 'Описание способности на уровне ' + str(skill['lvl']) + ':\n'
            lvluptext += get_cw_skill_description(skill)
            text += '🆙Повысить уровень способности - /lvlup_' + skill['skillcode'] + '. ' + lvluptext + '\n'
            text += 'Цена повышения уровня: ' + str(cost) + '🧬\n\n'
        else:
            text += 'Способность максимального уровня!' + '\n\n'

    return text
from telebot.util import smart_split

@cwbot.message_handler(func=lambda m: is_inventory_message(m))
def inventorysmsggg(m):
    try:
        user = cwusers.find_one({'id': m.from_user.id})
        text = get_user_inventory_text(user)
        if text == '':
            text = "Пусто!"
        [sendm(cwbot, m.chat.id, tts) for tts in smart_split(text)] 
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: is_skills_message(m))
def skillsmsggg(m):
    try:
        user = cwusers.find_one({'id': m.from_user.id})
        text = get_user_skills_text(user)
        if text == '':
            text = "Пусто!"
        sendm(cwbot, m.chat.id, text)
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: is_shop_message(m))
def castlessmsggg(m):
    # user = cwusers.find_one({'id':m.from_user.id})
    kb = shop_kb()
    text = "*📜Свитки* - Древние записи о ведении боя и его техниках. С помощью них можно изучить новые скиллы.\n\n" + \
           "*⚙️Снаряжение* - оружейная мастерская старого кузнеца. Простое, но надёжное оружие."
    sendm(cwbot, m.chat.id, text, reply_markup=kb, parse_mode="markdown")


@cwbot.message_handler(func=lambda m: is_scrolls_message(m))
def scrollsmsggg(m):
    # user = cwusers.find_one({'id':m.from_user.id})
    text = ''
    for ids in scrolls_to_sale:
        scroll = scrolls_to_sale[ids]
        text += '*' + scroll['name'] + '*\n💰Цена: ' + str(scroll['cost']) + ' (' + scroll['buy_command'].replace('_',
                                                                                                                 '\_') + ')\n💬' + \
                scroll['description'] + '\n\n'
    sendm(cwbot, m.chat.id, text, parse_mode="markdown")


@cwbot.message_handler(func=lambda m: is_weapons_message(m))
def weaponsmsggg(m):
    # user = cwusers.find_one({'id':m.from_user.id})
    text = ''
    for ids in weapons_to_sale:
        weapon = weapons_to_sale[ids]
        text += '*' + weapon['name'] + '*\n💰Цена: ' + str(weapon['cost']) + ' (' + weapon['buy_command'].replace('_',
                                                                                                                 '\_') + ')\n💬' + \
                weapon['description'] + '\n\n'
    sendm(cwbot, m.chat.id, text, parse_mode="markdown")


@cwbot.message_handler(func=lambda m: is_quest_message(m))
def questssmsggg(m):
    user = cwusers.find_one({'id': m.from_user.id})
    kb = quests_kb(user)
    sendm(cwbot, m.chat.id,
                       'Выберите квест:\n\n*🐭|Крысиное логово* - битва с крысой. Сражение с этими агрессивными существами опасно, ' + \
                       'но позволяет быстрее набраться опыта.\n\n*🥾|Патруль окрестностей* - охрана территории своего замка.\n\n' + \
                       '*👀|Проверить странный шум* - если во время патруля вы заметили что-то подозрительное - вероятнее всего, это вражеский боец. Самые смелые ' + \
                       'могут встретиться с врагом и бросить ему вызов. Не тратит выносливость.\n\n👹|Тролль под мостом - попытайтесь застать тролля врасплох! Наверняка '+\
                       'у него в логове есть, чем поживиться... Тратит 2 выносливости.', reply_markup=kb,
                       parse_mode='markdown')


def get_materials_for_upgrade(item):
    returnitems = {
        'wood': 999999,
        'gold': 999999
    }
    if item['code'] == 'baseball':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_baseball': 1,
                'wood': 50,
                'steelplate': 5,
                'rope': 8,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_baseball': 1,
                'wood': 100,
                'steelplate': 10,
                'rope': 15,
                'gold': 3000
            }
    if item['code'] == 'shortsword':
        if item['lvl'] == 1:
            returnitems = {
                'wood': 15,
                'plastic': 10,
                'steelplate': 2,
                'threads': 3,
                'gold': 250
            }
        if item['lvl'] == 2:
            returnitems = {
                'wood': 25,
                'plastic': 25,
                'steelplate': 6,
                'threads': 9,
                'gold': 800
            }

    if item['code'] == 'revolver':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_revolver': 1,
                'plastic': 20,
                'steelplate': 5,
                'gunpowder': 15,
                'diamonds': 1,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_revolver': 1,
                'plastic': 20,
                'steelplate': 5,
                'gunpowder': 30,
                'diamonds': 6,
                'gold': 3000
            }

    if item['code'] == 'pistol':
        if item['lvl'] == 1:
            returnitems = {
                'plastic': 20,
                'wood': 10,
                'steelplate': 5,
                'gunpowder': 5,
                'gold': 400
            }
        if item['lvl'] == 2:
            returnitems = {
                'plastic': 30,
                'wood': 30,
                'steelplate': 10,
                'gunpowder': 15,
                'gold': 1000
            }

    if item['code'] == 'knife':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_knife': 1,
                'ironbars': 25,
                'wood': 5,
                'steelplate': 15,
                'rope': 10,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_knife': 1,
                'ironbars': 50,
                'wood': 10,
                'steelplate': 25,
                'rope': 15,
                'gold': 3000
            }

    if item['code'] == 'obrez':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_obrez': 1,
                'ironbars': 15,
                'steelplate': 15,
                'gunpowder': 30,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_obrez': 1,
                'ironbars': 35,
                'steelplate': 20,
                'gunpowder': 50,
                'diamonds': 1,
                'gold': 3000
            }

    if item['code'] == 'torch':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_torch': 1,
                'gunpowder': 10,
                'kerosene': 10,
                'threads': 10,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_torch': 1,
                'gunpowder': 30,
                'kerosene': 30,
                'threads': 30,
                'gold': 3000
            }

    if item['code'] == 'flamethrower':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_flamethrower': 1,
                'kerosene': 20,
                'ironbars': 30,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_flamethrower': 1,
                'kerosene': 40,
                'ironbars': 60,
                'gold': 3000
            }

    if item['code'] == 'rifle':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_rifle': 1,
                'diamonds': 8,
                'ironbars': 50,
                'steelplate': 4,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_rifle': 1,
                'diamonds': 16,
                'ironbars': 70,
                'steelplate': 8,
                'gold': 3000
            }
    if item['code'] == 'axe':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_axe': 1,
                'wood': 40,
                'rope': 40,
                'ironbars': 5,
                'diamonds': 1,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_axe': 1,
                'wood': 60,
                'rope': 60,
                'ironbars': 7,
                'diamonds': 1,
                'gold': 3000
            }
    if item['code'] == 'bulava':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_bulava': 1,
                'wood': 50,
                'ironbars': 50,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_bulava': 1,
                'wood': 100,
                'ironbars': 60,
                'gold': 3000
            }

    if item['code'] == 'kastet':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_kastet': 1,
                'ironbars': 15,
                'steelplate': 10,
                'medicalcomponents': 10,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_kastet': 1,
                'ironbars': 25,
                'steelplate': 30,
                'medicalcomponents': 30,
                'gold': 3000
            }

    if item['code'] == 'kuvalda':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_kuvalda': 1,
                'steelplate': 20,
                'battery': 4,
                'threads': 10,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_kuvalda': 1,
                'steelplate': 30,
                'battery': 8,
                'threads': 20,
                'gold': 3000
            }

    if item['code'] == 'chain':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_chain': 1,
                'steelplate': 15,
                'wood': 20,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_chain': 1,
                'steelplate': 25,
                'wood': 45,
                'gold': 3000
            }

    if item['code'] == 'spear':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_spear': 1,
                'ironbars': 15,
                'wood': 15,
                'threads': 15,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_spear': 1,
                'ironbars': 25,
                'wood': 25,
                'threads': 25,
                'gold': 3000
            }

    if item['code'] == 'saber':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_saber': 1,
                'medicalcomponents': 8,
                'battery': 8,
                'diamonds': 2,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_saber': 1,
                'medicalcomponents': 16,
                'battery': 16,
                'diamonds': 3,
                'gold': 3000
            }

    if item['code'] == 'bow':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_bow': 1,
                'kerosene': 10,
                'wood': 30,
                'threads': 30,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_bow': 1,
                'kerosene': 20,
                'wood': 50,
                'threads': 50,
                'gold': 3000
            }

    if item['code'] == 'claws':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_claws': 1,
                'steelplate': 25,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_claws': 1,
                'steelplate': 50,
                'gold': 3000
            }

    if item['code'] == 'police':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_police': 1,
                'battery': 10,
                'wood': 20,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_police': 1,
                'battery': 20,
                'wood': 30,
                'gold': 3000
            }

    if item['code'] == 'saw':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_saw': 1,
                'ironbars': 10,
                'diamonds': 10,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_saw': 1,
                'ironbars': 15,
                'diamonds': 15,
                'gold': 3000
            }

    if item['code'] == 'shurikens':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_shurikens': 1,
                'ironbars': 16,
                'steelplate': 12,
                'threads': 4,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_shurikens': 1,
                'ironbars': 24,
                'steelplate': 16,
                'threads': 6,
                'gold': 3000
            }

    if item['code'] == 'molot':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_molot': 1,
                'wood': 15,
                'battery': 6,
                'ironbars': 15,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_molot': 1,
                'wood': 25,
                'battery': 10,
                'ironbars': 25,
                'gold': 3000
            }

    if item['code'] == 'shest':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_shest': 1,
                'wood': 60,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_shest': 1,
                'wood': 100,
                'gold': 3000
            }

    if item['code'] == 'tesak':
        if item['lvl'] == 1:
            returnitems = {
                'recipe_tesak': 1,
                'steelplate': 10,
                'ironbars': 10,
                'wood': 10,
                'diamonds': 4,
                'gold': 1000
            }
        if item['lvl'] == 2:
            returnitems = {
                'recipe_tesak': 1,
                'steelplate': 15,
                'ironbars': 15,
                'wood': 15,
                'diamonds': 6,
                'gold': 3000
            }

    return returnitems


def get_materials_for_craft(item):
    returnitems = {
        'wood': 10000,
        'gold': 100000
    }
    if item['code'] == "recipe_baseball":
        returnitems = {
            'recipe_baseball': 1,
            'wood': 15,
            'steelplate': 1,
            'gold': 500
        }
    elif item['code'] == "recipe_revolver":
        returnitems = {
            'recipe_revolver': 1,
            'plastic': 15,
            'steelplate': 5,
            'gunpowder': 5,
            'gold': 500
        }

    elif item['code'] == "recipe_knife":
        returnitems = {
            'recipe_knife': 1,
            'ironbars': 15,
            'wood': 5,
            'steelplate': 10,
            'rope': 5,
            'gold': 500
        }

    elif item['code'] == "recipe_obrez":
        returnitems = {
            'recipe_obrez': 1,
            'ironbars': 10,
            'steelplate': 5,
            'gunpowder': 15,
            'gold': 500
        }

    elif item['code'] == "recipe_torch":
        returnitems = {
            'recipe_torch': 1,
            'gunpowder': 5,
            'kerosene': 5,
            'threads': 5,
            'gold': 500
        }

    elif item['code'] == "recipe_flamethrower":
        returnitems = {
            'recipe_flamethrower': 1,
            'kerosene': 10,
            'ironbars': 20,
            'gold': 500
        }

    elif item['code'] == "recipe_rifle":
        returnitems = {
            'recipe_rifle': 1,
            'diamonds': 4,
            'ironbars': 30,
            'steelplate': 2,
            'gold': 500
        }

    elif item['code'] == "recipe_axe":
        returnitems = {
            'recipe_axe': 1,
            'wood': 20,
            'rope': 20,
            'ironbars': 3,
            'diamonds': 1,
            'gold': 500
        }

    elif item['code'] == "recipe_bulava":
        returnitems = {
            'recipe_bulava': 1,
            'wood': 20,
            'ironbars': 20,
            'gold': 500
        }

    elif item['code'] == "recipe_kastet":
        returnitems = {
            'recipe_kastet': 1,
            'ironbars': 10,
            'steelplate': 5,
            'medicalcomponents': 5,
            'gold': 500
        }

    elif item['code'] == "recipe_kuvalda":
        returnitems = {
            'recipe_kuvalda': 1,
            'steelplate': 10,
            'battery': 1,
            'threads': 5,
            'gold': 500
        }

    elif item['code'] == "recipe_chain":
        returnitems = {
            'recipe_chain': 1,
            'steelplate': 10,
            'wood': 10,
            'gold': 500
        }

    elif item['code'] == "recipe_spear":
        returnitems = {
            'recipe_spear': 1,
            'ironbars': 10,
            'wood': 10,
            'threads': 10,
            'gold': 500
        }

    elif item['code'] == "recipe_saber":
        returnitems = {
            'recipe_saber': 1,
            'medicalcomponents': 4,
            'battery': 4,
            'diamonds': 1,
            'gold': 500
        }

    elif item['code'] == "recipe_bow":
        returnitems = {
            'recipe_bow': 1,
            'kerosene': 5,
            'wood': 15,
            'threads': 15,
            'gold': 500
        }

    elif item['code'] == "recipe_claws":
        returnitems = {
            'recipe_claws': 1,
            'steelplate': 10,
            'gold': 500
        }

    elif item['code'] == "recipe_police":
        returnitems = {
            'recipe_police': 1,
            'battery': 5,
            'wood': 10,
            'gold': 500
        }

    elif item['code'] == "recipe_saw":
        returnitems = {
            'recipe_saw': 1,
            'ironbars': 5,
            'diamonds': 5,
            'gold': 500
        }

    elif item['code'] == "recipe_shurikens":
        returnitems = {
            'recipe_shurikens': 1,
            'ironbars': 8,
            'steelplate': 8,
            'threads': 2,
            'gold': 500
        }

    elif item['code'] == "recipe_molot":
        returnitems = {
            'recipe_molot': 1,
            'wood': 10,
            'battery': 3,
            'ironbars': 10,
            'gold': 500
        }

    elif item['code'] == "recipe_shest":
        returnitems = {
            'recipe_shest': 1,
            'wood': 30,
            'gold': 500
        }

    elif item['code'] == "recipe_tesak":
        returnitems = {
            'recipe_tesak': 1,
            'steelplate': 5,
            'ironbars': 5,
            'wood': 5,
            'diamonds': 2,
            'gold': 500
        }

    return returnitems


def get_craft_text(user):
    text = ''
    for ids in user['inventory']:
        item = user['inventory'][ids]
        print(str(item))
        if item['type'] == "recipe":
            # print("2")
            # print(str(item))
            text += '\n*' + item['name'] + '*\nТребуемые материалы:\n'
            materials = get_materials_for_craft(item)
            materialtext = ''
            for ids in materials:
                if ids == 'gold':
                    materialtext += "    Золото - " + str(materials[ids]) + '💰\n'
                else:
                    materialtext += "    " + resource_to_name(ids) + ' - ' + str(materials[ids]) + '\n'
            materialtext += 'Для создания введите /wcraft\_' + item['objectcode'] + '.\n'
            materialtext += 'Узнать характеристики оружия - /winfo\_' + item['code'].split('_')[
                1] + '\_1 (число можно заменить на любое от 1 до 3).\n'
            text += materialtext
    if text == '':
        text = 'У вас нет рецептов!'
    return text


def get_upgrade_text(user):
    text = ''
    for ids in user['inventory']:
        item = user['inventory'][ids]
        if item['type'] == "weapon":
            if item['lvl'] < 3:
                text += '\n' + item['name'] + ' lvl.' + str(item['lvl']) + '\nТребуемые материалы:\n'
                materials = get_materials_for_upgrade(item)
                materialtext = ''
                for idss in materials:
                    if idss == 'gold':
                        materialtext += "    Золото - " + str(materials[idss]) + '💰\n'
                    else:
                        materialtext += "    " + resource_to_name(idss) + ' - ' + str(materials[idss]) + '\n'
                materialtext += 'Для улучшения введите /wlvlup\_' + item['objectcode'] + '.\n'
                materialtext += 'Узнать характеристики оружия - /winfo\_' + item['code'] + '\_' + str(
                    item['lvl'] + 1) + ' (число можно заменить на любое от 1 до 3).\n'
                text += materialtext
    if text == '':
        text = 'У вас нет оружия, которое можно улучшить!'
    return text


@cwbot.message_handler(func=lambda m: m.text[:7] == '/winfo_')
def winfooom(m):
    try:
        user = cwusers.find_one({'id': m.from_user.id})
        try:
            weaponcode = m.text.split('_')[1]
            weaponlvl = int(m.text.split('_')[2])
        except:
            sendm(cwbot, m.chat.id, 'Неправильный формат команды!')
            return
        if weaponlvl < 1 or weaponlvl > 3:
            sendm(cwbot, m.chat.id, 'Оружия бывают только 1-3 лвлов!')
            return
        objectcode = None
        weapon = get_lvl_weapon(weapon=None, objectcode=objectcode, code=weaponcode, lvl=weaponlvl, need_create=True)
        if weapon == None:
            sendm(cwbot, m.chat.id, 'Такого оружия не существует!')
            return
        text = ''
        text += '⚔️|' + weapon['name'] + ' lvl.' + str(weapon['lvl']) + ':\n'
        text += weapon['description'] + '\n'
        if weapon['name'] not in ['Огнемет', 'Револьвер', 'Сюрикены']:
            text += '💢Урон: ' + str(1 + weapon['dmgbonus']) + '-' + str(weapon['cubes'] + weapon['dmgbonus']) + '\n'
        else:
            if weapon['name'] == 'Револьвер':
                wdmg = 3
            if weapon['name'] == 'Огнемет':
                wdmg = 1
            if weapon['name'] == 'Огнемет Нарсил':
                wdmg = 1
            if weapon['name'] == 'Сюрикены':
                wdmg = 2
            wdmg += weapon['dmgbonus']
            text += '💢Урон: ' + str(wdmg) + '\n'
        text += '🎯Точность: ' + str(weapon['accuracybonus']) + '\n'
        text += '⚡️Затраты энергии: ' + str(weapon['energycost']) + '\n'
        if weapon['ranged']:
            text += '🎯Дальнобойнее\n'
        else:
            text += '👊Ближнее\n'
        sendm(cwbot, m.chat.id, text)
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


def end_auc(lot):
    owner = cwusers.find_one({'id': lot['owner']})
    item = lot['item']
    if lot['buyer'] != None:
        buyer = cwusers.find_one({'id': lot['buyer']})
        objectcode = generate_object_code(buyer)
        item['objectcode'] = objectcode
        cwusers.update_one({'id': buyer['id']}, {'$set': {'inventory.' + objectcode: item}})
        cwusers.update_one({'id': owner['id']}, {'$inc': {'pogs': lot['cost'] + 1}})
        sendm(cwbot, buyer['id'], 'Вы успешно купили на аукционе предмет "' + item[
            'name'] + '"! Просмотр - /info_' + objectcode)
        sendm(cwbot, owner['id'], 'Вы успешно продали на аукционе предмет "' + item['name'] + '" за ' + str(
            lot['cost']) + '👝!')
        cwlogs.send_message(pasyuk_id,
                            '[' + str(buyer['id']) + '] ' + buyer['name'] + ' успешно купил на аукционе предмет "' +
                            item['name'] + '" за ' + str(
                                lot['cost']) + '👝 у ' + owner['name'] + ' ' + str(owner['id']) + '!')
        auction.delete_one({'code': lot['code']})
    else:
        objectcode = generate_object_code(owner)
        item['objectcode'] = objectcode
        cwusers.update_one({'id': owner['id']}, {'$set': {'inventory.' + objectcode: item}})
        cwusers.update_one({'id': owner['id']}, {'$inc': {'pogs': 1}})
        sendm(cwbot, owner['id'], 'Ваш лот "' + item['name'] + ' не был продан! Предмет - /info_' + objectcode)
        cwlogs.send_message(pasyuk_id, '[' + str(owner['id']) + '] ' + owner['name'] + ' не смог продать лот "' + item[
            'name'] + '"!')
        auction.delete_one({'code': lot['code']})


@cwbot.message_handler(commands=['unsetitem'])
def unsetitemm(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
        code = m.text.split(' ')[2]
    except:
        sendm(cwbot, m.chat.id, 'error')
        return
    cwusers.update_one({'id': id}, {'$unset': {'inventory.' + code: 1}})
    sendm(cwbot, m.chat.id, 'done')


def auctioncheck():
    while True:
        for ids in auction.find({}):
            if ids['end_time'] - time.time() < 0:
                end_auc(ids)
        time.sleep(10)


threading.Thread(target=auctioncheck, args=[]).start()


def create_auction_lot(user, item, hours, mincost):
    codes = []
    for ids in auction.find({}):
        codes.append(ids['code'])
    code = ''
    while len(code) < 4:
        code += random.choice(["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"])
    while code in codes:
        code = ''
        while len(code) < 4:
            code += random.choice(["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"])
    cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + item['objectcode']: 1}})
    cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': -1}})
    auction.insert_one({'owner': user['id'], 'item': item, 'code': code, 'cost': mincost - 1, 'buyer': None,
                        'end_time': time.time() + hours * 3600})
    return code


@cwbot.message_handler(commands=['viewlots'])
def viewlll(m):
    text = 'Ваши активные лоты:\n\n'
    x = auction.find({'owner': m.from_user.id})
    for ids in x:
        if ids['item']['type'] == 'weapon':
            text += ids['item']['name'] + ' lvl.' + str(ids['item']['lvl']) + ': /l_' + ids['code'] + '\n'
        else:
            text += ids['item']['name'] + ': /l_' + ids['code'] + '\n'
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(commands=['viewbets'])
def viewlllbets(m):
    text = 'Ваши ставки:\n\n'
    x = auction.find({'buyer': m.from_user.id})
    for ids in x:
        if ids['item']['type'] == 'weapon':
            text += ids['item']['name'] + ' lvl.' + str(ids['item']['lvl']) + ': /l_' + ids['code'] + '\n'
        else:
            text += ids['item']['name'] + ': /l_' + ids['code'] + '\n'
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(commands=['viewalllots'])
def viewallll(m):
    text = 'Все лоты аукциона:\n\n'
    x = auction.find({})
    for ids in x:
        if ids['item']['type'] == 'weapon':
            text += ids['item']['name'] + ' lvl.' + str(ids['item']['lvl']) + ': /l_' + ids['code'] + '\n'
        else:
            text += ids['item']['name'] + ': /l_' + ids['code'] + '\n'
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(func=lambda m: m.text[:2] == '/c')
def craftttexts(m):
    user = cwusers.find_one({'id': m.from_user.id})
    try:
        item = m.text.split('_')[1]
    # if x == 'wood':
    #     y = "Дерево"
    # if x == 'iron_bars':
    #     y = "Железный слиток"
    # if x == 'steel_plate':
    #     y = "Стальная пластина"
    # if x == 'rope':
    #     y = "Верёвка"
    # if x == 'kerosene':
    #     y = "Керосин"
    # if x == 'plastic':
    #     y = "Пластик"
    # if x == 'gunpowder':
    #     y = "Порох"
    # if x == 'threads':
    #     y = "Нитки"
    # if x == "diamonds":
    #     y = "Алмазы"
    except:
        text = 'Известные вам рецепты крафта:\n\n*Мешок золота* (120 "Золото" + 10 "Нитка") /c\_100\n\n'
        text += '*Граната* (2 "Порох" + 1 "Железный слиток" + 3 "Золото") /c\_101\n\n'
        text += '*Щит* (2 "Железный слиток" + 5 "Дерево" + 3 "Золото") /c\_102\n\n'
        text += '*Световая граната* (2 "Стальная пластина" + 2 "Пластик" + 1 "Порох" + 3 "Золото") /c\_103\n\n'
        text += '*Адреналин* (1 "Медицинские компоненты" + 2 "Верёвка" + 3 "Золото") /c\_104\n\n'
        text += '*Джет* (1 "Медицинские компоненты" + 2 "Верёвка" + 3 "Золото") /c\_105\n\n'
        text += '*Хитин* (2 "Стальная пластина" + 3 "Золото") /c\_106\n\n'
        text += '*Коктейль Молотова* (1 "Керосин" + 1 "Железный слиток" + 3 "Золото") /c\_107\n\n'
        text += '*Метательный нож* (1 "железный слиток" + 1 "стальная пластина" + 3 "Пластик" + 3 "Золото") /c\_108\n\n'
        sendm(cwbot, m.chat.id, text, parse_mode="markdown")
        return
    allow = False
    if item == "100":
        if user['gold'] >= 120:
            try:
                if user['resources']['threads'] >= 10:
                    allow = True
            except:
                pass
        if not allow:
            sendm(cwbot, m.chat.id, 'Недостаточно ресурсов!')
            return
        cwusers.update_one({'id': user['id']}, {'$inc': {'gold': -120, 'pogs': 1, 'resources.threads': -10}})
        sendm(cwbot, m.chat.id,
                           "Создан предмет: \"👝Мешок золота\"! Потратить и получить 100 золота - /unwrappog.")
        return
    allow = True
    if item == "101":
        res = {'gunpowder': 2, 'ironbars': 1}
        gold = 3
        result = "grenade"
    if item == "102":
        res = {'wood': 5, 'ironbars': 2}
        gold = 3
        result = "shield"
    if item == "103":
        res = {'steelplate': 2, 'plastic': 2, "gunpowder": 1}
        gold = 3
        result = "flash"
    if item == "104":
        res = {'medicalcomponents': 1, 'rope': 2}
        gold = 3
        result = "adrenaline"
    if item == "105":
        res = {'medicalcomponents': 1, 'rope': 2}
        gold = 3
        result = "dzet"
    if item == "106":
        res = {'steelplate': 2}
        gold = 3
        result = "hitin"
    if item == "107":
        res = {'kerosene': 1, "ironbars": 1}
        gold = 3
        result = "molotov"
    if item == "108":
        res = {'ironbars': 1, "steelplate": 1, 'plastic': 3}
        gold = 3
        result = "knife"
    if user['gold'] < gold:
        allow = False
    for ids in res:
        try:
            if user['resources'][ids] < res[ids]:
                allow = False
                break
        except:
            allow = False
            break
    if not allow:
        sendm(cwbot, m.chat.id, 'Недостаточно ресурсов!')
        return
    if result not in user['items']:
        cwusers.update_one({'id': user['id']}, {'$set': {'items.' + result: 1}})
    else:
        cwusers.update_one({'id': user['id']}, {'$inc': {'items.' + result: 1}})
    for ids in res:
        cwusers.update_one({'id': user['id']}, {'$inc': {'resources.' + ids: -res[ids]}})
    cwusers.update_one({'id': user['id']}, {'$inc': {'gold': -gold}})
    sendm(cwbot, m.chat.id, 'Создан предмет: "' + get_cw_battleitem_name(result) + '"!')


@cwbot.message_handler(commands=['removeitem'])
def removeii(m):
    if m.from_user.id != 441399484:
        return
    try:
        id = int(m.text.split(' ')[1])
        item = m.text.split(' ')[2]
    except:
        pass
    user = cwusers.find_one({'id': id})
    sendm(cwbot, m.chat.id, str(user['items']))
    cwusers.update_one({'id': user['id']}, {'$inc': {'items.' + item: -1}})
    sendm(cwbot, m.chat.id, 'removed 1 ' + item + '!')


@cwbot.message_handler(commands=['giveitem'])
def removeii(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        id = int(m.text.split(' ')[1])
        item = m.text.split(' ')[2]
    except:
        pass
    user = cwusers.find_one({'id': id})
    sendm(cwbot, m.chat.id, str(user['items']))
    cwusers.update_one({'id': user['id']}, {'$inc': {'items.' + item: 1}})
    sendm(cwbot, m.chat.id, 'gived 1 ' + item + '!')


def generate_birzha_code():
    codes = []
    for ids in resourceauc.find({}):
        print(ids)
        try:
            codes.append(ids['wtscode'])
        except:
            resourceauc.delete_one({'_id': ids['_id']})
    code = ''
    numbers = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']
    while len(code) < 10:
        code += random.choice(numbers)
    while code in codes:
        code = ''
        while len(code) < 10:
            code += random.choice(numbers)
    return code


@cwbot.message_handler(func=lambda m: m.text[:5] == '/wts_')
def wtssitewmss(m):
    if m.from_user.id in auction_wait:
        return
    auction_wait.append(m.from_user.id)
    try:
        itemcode = m.text.split('_')[1]
        amount = int(m.text.split('_')[2])
        cost = int(m.text.split('_')[3])
    except:
        sendm(cwbot, m.chat.id,
                           'Неправильный формат команды! Пример:\n/wts_wood_10_3\n10 - количество предмета "дерево", 3 - стоимость каждой штуки.')
        auction_wait.remove(m.from_user.id)
        return
    if itemcode == 'yaroslavwood':
        sendm(cwbot, m.chat.id, 'Нельзя продать полено Ярослава - его можно только забрать в бою!')
        auction_wait.remove(m.from_user.id)
        return
    if cost < 1:
        sendm(cwbot, m.chat.id, 'Минимальная цена - 1💰!')
        auction_wait.remove(m.from_user.id)
        return
    if cost > 100000000:
        sendm(cwbot, m.chat.id, 'Максимальная цена - 100000000💰!')
        auction_wait.remove(m.from_user.id)
        return
    if amount < 1:
        sendm(cwbot, m.chat.id, 'Неправильный формат команды!')
        auction_wait.remove(m.from_user.id)
        return
    user = cwusers.find_one({'id': m.from_user.id})
    if itemcode not in user['resources']:
        sendm(cwbot, m.chat.id, 'У вас этого нет!')
        auction_wait.remove(m.from_user.id)
        return
    if user['resources'][itemcode] < amount:
        sendm(cwbot, m.chat.id, 'У вас столько нет!')
        auction_wait.remove(m.from_user.id)
        return
    if len(user['birzha']) > 2:
        sendm(cwbot, m.chat.id, 'Максимальное число активных лотов на бирже - 3!')
        auction_wait.remove(m.from_user.id)
        return
    newc = generate_birzha_code()
    resourceauc.insert_one(
        {'item': itemcode, 'owner': user['id'], 'amount': amount, 'cost': cost, 'time': time.time(), 'wtscode': newc})
    cwusers.update_one({'id': user['id']}, {'$push': {'birzha': newc}})
    cwusers.update_one({'id': user['id']}, {'$inc': {'resources.' + itemcode: -amount}})
    sendm(cwbot, m.chat.id, 'Вы успешно выставили ' + str(amount) + ' штук товара "' + resource_to_name(
        itemcode) + '" на продажу по ' + str(cost) + '💰! Отменить - /bcancel_' + newc)
    auction_wait.remove(m.from_user.id)


@cwbot.message_handler(func=lambda m: m.text[:9] == '/bcancel_')
def wtssitewmsscancel(m):
    wtbqueue.append([m, 'cancel'])


def cancel_exchange_resource(m):
    try:
        itemcode = m.text.split('_')[1]
    except:
        return
    lot = resourceauc.find_one({'wtscode': itemcode})
    if lot == None:
        sendm(cwbot, m.chat.id, 'Такого лота у вас не существует!')
        return
    if lot['owner'] != m.from_user.id:
        sendm(cwbot, m.chat.id, 'Такого лота у вас не существует!')
        return
    cwusers.update_one({'id': m.from_user.id}, {'$inc': {'resources.' + lot['item']: lot['amount']}})
    resourceauc.delete_many({'wtscode': itemcode})
    cwusers.update_one({'id': m.from_user.id}, {'$pull': {'birzha': itemcode}})
    sendm(cwbot, m.chat.id, 'Лот отменён!')


@cwbot.message_handler(func=lambda m: m.text[:3] == '/t_')
def showitemsss(m):
    try:
        itemcode = m.text.split('_')[1]
    except:
        sendm(cwbot, m.chat.id, 'Неправильный формат команды! Пример:\n/t_wood')
        return
    resname = resource_to_name(itemcode)
    if resname == 'Неизвестно':
        sendm(cwbot, m.chat.id, 'Такого ресурса не существует!')
        return
    mincost = 10001
    top1 = {'amount': 0, 'cost': 0}
    top2 = {'amount': 0, 'cost': 0}
    top3 = {'amount': 0, 'cost': 0}
    x = resourceauc.find({'item': itemcode})
    y = []
    for ids in x:
        y.append(ids)
    bancost = []
    for ids in y:
        if ids['cost'] < mincost:
            mincost = ids['cost']
    top1['cost'] = mincost
    for ids in y:
        if ids['cost'] == mincost:
            top1['amount'] += ids['amount']
    bancost.append(mincost)
    mincost = 10001
    for ids in y:
        if ids['cost'] > bancost[0]:
            if ids['cost'] < mincost:
                mincost = ids['cost']
    top2['cost'] = mincost
    for ids in y:
        if ids['cost'] == mincost:
            top2['amount'] += ids['amount']

    bancost.append(mincost)
    mincost = 10001
    for ids in y:
        if ids['cost'] > bancost[1]:
            if ids['cost'] < mincost:
                mincost = ids['cost']
    top3['cost'] = mincost
    for ids in y:
        if ids['cost'] == mincost:
            top3['amount'] += ids['amount']

    text = '*' + resname + '*:\n'
    if top1['amount'] > 0:
        text += str(top1['amount']) + 'шт. по ' + str(top1['cost']) + '💰\n'
    if top2['amount'] > 0:
        text += str(top2['amount']) + 'шт. по ' + str(top2['cost']) + '💰\n'
    if top3['amount'] > 0:
        text += str(top3['amount']) + 'шт. по ' + str(top3['cost']) + '💰\n'
    if top1['amount'] == 0:
        text += 'Этот ресурс еще никто не продает!'
    else:
        text += 'Купить 1 штуку: /wtb\_' + itemcode + '\_1 (или заменить число в конце на желаемое).'
    sendm(cwbot, m.chat.id, text, parse_mode='markdown')


@cwbot.message_handler(func=lambda m: m.text[:5] == '/wtb_')
def wtbbitewmss(m):
    wtbqueue.append([m, 'wtb'])


def buy_exchange_resource(m):
    try:
        try:
            itemcode = m.text.split('_')[1]
            amount = int(m.text.split('_')[2])
        except:
            sendm(cwbot, m.chat.id,
                               'Неправильный формат команды! Пример:\n/wtb_wood_10\n10 - количество предмета "дерево".')
            return
        resname = resource_to_name(itemcode)
        if resname == 'Неизвестно':
            sendm(cwbot, m.chat.id, 'Такого ресурса не существует!')
            return
        sendm(cwbot, m.chat.id, 'Начинается закупка...')
        x = resourceauc.find({'item': itemcode})
        y = []
        for ids in x:
            y.append(ids)
        user = cwusers.find_one({'id': m.from_user.id})
        gold = user['gold']
        boughts = {}

        mincost = 10001
        for ids in y:
            if ids['cost'] < mincost and ids['owner'] != user['id'] and ids['amount'] > 0:
                mincost = ids['cost']

        while amount > 0:
            lot = None
            for ids in y:
                if ids['cost'] == mincost and ids['owner'] != user['id'] and ids['amount'] > 0:
                    lot = ids
                    break
            if lot != None:
                while lot['amount'] > 0 and user['gold'] >= lot['cost'] and amount > 0:
                    lot['amount'] -= 1
                    user['gold'] -= lot['cost']
                    amount -= 1
                    if lot['_id'] not in boughts:
                        boughts[lot['_id']] = {'amount': 1, 'owner': lot['owner'], 'cost': lot['cost'],
                                               'wtscode': lot['wtscode']}
                    else:
                        boughts[lot['_id']]['amount'] += 1
                if user['gold'] < lot['cost']:
                    break
            else:
                break
        buyamount = 0
        buygold = 0
        for ids in boughts:
            buyamount += boughts[ids]['amount']
            buygold += boughts[ids]['amount'] * boughts[ids]['cost']
            resourceauc.update_one({'_id': ids}, {'$inc': {'amount': -boughts[ids]['amount']}})
            cwusers.update_one({'id': boughts[ids]['owner']},
                               {'$inc': {'gold': boughts[ids]['amount'] * boughts[ids]['cost']}})
            cwusers.update_one({'id': user['id']}, {'$inc': {'gold': -(boughts[ids]['amount'] * boughts[ids]['cost'])}})
            if itemcode not in user['resources']:
                cwusers.update_one({'id': user['id']}, {'$set': {'resources.' + itemcode: boughts[ids]['amount']}})
            else:
                cwusers.update_one({'id': user['id']}, {'$inc': {'resources.' + itemcode: boughts[ids]['amount']}})
        for ids in boughts:
            x = resourceauc.find_one({'_id': ids})
            if x['amount'] <= 0:
                cwusers.update_one({'id': boughts[ids]['owner']}, {'$pull': {'birzha': boughts[ids]['wtscode']}})
        resourceauc.delete_many({'amount': {'$lt': 1}})
        sendm(cwbot, m.chat.id,
                           'Вы купили ' + str(buyamount) + 'шт. ресурса "' + resname + '" за ' + str(buygold) + '💰!')
        sellerstext = ''
        for ids in boughts:
            sellerstext += cwusers.find_one({'id': boughts[ids]['owner']})['name'] + '(' + str(
                boughts[ids]['owner']) + ')\n'
        cwlogs.send_message(pasyuk_id,
                            '[' + str(user['id']) + ' ' + user['name'] + ']:\n' + 'Вы купили ' + str(
                                buyamount) + 'шт. ресурса "' + resname + '" за ' + str(
                                buygold) + '💰! Продавцы:\n' + sellerstext)
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(commands=['repairbirzha'])
def repairb(m):
    if m.from_user.id != pasyuk_id:
        return
    text = 'fixes:\n'
    for ids in cwusers.find({}):
        for idss in ids['birzha']:
            if resourceauc.find_one({'wtscode': idss}) == None:
                cwusers.update_one({'id': ids['id']}, {'$pull': {'birzha': idss}})
                text += 'fixed ' + ids['name'] + '\n'
    sendm(cwbot, m.chat.id, text)


def checkwtbqueue():
    while True:
        wremove = []
        for ids in wtbqueue:
            if ids[1] == 'wtb':
                buy_exchange_resource(ids[0])
            else:
                cancel_exchange_resource(ids[0])
            wremove.append(ids)
        for ids in wremove:
            wtbqueue.remove(ids)
        time.sleep(0.1)


threading.Thread(target=checkwtbqueue, args=[]).start()


@cwbot.message_handler(commands=['unwrappog'])
def unwrapp(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['pogs'] <= 0:
        sendm(cwbot, m.chat.id, 'Недостаточно 👝мешков золота!')
        return
    cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': -1, 'gold': 100}})
    sendm(cwbot, m.chat.id, 'Использовано: 👝Мешок золота. Получено: 100💰')


@cwbot.message_handler(func=lambda m: m.text[:4] == "/auc")
def sellitemaucc(m):
    try:
        if m.from_user.id in auction_wait:
            return
        auction_wait.append(m.from_user.id)
        user = cwusers.find_one({'id': m.from_user.id})
        try:
            item = m.text.split('_')[1]
        except:
            auction_wait.remove(m.from_user.id)
            return
        try:
            mincost = int(m.text.split('_')[3])
        except:
            mincost = 1
        if mincost < 1:
            sendm(cwbot, m.chat.id, 'Нельзя выставить минимальную цену ставки ниже 1!')
            auction_wait.remove(m.from_user.id)
            return
        if mincost >= 1000000:
            sendm(cwbot, m.chat.id, 'Нельзя выставить минимальную цену ставки выше миллиона!')
            auction_wait.remove(m.from_user.id)
            return
        if item not in user['inventory']:
            sendm(cwbot, m.chat.id, 'У вас в инвентаре нет этого!')
            auction_wait.remove(m.from_user.id)
            return
        if user['pogs'] < 1:
            sendm(cwbot, m.chat.id, 'Вам нужен 1👝 для залога!')
            auction_wait.remove(m.from_user.id)
            return
        try:
            hours = int(m.text.split('_')[2])
            if hours < 1:
                hours = 1
        except:
            hours = 3
        if hours > 48:
            sendm(cwbot, m.chat.id, 'Максимальное время лота - 48 часов!')
            auction_wait.remove(m.from_user.id)
            return
        item = user['inventory'][item]
        code = create_auction_lot(user, item, hours, mincost)
        sendm(cwbot, m.chat.id, 'Вы успешно создали лот предмета "' + item['name'] + '" длительностью в ' + str(
            hours) + ' часа(ов). Просмотр - /l_' + code)
        auction_wait.remove(m.from_user.id)
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: m.text[:5] == "/bet_")
def bettaucc(m):
    lot = None
    try:
        code = m.text.split('_')[1]
        amount = int(m.text.split('_')[2])
    except:
        return
    for ids in auction.find({}):
        if ids['code'] == code:
            lot = ids
            break
    if lot == None:
        sendm(cwbot, m.chat.id, 'Такого лота не существует!')
        return
    if lot['cost'] >= amount:
        sendm(cwbot, m.chat.id, 'Нельзя делать ставку меньше текущей!')
        return
    user = cwusers.find_one({'id': m.from_user.id})
    if user['pogs'] < amount:
        sendm(cwbot, m.chat.id, 'У вас нет столько 👝погов!')
        return
    if user['id'] == lot['owner']:
        sendm(cwbot, m.chat.id, 'Нельзя делать ставку на свой лот!')
        return
    if user['id'] == lot['buyer']:
        sendm(cwbot, m.chat.id, 'Вы уже сделали ставку на этот лот!')
        return
    end_time = lot['end_time']
    if end_time - time.time() <= 15 * 60:
        end_time = time.time() + 15 * 60
    if lot['buyer'] != None:
        buyer = cwusers.find_one({'id': lot['buyer']})
        cwusers.update_one({'id': buyer['id']}, {'$inc': {'pogs': lot['cost']}})
        try:
            sendm(cwbot, buyer['id'], "Ваша ставка была перебита! Просмотр лота - /l_" + code)
        except:
            pass
    cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': -amount}})
    auction.update_one({'code': code}, {'$set': {'buyer': m.from_user.id, 'cost': amount, 'end_time': end_time}})
    sendm(cwbot, m.chat.id, 'Вы успешно сделали ставку! Просмотр лота - /l_' + code)


@cwbot.message_handler(func=lambda m: m.text[:3] == "/l_")
def watchitemaucc(m):
    try:
        code = m.text.split('_')[1]
    except:
        return
    text = get_lot_info(code, m)
    sendm(cwbot, m.chat.id, text)


def get_lot_info(code, m):
    try:
        lot = None
        for ids in auction.find({}):
            if ids['code'] == code:
                lot = ids
                break
        if lot == None:
            return 'Такого лота не существует!'
        text = ''
        if ids['item']['type'] == 'weapon' and ids['item']['lvl'] == 4:
            text += 'Лот ' + code + ' - "' + ids['item']['name'] + ' lvl.' + str(ids['item']['lvl']) + ' mod.' + str(
                ids['item']['modification']) + ' (' + str(ids['item']['kills']) + ' душ)"\n'
        elif ids['item']['type'] == 'weapon' or ids['item']['type'] == "scroll":
            text += 'Лот ' + code + ' - "' + ids['item']['name'] + ' lvl.' + str(ids['item']['lvl']) + '"\n'
        elif ids['item']['type'] == 'essence':
            text += 'Лот ' + code + ' - "' + ids['item']['name'] + ' ('+str(ids['item']['kills'])+' душ)"\n'
        else:
            text += 'Лот ' + code + ' - "' + ids['item']['name'] + '"\n'
        text += 'Цена - ' + str(ids['cost']) + '👝\n'
        if ids['buyer'] == None:
            buyer = "отсутствует"
        else:
            buyeruser = cwusers.find_one({'id': ids['buyer']})
            if buyeruser['id'] == m.from_user.id:
                buyer = "Вы"
            else:
                buyer = castle_to_emoji(buyeruser['castle'])
        text += 'Покупатель - ' + buyer + '\n'
        timeleft = 0
        hours = 0
        mins = 0
        secs = ids['end_time'] - time.time()
        while secs >= 60:
            secs -= 60
            mins += 1
        while mins >= 60:
            hours += 1
            mins -= 60
        if hours >= 1:
            timeleft = str(hours) + 'ч' + str(mins) + 'м'
        else:
            timeleft = str(mins) + 'м'
        if mins < 1:
            timeleft = "несколько секунд"
        text += 'Оставшееся время: ' + timeleft + '\n'
        if ids['owner'] != m.from_user.id:
            text += 'Сделать ставку - /bet_' + code + '_' + str(ids['cost'] + 1) + '\n'
        else:
            text += 'Отменить лот - /cancellot_' + code + '\n'
        return text
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: m.text[:7] == "/wcraft")
def wcraftttm(m):
    user = cwusers.find_one({'id': m.from_user.id})
    try:
        itemcode = m.text.split('_')[1]
    except:
        return
    if itemcode not in user['inventory']:
        sendm(cwbot, m.chat.id, 'У вас в инвентаре нет этого!')
        return
    recipe = user['inventory'][itemcode]
    if recipe['type'] != 'recipe':
        sendm(cwbot, m.chat.id, 'Это не рецепт!')
        return
    materials = get_materials_for_craft(recipe)
    gold = materials['gold']
    if user['gold'] < gold:
        sendm(cwbot, m.chat.id, 'Недостаточно золота!')
        return
    allow = True
    for ids in materials:
        ids_not_recipe = True
        try:
            if ids.split('_')[0] == 'recipe':
                ids_not_recipe = False
        except:
            pass
        if ids != 'gold' and ids_not_recipe:
            try:
                if user['resources'][ids] < materials[ids]:
                    allow = False
                    break
            except:
                allow = False
                break
    if not allow:
        sendm(cwbot, m.chat.id, 'Недостаточно материалов!')
        return

    objectcode = generate_object_code(user)
    weapon = get_lvl_weapon(weapon=None, objectcode=objectcode, code=recipe['code'].split('_')[1], lvl=1,
                            need_create=True)
    cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: weapon}})
    cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + itemcode: 1}})
    for ids in materials:
        if ids != 'gold' and 'recipe' not in ids:
            cwusers.update_one({'id': user['id']}, {'$inc': {'resources.' + ids: -materials[ids]}})
    cwusers.update_one({'id': user['id']}, {'$inc': {'gold': -gold}})
    sendm(cwbot, m.chat.id, 'Вы успешно скрафтили оружие "' + weapon['name'] + ' lvl.' + str(
        weapon['lvl']) + '"! Просмотр - /info_' + objectcode + '.')
    sendm(cwbot, pasyuk_id,
                       '[' + str(user['id']) + ' ' + user['name'] + ']:\n' + 'Вы успешно скрафтили оружие "' + weapon[
                           'name'] + ' lvl.' + str(weapon['lvl']) + '"! Просмотр - /info_' + objectcode + '.')


@cwbot.message_handler(func=lambda m: m.text[:7] == "/wlvlup")
def wlvluppppm(m):
    try:
        user = cwusers.find_one({'id': m.from_user.id})
        try:
            itemcode = m.text.split('_')[1]
        except:
            return
        weapon = None
        if itemcode in user['inventory']:
            weapon = user['inventory'][itemcode]
        if weapon == None:
            sendm(cwbot, m.chat.id, 'У вас в инвентаре нет этого!')
            return
        if weapon['type'] != 'weapon':
            sendm(cwbot, m.chat.id, 'Это не оружие!')
            return
        if weapon['lvl'] >= 3:
            sendm(cwbot, m.chat.id, 'Оружие максимального уровня!')
            return
        materials = get_materials_for_upgrade(weapon)
        gold = materials['gold']
        if user['gold'] < gold:
            sendm(cwbot, m.chat.id, 'Недостаточно золота!')
            return
        allow = True
        hasrecipe = False
        for ids in materials:
            ids_not_recipe = True
            try:
                if ids.split('_')[0] == 'recipe':
                    ids_not_recipe = False
            except:
                pass
            if ids != 'gold' and ids_not_recipe:
                try:
                    if user['resources'][ids] < materials[ids]:
                        allow = False
                        break
                except:
                    allow = False
                    break
            if not ids_not_recipe:
                for idss in user['inventory']:
                    if user['inventory'][idss]['type'] == 'recipe' and user['inventory'][idss]['code'] == ids:
                        hasrecipe = True
                        recipeobjectcode = user['inventory'][idss]['objectcode']
                        break
        if not allow:
            sendm(cwbot, m.chat.id, 'Недостаточно материалов!')
            return
        if weapon['code'] not in ['pistol', 'shortsword']:
            if not hasrecipe:
                sendm(cwbot, m.chat.id, 'У вас нет рецепта!')
                return

        objectcode = weapon['objectcode']
        weapon['lvl'] += 1
        weapon = get_lvl_weapon(weapon, objectcode)
        cwusers.update_one({'id': user['id']}, {'$set': {'inventory.' + objectcode: weapon}})
        if weapon['code'] not in ['pistol', 'shortsword']:
            cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + recipeobjectcode: 1}})
        for ids in materials:
            if ids != 'gold' and 'recipe' not in ids:
                cwusers.update_one({'id': user['id']}, {'$inc': {'resources.' + ids: -materials[ids]}})
        cwusers.update_one({'id': user['id']}, {'$inc': {'gold': -gold}})
        sendm(cwbot, m.chat.id, 'Вы успешно улучшили оружие "' + weapon['name'] + '" до уровня ' + str(
            weapon['lvl']) + '! Просмотр - /info_' + objectcode + '.')
        sendm(cwbot, pasyuk_id,
                           '[' + str(user['id']) + ' ' + user['name'] + ']:\n' + 'Вы успешно улучшили оружие "' +
                           weapon['name'] + '" до уровня ' + str(
                               weapon['lvl']) + '! Просмотр - /info_' + objectcode + '.')
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: is_craft_message(m))
def craftsssmsggg(m):
    user = cwusers.find_one({'id': m.from_user.id})
    kb = craft_kb()
    text = "Здесь вы можете создать или улучшить оружие.\nПросмотр известных вам рецептов крафта - /c."
    # crafttext = get_craft_text(user)
    # kb = types.ReplyKeyboardMarkup()
    sendm(cwbot, m.chat.id, text, reply_markup=kb, parse_mode='markdown')


@cwbot.message_handler(func=lambda m: is_create_weapon_message(m))
def createwmsggg(m):
    user = cwusers.find_one({'id': m.from_user.id})
    crafttext = get_craft_text(user)
    # kb = types.ReplyKeyboardMarkup()
    sendm(cwbot, m.chat.id, crafttext, parse_mode='markdown')


@cwbot.message_handler(func=lambda m: is_upgrade_weapon_message(m))
def createwmsggg(m):
    user = cwusers.find_one({'id': m.from_user.id})
    crafttext = get_upgrade_text(user)
    # kb = types.ReplyKeyboardMarkup()
    sendm(cwbot, m.chat.id, crafttext, parse_mode='markdown')


@cwbot.message_handler(func=lambda m: m.text[:4] == "/buy")
def shop_buysss(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user['current_act'] in busy_acts:
        sendm(cwbot, m.chat.id, 'Вы чем-то заняты и в данный момент не можете сделать это.')
        return
    try:
        category = m.text.split("_")[1]
    except:
        return
    if category == "scroll":
        try:
            scrollname = m.text.split("_")[2]
            if scrollname not in scrolls_to_sale:
                sendm(cwbot, m.chat.id, 'Такого свитка не существует!')
                return
            scroll = scrolls_to_sale[scrollname]
            if user['gold'] < scroll['cost']:
                sendm(cwbot, m.chat.id, 'У вас не хватает 💰золота!')
                return
            cwusers.update_one({'id': m.from_user.id}, {'$inc': {'gold': -scroll['cost']}})
            objectcode = generate_object_code(user)
            cwusers.update_one({'id': m.from_user.id},
                               {'$set': {'inventory.' + objectcode: create_scroll(scroll, objectcode)}})
            sendm(cwbot, m.chat.id, 'Вы успешно приобрели свиток "' + scroll['name'] + ' lvl.' + str(
                scroll['lvl']) + '"! Изучить навык - /use_' + objectcode + '.')
        except:
            pass
            # sendm(cwbot, pasyuk_id, traceback.format_exc())

    elif category == "weapon":
        try:
            weaponname = m.text.split("_")[2]
            if weaponname not in weapons_to_sale:
                sendm(cwbot, m.chat.id, 'Такого оружия не существует!')
                return
            weapon = weapons_to_sale[weaponname]
            if user['gold'] < weapon['cost']:
                sendm(cwbot, m.chat.id, 'У вас не хватает 💰золота!')
                return
            cwusers.update_one({'id': m.from_user.id}, {'$inc': {'gold': -weapon['cost']}})
            objectcode = generate_object_code(user)
            cwusers.update_one({'id': m.from_user.id},
                               {'$set': {'inventory.' + objectcode: create_weapon(weapon, objectcode)}})
            sendm(cwbot, m.chat.id, 'Вы успешно приобрели оружие "' + weapon['name'] + ' lvl.' + str(
                weapon['lvl']) + '"! Экипировать - /on_' + objectcode + \
                               ', экипировать только для битвы замков - /on_' + objectcode + '_castlefight.')
        except:
            sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: m.text[:5] == "/info")
def items_infooo(m):
    user = cwusers.find_one({'id': m.from_user.id})
    itemcode = m.text.split('_')[1]
    if itemcode not in user['inventory']:
        sendm(cwbot, m.chat.id, 'У вас нет такого предмета!')
        return
    item = user['inventory'][itemcode]
    text = ''
    if item['type'] == 'weapon':
        if item['lvl'] != 4:
            text += '⚔️|' + item['name'] + ' lvl.' + str(item['lvl']) + ':\n'
        else:
            text += '⚔️|' + item['name'] + ' lvl.' + str(item['lvl']) + ' mod.'+str(item['modification'])+':\n'
        text += item['description'] + '\n'
        if item['name'] not in ['Огнемет', 'Револьвер', 'Сюрикены']:
            text += '💢Урон: ' + str(1 + item['dmgbonus']) + '-' + str(item['cubes'] + item['dmgbonus']) + '\n'
        else:
            if item['name'] == 'Револьвер':
                wdmg = 3
            if item['name'] == 'Огнемет':
                wdmg = 1
                try:
                    if item['lvl'] == 4 and item['modification'] == 2:
                        wdmg = 0
                except:
                    pass
            if item['name'] == 'Сюрикены':
                wdmg = 2
            wdmg += item['dmgbonus']
            text += '💢Урон: ' + str(wdmg) + '\n'
        text += '🎯Точность: ' + str(item['accuracybonus']) + '\n'
        text += '⚡️Затраты энергии: ' + str(item['energycost']) + '\n'
        if item['ranged']:
            text += '🎯Дальнобойнее\n'
        else:
            text += '👊Ближнее\n'
        if item['lvl'] == 4:
            text += '🌐Собранные дущи: '+str(item['kills'])+'\n'
        text += 'Экипировать: /on_' + itemcode + '\n'
    if item['type'] == 'scroll':
        text += '📜|Свиток навыка "' + item['name'] + '" (' + str(item['lvl']) + 'лвл):\n'
        text += item['description'] + '\n'
        text += 'Использовать: /use_' + itemcode + '\n'
    if item['type'] == 'recipe':
        text += '📓|' + item['name'] + '\n'
    if item['type'] == 'undefined_recipe':
        emoj = "📕"
        etext = "Неизвестно"
        if item['code'] == "recipe_red":
            emoj = "📕"
            etext = "Красный рецепт"
        if item['code'] == "recipe_green":
            emoj = "📗"
            etext = "Зелёный рецепт"
        if item['code'] == "recipe_blue":
            emoj = "📘"
            etext = "Синий рецепт"
        text += emoj + '|' + etext + '\n'
    if item['type'] == 'undefined_scroll':
        text += '🗞|' + item['description'] + '\n'
    if item['type'] == 'essence':
        text += '🌐|'+item['name']+':\n'
        text += item['description'] + '\n'
        text += '🌐|Собранные души: '+str(item['kills'])+'\n'
    sendm(cwbot, m.chat.id, text)


@cwbot.message_handler(func=lambda m: m.text[:3] == "/on")
def item_useee(m):
    try:
        user = cwusers.find_one({'id': m.from_user.id})
        if user['current_act'] in busy_acts:
            sendm(cwbot, m.chat.id, 'Вы чем-то заняты и в данный момент не можете сделать это.')
            return
        itemcode = m.text.split('_')[1]
        if itemcode not in user['inventory']:
            sendm(cwbot, m.chat.id, 'У вас в инвентаре нет такого предмета!')
            return
        item = user['inventory'][itemcode]
        if item['type'] == 'weapon':
            w_not_none = False
            if user['weapon'] != None:
                w_not_none = True
            w = item
            if w_not_none:
                cwusers.update_one({'id': user['id']},
                                   {'$set': {'weapon': w, 'inventory.' + user['weapon']['objectcode']: user['weapon']}})
            else:
                cwusers.update_one({'id': user['id']}, {'$set': {'weapon': w}})
            cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + w['objectcode']: 1}})
            sendm(cwbot, m.chat.id, '⚔️|Экипировано оружие: ' + w['name'] + ' lvl.' + str(w['lvl']))
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: m.text[:4] == "/off")
def item_useee(m):
    try:
        user = cwusers.find_one({'id': m.from_user.id})
        if user['current_act'] in busy_acts:
            sendm(cwbot, m.chat.id, 'Вы чем-то заняты и в данный момент не можете сделать это.')
            return
        itemcode = m.text.split('_')[1]
        if itemcode not in user['equipped_skills']:
            sendm(cwbot, m.chat.id, 'Этот скилл у вас не экипирован!')
            return
        item = user['equipped_skills'][itemcode]
        # if itemcode == 'greedy':
        #    if time.time() - user['equipped_greedy'] < 60*60*8:
        #        sendm(cwbot, m.chat.id, 'Этот скилл можно снять только спустя 8 часов после экипировки!')
        #        return
        if itemcode == 'goodsleep':
            if time.time() - user['equipped_goodsleep'] < 60 * 60 * 6:
                sendm(cwbot, m.chat.id, 'Этот скилл можно снять только спустя 6 часов после экипировки!')
                return
        if item['type'] == 'skill':
            cwusers.update_one({'id': user['id']}, {'$unset': {'equipped_skills.' + item['skillcode']: 1}})
            sendm(cwbot, m.chat.id, '🧬|Снята способность: "' + item['name'] + ' lvl.' + str(item['lvl']) + '".')
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: m.text[:6] == "/lvlup")
def skillss_lvlupp(m):
    try:
        user = cwusers.find_one({'id': m.from_user.id})
        try:
            skillcode = m.text.split('_')[1]
        except:
            text = get_user_skills_lvlup_text(user)
            sendm(cwbot, m.chat.id, text)
            return
        if user['current_act'] in busy_acts:
            sendm(cwbot, m.chat.id, 'Вы чем-то заняты и в данный момент не можете сделать это.')
            return
        if skillcode not in user['skills']:
            sendm(cwbot, m.chat.id, 'У вас нет этого скилла!')
            return
        if skillcode in user['equipped_skills']:
            sendm(cwbot, m.chat.id, 'Чтобы улучшать скилл, его надо снять!')
            return
        skill = user['skills'][skillcode]
        if skill['type'] == 'skill':
            needp = 100
            if skill['lvl'] == 1:
                needp = 3
            elif skill['lvl'] == 2:
                needp = 9
            elif skill['lvl'] == 3:
                sendm(cwbot, m.chat.id, 'Достигнут максимальный уровень скилла - 3!')
                return
            if user['lvl_points'] < needp:
                sendm(cwbot, m.chat.id, 'Недостаточно очков навыков!')
                return
            hasscroll = False
            for idss in user['inventory']:
                if user['inventory'][idss]['type'] == 'undefined_scroll':
                    hasscroll = True
                    recipeobjectcode = user['inventory'][idss]['objectcode']
                    break
            if not hasscroll:
                sendm(cwbot, m.chat.id, 'Для этого вам нужен свиток неизвестной способности!')
                return
            cwusers.update_one({'id': user['id']},
                               {'$inc': {'skills.' + skill['skillcode'] + '.lvl': 1, 'lvl_points': -needp}})
            skill['lvl'] += 1
            cwusers.update_one({'id': user['id']}, {
                '$set': {'skills.' + skill['skillcode'] + '.description': get_cw_skill_description(skill)}})
            cwusers.update_one({'id': user['id']}, {
                '$unset': {'inventory.' + recipeobjectcode: 1}})
            sendm(cwbot, m.chat.id, '🆙|Способность "' + skill['name'] + '" успешно улучшена до уровня ' + str(
                skill['lvl']) + '!')
            sendm(cwbot, pasyuk_id,
                               '[' + str(user['id']) + ' ' + user['name'] + ']:\n' + '🆙|Способность "' + skill[
                                   'name'] + '" успешно улучшена до уровня ' + str(
                                   skill['lvl']) + '!')
        else:
            sendm(cwbot, m.chat.id, 'Этот предмет не является скиллом!')
            return
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(func=lambda m: m.text[:4] == "/use")
def item_useee(m):
    try:
        key = 'inventory'
        user = cwusers.find_one({'id': m.from_user.id})
        if user['current_act'] in busy_acts:
            sendm(cwbot, m.chat.id, 'Вы чем-то заняты и в данный момент не можете сделать это.')
            return
        try:
            itemcode = m.text.split('_')[1]
        except:
            sendm(cwbot, m.chat.id, 'У вас в инвентаре нет такого предмета!')
            return
        if itemcode not in user['inventory']:
            if itemcode not in user['skills']:
                sendm(cwbot, m.chat.id, 'У вас в инвентаре нет такого предмета!')
                return
            else:
                key = 'skills'
        item = user[key][itemcode]
        if item['type'] == 'scroll':
            skillcode = item['code']
            if skillcode in user['skills']:
                alreadyskill = user['skills'][skillcode]
                if alreadyskill['lvl'] >= item['lvl']:
                    sendm(cwbot, m.chat.id,
                                       'Вы уже владеете способностью "' + alreadyskill['name'] + ' lvl.' + str(
                                           alreadyskill['lvl']) + '"!')
                    return
            if skillcode in user['equipped_skills']:
                alreadyskill = user['equipped_skills'][skillcode]
                if alreadyskill['lvl'] >= item['lvl']:
                    sendm(cwbot, m.chat.id,
                                       'Вы уже владеете способностью "' + alreadyskill['name'] + ' lvl.' + str(
                                           alreadyskill['lvl']) + '"!')
                    return
            cwusers.update_one({'id': user['id']},
                               {'$set': {'skills.' + skillcode: create_skill(item['name'], item['code'], item['lvl'])}})
            cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + itemcode: 1}})
            sendm(cwbot, m.chat.id, '📜|Изучена способность: "' + item['name'] + ' lvl.' + str(
                item['lvl']) + '"! Экипировать - /use_' + item['code'] + ', ' + \
                               'экипировать только для битвы замков - /use_' + item['code'] + '_castlefight.')
        elif item['type'] == 'skill':
            if item['skillcode'] in user['equipped_skills']:
                sendm(cwbot, m.chat.id, 'Этот скилл у вас уже экипирован!')
                return
            if len(user['equipped_skills']) >= user['max_skills']:
                sendm(cwbot, m.chat.id,
                                   'Максимальное число скиллов для вашего персонажа - ' + str(user['max_skills']) + '!')
                return
            cwusers.update_one({'id': user['id']}, {'$set': {'equipped_skills.' + item['skillcode']: item}})
            sendm(cwbot, m.chat.id,
                               'Вы успешно экипировали скилл "' + item['name'] + ' lvl.' + str(item['lvl']) + '"!')
            if item['skillcode'] == 'greedy':
                cwusers.update_one({'id': user['id']}, {'$set': {'equipped_greedy': time.time()}})
            if item['skillcode'] == 'goodsleep':
                cwusers.update_one({'id': user['id']}, {'$set': {'equipped_goodsleep': time.time()}})

    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


def get_loot_for_quest(quest="patrol", user=None):
    ################### ITEMS
    ironbars = 0
    steelplate = 0
    rope = 0
    kerosene = 0
    plastic = 0
    wood = 0
    gunpowder = 0
    threads = 0
    diamonds = 0
    medicalcomponents = 0
    battery = 0
    undefined_scroll = 0

    ################ RECIPES
    blue_recipe = 0
    red_recipe = 0
    green_recipe = 0

    if quest == "patrol":
        if random.randint(1, 100) <= 40:
            ironbars += random.randint(1, 4)
        if random.randint(1, 100) <= 25:
            steelplate += random.randint(1, 3)
        if random.randint(1, 100) <= 40:
            rope += random.randint(1, 5)
        if random.randint(1, 100) <= 45:
            plastic += random.randint(1, 5)
        if random.randint(1, 100) <= 45:
            wood += random.randint(1, 7)
        if random.randint(1, 100) <= 45:
            threads += random.randint(1, 6)
        if random.randint(1, 100) <= 5:
            diamonds += random.randint(1, 3)
        if random.randint(1, 100) <= 5:
            undefined_scroll += 1
        if random.randint(1, 100) <= 3:
            blue_recipe += 1
        if random.randint(1, 100) <= 20:
            medicalcomponents += random.randint(1, 2)

    if quest == "rathunt":
        if random.randint(1, 100) <= 30:
            gunpowder += random.randint(1, 4)
        if random.randint(1, 100) <= 30:
            kerosene += random.randint(1, 3)
        if random.randint(1, 100) <= 50:
            ironbars += random.randint(2, 4)
        if random.randint(1, 100) <= 10:
            diamonds += random.randint(1, 4)
        if random.randint(1, 100) <= 5:
            undefined_scroll += 1
        if random.randint(1, 100) <= 3:
            red_recipe += 1

    if quest == "duel":
        if random.randint(1, 100) <= 40:
            rope += random.randint(2, 6)
        if random.randint(1, 100) <= 45:
            plastic += random.randint(2, 5)
        if random.randint(1, 100) <= 45:
            threads += random.randint(3, 7)
        if random.randint(1, 100) <= 5:
            undefined_scroll += 1
        if random.randint(1, 100) <= 3:
            green_recipe += 1
        if random.randint(1, 100) <= 25:
            medicalcomponents += random.randint(1, 2)
        if random.randint(1, 100) <= 25:
            battery += random.randint(1, 3)

    itemlist = {'ironbars': ironbars,
                'steelplate': steelplate,
                'rope': rope,
                'kerosene': kerosene,
                'plastic': plastic,
                'wood': wood,
                'gunpowder': gunpowder,
                'threads': threads,
                'diamonds': diamonds,
                'medicalcomponents': medicalcomponents,
                'battery': battery,

                'recipe_blue': blue_recipe,
                'recipe_red': red_recipe,
                'recipe_green': green_recipe,

                'undefined_scroll': undefined_scroll

                }
    itemlistremove = []
    for ids in itemlist:
        if itemlist[ids] == 0:
            itemlistremove.append(ids)
    for ids in itemlistremove:
        itemlist.pop(ids)

    maxitemlen = random.randint(0, 6)
    give_items = {}
    while len(give_items) < maxitemlen and len(itemlist) > 0:
        x = random.choice(list(itemlist))
        give_items.update({x: itemlist[x]})
        itemlist.pop(x)

    getloot = give_items

    restext = ''
    if len(getloot) > 0:
        restext += '\nРесурсы:\n'
    for ids in getloot:
        if ids.split('_')[0] != 'recipe' and ids != 'undefined_scroll':
            if ids not in user['resources']:
                cwusers.update_one({'id': user['id']}, {'$set': {'resources.' + ids: getloot[ids]}})
            else:
                cwusers.update_one({'id': user['id']}, {'$inc': {'resources.' + ids: getloot[ids]}})
            restext += '*📦' + resource_to_name(ids) + '*: ' + str(getloot[ids]) + '\n'
        else:
            if ids != 'undefined_scroll':
                objectcode = generate_object_code(user)
                recipename = resource_to_name(ids)
                x = ids.split('_')[1]
                und = False
                if x in ['blue', 'green', 'red']:
                    und = True
                cwusers.update_one({'id': user['id']}, {'$set': {
                    'inventory.' + objectcode: create_recipe(ids, objectcode, recipename, undefined=und, color=x)}})
                user = cwusers.find_one({'id': user['id']})
                restext += '*' + resource_to_name(ids) + '*: ' + str(getloot[ids]) + '\n'
                sendm(cwbot, pasyuk_id, user['name'] + ' получил:\n' + resource_to_name(ids) + ': ' + str(
                    getloot[ids]) + '\n')
            else:
                objectcode = generate_object_code(user)
                scrollname = resource_to_name(ids)
                scroll = create_undefined_scroll(objectcode=objectcode, name=scrollname)
                cwusers.update_one({'id': user['id']}, {
                    '$set': {'inventory.' + objectcode: scroll}})
                user = cwusers.find_one({'id': user['id']})
                restext += '*' + resource_to_name(ids) + '*: ' + str(getloot[ids]) + '\n'
                sendm(cwbot, pasyuk_id, user['name'] + ' получил:\n' + resource_to_name(ids) + ': ' + str(
                    getloot[ids]) + '\n')

    return restext


# cwusers.update_many({},{'$set':{'inventory.resources':{}}})


def resource_to_name(x):
    ################## ITEMS
    y = "Неизвестно"
    if x == 'wood':
        y = "🪵Дерево"
    if x == 'ironbars':
        y = "🔩Железный слиток"
    if x == 'steelplate':
        y = "🪙Стальная пластина"
    if x == 'rope':
        y = "〰️Верёвка"
    if x == 'kerosene':
        y = "🛢Керосин"
    if x == 'plastic':
        y = "🖱Пластик"
    if x == 'gunpowder':
        y = "🍚Порох"
    if x == 'threads':
        y = "🧵Нитки"
    if x == "diamonds":
        y = "💎Алмазы"
    if x == 'medicalcomponents':
        y = "💉Медицинские компоненты"
    if x == "battery":
        y = "🔋Батарейка"
    if x == 'rat_toys':
        y = "🧸Игрушка для крыс"
    if x == 'yaroslavwood':
        y = "🪵Полено Ярослава"

    ################## RECIPES
    if x == 'recipe_blue':
        y = "Синий рецепт"
    if x == 'recipe_red':
        y = "Красный рецепт"
    if x == 'recipe_green':
        y = 'Зелёный рецепт'

    if x == "undefined_scroll":
        y = "Неопознанный свиток способности"

    if x == 'recipe_baseball':
        y = "Рецепт: бита"
    if x == 'recipe_knife':
        y = "Рецепт: нож"
    if x == 'recipe_obrez':
        y = "Рецепт: обрез"
    if x == 'recipe_drobovik':
        y = "Рецепт: дробовик"
    if x == 'recipe_torch':
        y = "Рецепт: факел"
    if x == 'recipe_flamethrower':
        y = "Рецепт: огнемёт"
    if x == 'recipe_revolver':
        y = "Рецепт: револьвер"
    if x == 'recipe_bulava':
        y = 'Рецепт: булава'
    if x == 'recipe_chain':
        y = 'Рецепт: цепь'
    if x == 'recipe_bow':
        y = 'Рецепт: лук'
    if x == 'recipe_claws':
        y = 'Рецепт: стальные когти'
    if x == 'recipe_shurikens':
        y = 'Рецепт: сюрикены'
    if x == 'recipe_rifle':
        y = 'Рецепт: снайперская винтовка'
    if x == 'recipe_kastet':
        y = 'Рецепт: кастет'
    if x == 'recipe_saber':
        y = 'Рецепт: сабля'
    if x == 'recipe_saw':
        y = 'Рецепт: пиломет'
    if x == 'recipe_molot':
        y = 'Рецепт: молот'
    if x == 'recipe_tesak':
        y = 'Рецепт: тесак'
    if x == 'recipe_axe':
        y = 'Рецепт: топор'
    if x == 'recipe_kuvalda':
        y = 'Рецепт: кувалда'
    if x == 'recipe_spear':
        y = 'Рецепт: копье'
    if x == 'recipe_police':
        y = 'Рецепт: полицейская дубинка'
    if x == 'recipe_shest':
        y = 'Рецепт: шест'

    return y

from datetime import datetime
def castle_protect_quest(user):
    try:
        middle_exp = exp_for_quest(user['lvl'])
        multipler = random.randint(7, 13)
        multipler = multipler / 10
        taken_exp = int(middle_exp * multipler)
        if taken_exp < 1:
            taken_exp = 1
        if random.randint(1, 100) <= 4:
            taken_exp = 0
        cwusers.update_one({'id': user['id']}, {'$inc': {'exp': taken_exp}})
        cwusers.update_one({'id': user['id']}, {'$set': {'current_act': None}})
        user['exp'] += taken_exp
        check_lvlup(user)
        quest_texts = [
            'Вы гуляли по окрестностям и встретили крысу. Только вы достали свое оружие, как она убежала куда-то в лес.',
            'Вы сели рыбачить на озере около замка. Поймали немного рыбы, а затем продали, выручив немного денег.',
            'В лесу вы нашли какой-то тренировочный манекен из дерева и решили попрактиковаться на нем.',
            'В лесу ты нашёл редкий вид грибов, которые можно будет отдать скупщику или местным алхимикам.',
            'На небольшой лужайке посреди леса странная разношерстная компания тянула из земли огромную репу. ' + \
            'Ты помог вытащить овощ и получил от предводителя небольшое вознаграждение.',
            'В чаще леса виднеется проблеск мифриловой руды. Как жаль — это всего лишь труп с медными зубами.',
            'Ты встретил парня в доспехах со стрелой в колене. Ты смог оказать ему первую помощь, за что тот отблагодарил тебя, но приключений ему больше не видать.',
            'Около замка вы встретили разьяренного носорога. Достав красную тряпку и кинув ее в ближайшее дерево, вы заставили носорога воткнуться в него рогом, ' + \
            'чем спасли себе, и возможно, кому-то еще, жизнь.',
            'Проходя мимо кладбища ты услышал жалобный вой из открытого гроба:\n"Ну дайте мне кофе, кофе хочется".',
            'Проходя мимо чайного дома, вы увидели привидение в наушниках. Не похоже, чтобы оно обратило на вас внимание.',
            'Гуляя по лесу, вы наткнулись на группу дружелюбных путешественников, принадлежащих разным замкам. Немного поболтав, вы ушли от них с мыслями, что между ними общего?',
            'Гуляя возле стен замка, вы из под земли услышали странные металлические звуки. Звуки становились всё громче и громче, пока не прекратились. '+\
            'Вы уже успели выдохнуть как услышали громкий крик "ОНО ЖИВОЕ, ЖИВОЕ!"\nНачав бежать со всех ног вы споткнулись и нашли:',
            'Ища приключений, вы наткнулись на неизвестного, несущего мешок золота. Видно к троллю можно уже не идти.',
            'В очередной раз раздвинул ветви деревьев, вы увидели воина тьмы, сидящего на земле и безобидно пьющего чай с пряниками. Вы решили не беспокоить его и пошли дальше.',
            'Идя по тропинке, вы наткнулись на деревню скелетов носящими тыквы на головах. Вы решили не рисковать и обошли это место стороной.',
            'Гуляя по лесу, вы наткнулись на хижину лесника, в который был лесник, вы прогостили до ночи, и как волки завыли под окном лесник ушёл. Его долго не было и вы решили уйти, прихватив с собой:',
            'Вы увидели как мечник оттолкнул толпу крыс фразой:"𝕱𝖀𝕾 𝕽𝕺 𝕯𝕬!" И пошел искать дракона. Полазив по карманам ных, крыс вы пошли дальше.',
            'По пути к замку, вы встретили братьев скелетов. Один пытался строить вам ловушки, которые были весьма просты, а второй говорил крайне заКОСТЕнелые шутки.',
            'Проходя мимо озера, вы увидели стоящего в ней рыцаря в доспехах, с синей кожей и жабрами. Он бы вас попытался схватить, но к сожалению рыцарь не мог на жаре долго простоять. Вы пошли дальше.',
            'Блуждая по лесу, вы наткнулись на скелет, имеющим необычные рога с оружием, напоминающем рога. Обыскав его, вы пошли дальше.', 
            'Вы подошли к пещере тролля и увидели, как лысый мужчина с одного удара кулаком превратил тролля в кровавое месиво. Неизвестный грустно вздохнул и пошел куда глаза глядят. Вы взяли немного денег, что было в пещере.',
            'В поисках ценных вещей вы наткнулись на дом. Внутри него сидел пожилой мужчина. При виде вас он сказал:\n"Проходи. Хочешь получить ценную снарягу? Могу дать за парочку заданий". Вы, чувствуя подвох в этих словах, вышли из дома, прихватив вещи с тумбочки у выхода.',
            'Проходя мимо реки, вы заметили странную крысу, видя что она не представляет вам опасности вы решили подойти к ней. Крыса вам что-то начала рассказывать, '+\
            'жаль что вы так и не поняли какую плотину нужно поднять рычагом и какой канал нужно завалить камнем. Уходя от крысы вы нашли:',
            'Идя по лесу, вы наткнулись на группу из пяти человек с автоматами. Они начали вам рассказывать про каких-то террористов и бомбу которую нужно обезвредить. Вы ничего, не поняв и пожелав им удачи, пошли дальше.',
            'Проходя по деревне, вы увидели группу подростков, стоящую у забора. Одна половина красила, вторая молила о разрешении покрасить за плату. Взглянув на забор вы увидели надпись "...бел не контрится". Решив не участвовать в смутных схемах, вы пошли дальше.',
            'Проходя мимо дерева, вы заметили его неестественность. Это оказалось искусственное дерево. Притронувшись к нему, в дереве открылось маленькое хранилище. Там была книга "Как выжить в этом мире", который вы посчитали ненужным вам и вы вернули его на место, закрыв тайник.',
            'Как-то раз вы увидели, что на улице два подозрительных человека грабят богача.\nВы сразу бросились на выручку.\nВыручку пришлось делить на троих.',
            'Выйдя из замка, вы видите, как гроб, пританцовая под какую-то странную музыку несут, четыре адепта тьмы. Пройдя за ними, вы попали на похороны, где перекусили.',
            'Когда вы присели передохнуть после драки с крысой, как подошёл кудрявый парнишка с розовым камнем в пупке и предложил вам целебными слюнями и своим щитов.\n Откажавшись, вы все же взяли припасы из его рюкзака-чизбургера.',
            'Ты натыкаешься на дом где замечаешь маленькую дырку в стене, и ты каким то чудом смог туда пролезть в неë. Там ты натыкаешься на короля крыс и убиваешь его в тяжелом бою забирая его пожитки.',
            'Гуляя по лесу, вы обнаружили некроманта-послушника который безрезультатно пытался заставить зомби приготовить ему кофе.\nВы тоже попытались заставить приготовить вам кофе, и через некоторое время зомби вам принес:',
            'Вы шли по своим делам, как к вам подошёл юрист и сказал, что вы получили в наследство в деревне домик, где вы можете пахать, рыбачить, строить и многое другое. Обокрав его и послав подальше, вы пошли дальше.',
            'Идя по лесу вы нашли заброшенный замок. Погуляя по нему вы вышли в просторную комнату. В её центре был какой-то пьедестал из камня в виде дерева и на его ветвях 5 каких-то камней с разными рисунками. Вы не обратили на них внимания и сразу спустились в сокровищницу и нашли:',
            'Прогуливаясь по замку вы придумывали новые идеи. Долго думая вы придумали на ваш взгляд великолепную идею. Но от начальства вы уходили с грустью из-за ненужной идеи. А начальство в это время попивало кофеёк. Вы вышли из замка и увидели:',
            'Гуляя вдоль берега, вы увидели рыболовное судно "Бисмарк", в данный момент оно глушило рыбу из 8x25см SK, гаубица красиво взрывало воду и "ловила" рыбу. Собрав остатки рыбы, после того как рыболовное судно ушло куда-то в море, вы продали и получили:',
            'Идя по деревне в увидели странного мальчики с  ломом в руке и пакетом на голове. Подойдя  по ближе в услышали как он бормотал что про какой-то "сад теней". Увидев вас он бросился на утек и обронил золотые монеты. Вы подобрали их и пошли дальше раздумывая на эту тему.',
            'Вы шли по полю, как внезапно началась бойня! Дрались эльфы с лепреконами, высекая искры от ударов мечей, но вдруг вас задело лазером. Лёжа на земле, вы подумали :"Всё таки это были поганки..."\nНа поле вы нашли:',
            'После драки с крысой, вы лежали на земле и смотрели на небо аустерлийца. Через пару секунд вы поняли, что не знаете, что за аустерлийц и пошли обыскивать труп крысы.',
            'Вы подошли к некой базе, по которой бегали странные люди в... Скафандрах? Один из них подошёл к вам, из его рта на вас направилось множество тентаклей, с целью с делать что-то ужасное. Убив всех чудищь, вы получили:',
            'Бежа по дороге в замечаете странного человека с палкой на спине. Подойдя поближе вы видите то что он бил камни и кричал - "Ему б ещё консервных банок насобирать, консервных".\nПод вами хрустнула ветка и он обернувшись побежал к вам , вы начали удирать с того места со всех ног.',
            'Вы шли по тропинке, как вам засадили стрелой в колено, к вам подошёл потрепанный и явно не мытый мужик со словами:"Прости, я думал ты оборотень".\nВидно зайти домой побриться все же нужно. Он вы вернул свою сумку наизнанку и отдал вам:',
            'Вы шли по лесу, как услышали голоса. Выглянув из кустов, вы увидили двух людей, одетых в костюмы чумных докторов.\n"Слушай, мы нашли зараженную деревню..."\n"Даже не начинай! Просто неси масло для фонарей"\n"О, будем её освещать?"\nСпросил чумной, но увидел у товарища спички в руках.\n"Ну.... В некотором роде да"\nСпустя пять минут на пепелище вы нашли:',
            'Идя по лесу вы наткнулись на старца жующего гриб. Вы решили не трогать его гриб потому что он откусан и не вы его кусали. Обойдя мимо вы нашли ещë много грибов, а среди них:'

            ]
        
        quest_winter_text = ['Наслаждаясь зимними видами возле замка, вы заметили как банда снеговиков-мафиози куда-то тащили Деда Мороза.',
                            'Идя по лесу, вы услышали шорох, исходящий сзади.\n-"Никого нет"- подумали вы и пошли дальше.\n-"Не заметил" - подумала белая крыса, лежащая в снегу.',
                            'Идя по лесу, вы увидели целое поле полснежников. Собрав пару штук, вы попали под снегопад. Кажется эти цветы может скупить некая королева.',
                            'Вы шли по горам и в одной из пещер увидели короля, спрашивающего пингвина, какую принцессу похитить. Забрав оттуда пару безделушек, вы пошли дальше.',
                            'Идя по лесу, вы видите, как из ниоткуда появляется замок из льда. Чтобы в таком поселиться, наверняка нужно все отпустить и забыть. Но холод вам не по душе и вы решили поохотиться.',
                             'Вы проходили мимо маленького городка, как из дымохода одного дома вылезло зелёное нечто с мешком на плече. Поймав его и отобрав мешок, вы ушли. Вы сделали доброе дело... Наверно.',
                             'Вы прокапывались через горы снега, отбивались от волков, прятались от тролля. Проделав путь, вы наконец смогли получить... А, это не груда серебра, а глыба блестящего льдя. Блястяще.',
                             'Идя по полю вы наткнулись на... Пряничного голема размером с мизинец, охраняющего дом из пряника. От шока, вы решили ограбить дом и откусить часть сладкой руки голема.',
                            'Проходя мимо утеса, вы увидели плачущую девушку, сидящую на коленях. Вдруг снизу на пропелере поднялся мужчина, признался в любви и упал в воду. За плату, вы нырнули за "Ромео" и спасли его.',
                             'Потерявшись в лесу, вы наткнулись на девочку. Вы спросили её дорогу до замка, но она не знает. Спросив вас о ледяной королеве, вы ответили ей тем же. Обменявшись вещами, разошлись.',
                             'Передвигаясь по сугробам вы встретили семью дружных бобров. Они вас накормили, всё время рассказывая про льва который закончит зиму'
                            
                            ]
        current_datetime = datetime.now()
        if current_datetime.month in [12, 1, 2]:
            for i in quest_winter_text:
                quest_texts.append(i)

        quest_spring_text = ['Вы шли по лесу, как наткнулись на заброшенную деревушку. Вы решились поискать еду в теплице. Мак, ромашка, венерина мухоловка человеческих размеров... Увернувшись от укуса и прихватив пару цветов, вы помчались прочь'
            ]
        current_datetime = datetime.now()
        if current_datetime.month in [3, 4, 5]:
            for i in quest_spring_text:
                quest_texts.append(i)

        quest_autumn_text = ['Во время осеннего фестиваля, все жители замков решили устроить перемирие и чтобы вместе отпраздновать его. После чего кто то переоделся в троля, дикую крысу, демона тьмы, скелета. После чего собрались в центре континента и начали запускать фейерверки, после которых крысы накрили стол и угостили всех тыквенными пирогами. Вкусно поев, вы нашли тыкву в которой оказалась:',
                             'Выходя из замка, стражник вас предостерег:\n"Патрулируй осторожно: на этом месте недавно видели диких крыс, и они просили одеяла и горячий чай. Благо ты на них не очень похож, так что держи:"',
                             'Блуждая по лесу в поисках добра ты наткнулся на ведьму!\n- "Если слышишь шорох в кустах — это может быть не просто крыса!"\n И правда, обыскав куст рядом с ведьмой ты нашёл:',
                             'Один авантюрист 40 лет проработал в самой успешной гильдии в замке и перед каждым патрулём он доставал из кармана помятую бумажку, долго смотрел на неё, и убирал обратно. Когда он обронил бумажку, ты побежал и прочитал на ней: "Каждый патруль осенью — это мини-квест на выживание: не поскользнись на листьях и не попади в паутину"\nСледуя подсказке ты нашёл:',
                             'Вы шли по лесу, как мимо вас пробежал слегка полноватый мужик в очках с книгой в руках, за ним гналась орава самых разнообразных тварей.\n"Чтоб я ещё раз о чем-то таком написал! Лучше бы написал новые идеи для идее-генератов " - кричал мужик.\nВы убили пару монстров и нашли у них:',
                             'Приметив дождь за окном своей комнаты, ты решил провести патруль в своей комнате.\nТы ходил по своей спальни, как почуял, что из не очень хорошо освещенного угла за тобой кто-то следит... Ты посветил туда фонарём и там оказался маленький, зелёный, шарообразный циклоп! Он заметил тебя и с криком от страха выпрыгнул в окно. После себя он оставил:'
                            ]

        current_datetime = datetime.now()
        if current_datetime.month in [9, 10, 11]:
            for i in quest_spring_text:
                quest_texts.append(i)
        
        quest_fools_day = ['Пока вы шли по лесу, вы наткнулись на засаду крыс, которая отобрала все ваши вещи и избила до потери сознания... Боюсь вы потеряли ВСЁ. Удачи!',
                           'Вы гуляли по деревне и подошли к церкве. Там вы наткнулись на бога сладких булочек, который затащил вас к себе и сделал своим жрецом. Теперь вы жрец булочек (до сладких ещё не доросли =)).',
                           'Вы гуляли по замку, как к вам сзади подошёл воришка и украл у вас 1 предмет с криком :"БЫЛО ТВОЁ, СТАЛО МОЁ!" \nПока вы за ним гнались, он, чтоб оторваться от вас, кинул вам в лицо мешок. (советую вам проверить надетые вещи =))\nВ мешке было:',
                           'Вы гуляли около моста и встретили Тролля, тот озверел увидев вас и приготовился к бою! Пока тот готовился, вы сказали что у него развязались шнурки, пока тролль начал разглядывать свои босые ноги вы успели убежать прихватив с собой:'
            ]
        current_datetime = datetime.now()
        if current_datetime.month == 4 and current_datetime.day == 1:  
            for i in quest_fools_day:
                quest_texts.append(i)
            
        quest_zero_exp_texts = [
            'Пока вы бродили по окрестному лесу, вы замерзли и решили развести костер, отдыхая от битв и сражений.',
        'Выйдя из замка, вы увидели некроманта, изготавливающего различное снаряжение. Увидев вас, он бросил световую и скрылся.',
        'Ища, с кем бы подраться, вы наткнулись на маленькую волшебницу, утверждающую, что она невероятно сильна. Вы, не веря ей, попросили ее что-то скастануть... Вы очнулись через несколько часов весь обгорелый.',
        'Вы наткнулись на мост, пересекающий реку. На мосту стоял старый бородатый волшебник с посохом в руках. Он кричит:"Ты не пройдешь!" И бьёт посохом по земле. Ты переплываешь реку и идёшь своей дорогой.',
        'Вы заходите в замок там вас встречает скелет и говорит " Хороший денёк птички поют, цветы благоухают. Хороший день умереть." Вы теряете сознание. Очнувшись вы замечаете что это был страшный сон.'
        ]
        
        quest_zero_winter = ['Гуляя по снежным равнинам вы заметили жёлудь, но как только вы взяли его в руки на вас напала и побила белка']
        if current_datetime.month in [12, 1, 2]:
            for i in quest_zero_winter:
                quest_zero_exp_texts.append(i)
                
        quest_zero_fools_days = ['⚠️ ПРОИСХОДИТ СДВИГ ВО ВРЕМЕНИ! МИР ЖДЁТ ТОТАЛЬНОЕ ОЧИЩЕНИЕ! НОВЫЙ КАТАКЛИЗМ ПРИБЛИЖАЕТСЯ!\n\nКричал голый и сумасшедший стражник возле ворот замка'
            ]
        if current_datetime.month == 4 and current_datetime.day == 1:  
            for i in quest_fools_day:
                quest_texts.append(i)
                
        quest__zero_autumn = ['Обходя лес возле замка ты заметил табличку на которой было написано:\n«Граф Мяукала в очередной раз перепутал ночные прогулки с ночными обнимашками. Остерегайся внезапных обнимашек!»\nЧто за бред подумал ты, но в тот же час оказался в крепких объятиях.',
                             'Вы наткнулись на кладбище где обнаружили миску с конфетами и записку рядом: "Не больше двух". Взяв все (они были очень вкусными=)) вам отрубило обе руки. Проснувшись со страшным криком в кровати вы посмотрели на руки. Их не было. Вы проснулись посреди боя с криком:"Никаких больше хитинов!"',
                              'Будучи в замке взрывов на переговорах вы встретили накаченного парня по-видимому не с нашего потока времени. Он все время расспрашивал вас о "Саре Конор" решив что он сумасшедший в указала на сумку в виде тыквы полной конфет и быстро оттуда сбежали'
        ]
        if current_datetime.month in [9, 10, 11]:
            for i in quest_zero_winter:
                quest_zero_exp_texts.append(i)

        quest_gold = random.randint(0, 10)
        x = random.randint(1, 100)
        if x <= 40:
            quest_gold += random.randint(1, 10)
        if x <= 25:
            quest_gold += random.randint(1, 8)
        if x <= 5:
            quest_gold += random.randint(5, 10)
        pogchance = 0
        quest_pogs = 0
        if 'greedy' in user['equipped_skills']:
            if user['equipped_skills']['greedy']['lvl'] == 1:
                pogchance = 5
            if user['equipped_skills']['greedy']['lvl'] == 2:
                pogchance = 10
            if user['equipped_skills']['greedy']['lvl'] == 3:
                pogchance = 15
        if random.randint(1, 1000) <= pogchance:
            quest_pogs += 1
        if taken_exp > 0:
            quest_text = random.choice(quest_texts)
        else:
            quest_text = random.choice(quest_zero_exp_texts)
            quest_gold = 0
            quest_pogs = 0
        if random.randint(1, 100) <= 30:
            quest_text += '\n❗️Вы услышали странный шум в кустах неподалеку.'
            if user['noise_check'] < user['max_noise_check']:
                cwusers.update_one({'id': user['id']}, {'$inc': {'noise_check': 1}})
        if taken_exp > 0:
            quest_text += '\n*Получено опыта:* 🔥' + str(taken_exp)
        if quest_gold > 0:
            quest_text += '\n*Получено золота:* 💰' + str(quest_gold)
            cwusers.update_one({'id': user['id']}, {'$inc': {'gold': quest_gold}})
        if quest_pogs > 0:
            quest_text += '\n*Получено мешков золота:* 👝' + str(quest_pogs) + '\n'
            cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': quest_pogs}})
            sendm(cwbot, pasyuk_id, user['name'] + ':' + '\n*Получено мешков золота:* 👝' + str(quest_pogs) + '\n')
        restext = ''
        if taken_exp > 0:
            restext = get_loot_for_quest(quest="patrol", user=user)
        if restext != '':
            quest_text += restext
        sendm(cwbot, user['id'], quest_text, parse_mode='markdown')
        sendm(cwbot, pasyuk_id, '[' + user['name'] + ']:\n' + quest_text, parse_mode='markdown')

        try:
            user = cwusers.find_one({'id':user['id']})
            try:
                user['forest_queue']
            except:
                return
            if user['forest_queue'] > 0:
                if user['stamina'] < 1:
                    sendm(cwbot, user['id'], 'Недостаточно выносливости!')
                    cwusers.update_one({'id': user['id']}, {'$set': {'forest_queue': 0}})
                    return
                #cwusers.update_one({'id':user['id']},{'$inc':{'forest_queue':-1}})
                questtime = 180  # 300
                text = 'Вы отправились патрулировать окрестности. Вернетесь через 3 минуты.'
                staminaregen = user['last_stamina_regen']
                if user['stamina'] >= user['maxstamina']:
                    staminaregen = time.time()
                cwusers.update_one({'id': user['id']}, {
                    '$set': {'current_act': 'quest_castle_protect', 'stamina': user['stamina'] - 1,
                             'quest_started': time.time(),
                             'last_stamina_regen': staminaregen, 'forest_queue':user['forest_queue']-1}})
                threading.Timer(questtime, castle_protect_quest, args=[user]).start()
                sendm(cwbot, user['id'], text)
        except:
            #pass
            sendm(cwbot, 441399484, traceback.format_exc())

    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


def check_lvlup(user):
    cwusers.update_one({'id': user['id']}, {'$set': {'last_activity': time.time()}})
    if user['exp'] >= need_exp_to_next_lvl(user['lvl']):
        cwusers.update_one({'id': user['id']}, {'$inc': {'lvl': 1, 'lvl_points': 3}})
        stickid = ""
        if user["castle"] == "rat":
            stickid = "CAACAgIAAxkBAAJtQWa8exZMgKgNcrFCxlsrvacogKxCAAI2UAAC24DgSaaH-RPg55-MNQQ"
        elif user["castle"] == "darkcastle":
            stickid = "CAACAgIAAxkBAAJtO2a8exEXREx9KRoggWMCX6jut17TAAL_WwACn_3hSXnaWqQZM4TKNQQ"
        elif user["castle"] == "explosion":
            stickid = "CAACAgIAAxkBAAJtPma8exTTPCiT4_nG_AuuXHdFgaRVAAJpTQACd-rgSTzFeRWIqlQpNQQ"
        elif user["castle"] == "necromant":
            stickid = "CAACAgIAAxkBAAJtRGa8exfvpuRpBIWROuvZ73jupXN_AAIOTAACNnHpSbIrk8C0Y2OKNQQ"
        try:
            cwbot.send_sticker(user['id'], stickid)
        except:
            try:
                sendm(cwbot, 441399484, traceback.format_exc())
            except:
                pass
        user['lvl'] += 1
        superlvl = False
        enbuff = False
        if user['lvl'] == 10:
            superlvl = True
            cwusers.update_one({'id': user['id']},
                               {'$inc': {'hp': 1, 'maxhp': 1, 'dmglimit': 1, 'maxdmglimit': 1, 'max_skills': 1,
                                         'max_items_for_battle': 1, 'energy': 1, 'maxenergy': 1}})
            enbuff = True
        if user['lvl'] == 25:
            superlvl = True
            cwusers.update_one({'id': user['id']}, {
                '$inc': {'hp': 1, 'maxhp': 1, 'dmglimit': 1, 'maxdmglimit': 1, 'max_skills': 1,
                         'max_items_for_battle': 1}})
        if user['lvl'] == 40:
            cwusers.update_one({'id': user['id']}, {
                '$inc': {'hp': 1, 'maxhp': 1, 'dmglimit': 1, 'maxdmglimit': 1, 'max_skills': 1,
                         'max_items_for_battle': 1}})
            superlvl = True
        if not superlvl:
            sendm(cwbot, user['id'], '🏅|Уровень вашего персонажа повышен!')
        else:
            if not enbuff:
                sendm(cwbot, user['id'], '🏅|Уровень вашего персонажа повышен! Прокачаны характеристики:' + \
                                   '\nХП: +1;\nЛимит урона: +1;\nМакс.скиллов: +1;\nМакс.предметов: +1!')
            else:
                sendm(cwbot, user['id'], '🏅|Уровень вашего персонажа повышен! Прокачаны характеристики:' + \
                                   '\nХП: +1;\nЛимит урона: +1;\nМакс.энергия: 1;\nМакс.скиллов: +1;\nМакс.предметов: +1!')
        try:
            if user['who_invited'] != None:
                if user['lvl'] == 5:
                    cwusers.update_one({'id': user['who_invited']}, {'$inc': {'maxstamina': 1}})
                    sendm(cwbot, user['who_invited'], user[
                        'name'] + ' повысил свой уровень до 5! Вы получаете +1 к максимальной выносливости.')
                if user['lvl'] == 10:
                    cwusers.update_one({'id': user['who_invited']}, {'$inc': {'maxstamina': 1}})
                    sendm(cwbot, user['who_invited'], user[
                        'name'] + ' повысил свой уровень до 10! Вы получаете +1 к максимальной выносливости.')
                if user['lvl'] == 15:
                    cwusers.update_one({'id': user['who_invited']}, {'$inc': {'maxstamina': 1}})
                    sendm(cwbot, user['who_invited'], user[
                        'name'] + ' повысил свой уровень до 15! Вы получаете +1 к максимальной выносливости.')
        except:
            pass
        if user['lvl'] == 8:
            sendm(cwbot, user['id'], 'Вы стали достаточно опытны, чтобы мастера вашего замка обучили вас секретной способности, известной только им. ' +\
                               "Вас отвели в помещение, в котором вас встретил неизвестный человек, лица которого вы даже не могли разглядеть. "+\
                               "Вы внимательно выслушали все то, что он вам рассказал...\n\n"+\
                               "Показать информацию, которую вы узнали - /special_ability")
            cwusers.update_one({'id':user['id']},{'$set':{'know_about_ability':True}})
        sendm(cwbot, pasyuk_id, '🏅|Уровень ' + user['name'] + ' повышен до ' + str(user['lvl']) + '!')


def get_player_exp_for_rathunt(uid, win, hp=3, rat = None):
    try:
        user = cwusers.find_one({'id': uid})
        rat_type = "обычная"
        if rat != None:
            if "Золотая крыса" in rat['name']:
                rat_type = "Золотая крыса"
            elif "Призрачная крыса" in rat['name']:
                rat_type = "Призрачная крыса"
            else:
                rat_type = "Страшная крыса"


        # Если игрок победил
        if win:
            if rat_type == "Золотая крыса":
                taken_exp = 0
                quest_gold = random.randint(10, 25) * 2
                quest_pogs = 0
                if 'greedy' in user['equipped_skills']:
                    if user['equipped_skills']['greedy']['lvl'] == 2:
                        pogchance = 2
                    if user['equipped_skills']['greedy']['lvl'] == 4:
                        pogchance = 4
                    if user['equipped_skills']['greedy']['lvl'] == 6:
                        pogchance = 6
                    if random.randint(1, 100) <= pogchance:
                        quest_pogs += 1
                quest_text = "Вы одержали победу над Золотой крысой!"
            elif rat_type == "Призрачная крыса":
                middle_exp = exp_for_quest(user['lvl']) * 3.6
                multipler = random.randint(7, 13) / 10
                taken_exp = int(middle_exp * multipler)
                if taken_exp < 1:
                    taken_exp = 1
                quest_gold = 0
                quest_pogs = 0
                if 'greedy' in user['equipped_skills']:
                    if user['equipped_skills']['greedy']['lvl'] == 1:
                        pogchance = 1
                    if user['equipped_skills']['greedy']['lvl'] == 2:
                        pogchance = 2
                    if user['equipped_skills']['greedy']['lvl'] == 3:
                        pogchance = 3
                    if random.randint(1, 100) <= pogchance:
                        quest_pogs += 1
                quest_text = "Вы одержали победу над Призрачной крысой!"
            else:
                middle_exp = exp_for_quest(user['lvl']) * 1.8
                multipler = random.randint(7, 13) / 10
                taken_exp = int(middle_exp * multipler)
                if taken_exp < 1:
                    taken_exp = 1
                quest_gold = random.randint(10, 25)
                x = random.randint(1, 100)
                if x <= 50:
                    quest_gold += random.randint(2, 10)
                if x <= 25:
                    quest_gold += random.randint(2, 10)
                if x <= 5:
                    quest_gold += random.randint(10, 15)
                quest_pogs = 0
                if 'greedy' in user['equipped_skills']:
                    if user['equipped_skills']['greedy']['lvl'] == 1:
                        pogchance = 1
                    if user['equipped_skills']['greedy']['lvl'] == 2:
                        pogchance = 2
                    if user['equipped_skills']['greedy']['lvl'] == 3:
                        pogchance = 3
                    if random.randint(1, 100) <= pogchance:
                        quest_pogs += 1
                quest_text = "Вы одержали победу над крысой!"

            cwusers.update_one({'id': user['id']}, {'$inc': {'exp': taken_exp}})
            cwusers.update_one({'id': user['id']}, {'$set': {'current_act': None}})
            user['exp'] += taken_exp
            check_lvlup(user)
        else:
            quest_text = "Вы не смогли одолеть крысу, и вернулись в замок залечивать раны."
            quest_gold = 0
            quest_pogs = 0
        if random.randint(1, 100) <= 30:
            quest_text += '\n❗️Вы услышали странный шум в кустах неподалеку.'
            if user['noise_check'] < user['max_noise_check']:
                cwusers.update_one({'id': user['id']}, {'$inc': {'noise_check': 1}})
        if taken_exp > 0:
            quest_text += '\n*Получено опыта:* 🔥' + str(taken_exp)
        if quest_gold > 0:
            quest_text += '\n*Получено золота:* 💰' + str(quest_gold)
            cwusers.update_one({'id': user['id']}, {'$inc': {'gold': quest_gold}})
        if quest_pogs > 0:
            quest_text += '\n*Получено мешков золота:* 👝' + str(quest_pogs) + '\n'
            cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': quest_pogs}})
        restext = ''
        if win:
            restext = get_loot_for_quest(quest="rathunt", user=user)
        if restext != '':
            quest_text += restext
        lost_hp = 0

        if not win or hp <= 0:
            if not win:
                lost_hp = random.randint(1, 2)
            elif hp <= 0:
                lost_hp = 1
            difference = user['hp'] - lost_hp
            if difference < 0:
                lost_hp += difference
            quest_text += '\nПотеряно жизней: 💔' + str(lost_hp)
            if user['hp'] >= user['maxhp']:
                cwusers.update_one({'id': user['id']}, {'$set': {'last_hp_regen': time.time()}})
            cwusers.update_one({'id': user['id']}, {'$inc': {'hp': -lost_hp}})

        sendm(cwbot, user['id'], quest_text, parse_mode='markdown')
        sendm(cwbot, pasyuk_id, '[' + str(user['id']) + ' ' + user['name'] + ']:\n' + quest_text,
                           parse_mode='markdown')
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())

def count_user_kills(user, kills):
    try:
        if kills <= 0:
            return
        if user == None:
            return
        for ids in user['inventory']:
            item = user['inventory'][ids]
            if item['type'] == 'essence' or (item['type'] == 'weapon' and item['lvl'] == 4):
                cwusers.update_one({'id':user['id']},{'$inc':{'inventory.'+ids+'.kills':kills}})
                user['inventory'][ids]['kills'] += kills
                if user['inventory'][ids]['type'] == 'essence' and user['inventory'][ids]['kills'] >= 100:
                    objectcode = generate_object_code(user)
                    weaponcode = item['code']
                    modification = item['modification']
                    newweapon = get_lvl_weapon(weapon=None, objectcode=objectcode, code=weaponcode, lvl=4,
                                need_create=True, modification = modification)
                    cwusers.update_one({'id':user['id']},{'$set':{'inventory.'+objectcode:newweapon}})
                    cwusers.update_one({'id': user['id']}, {'$unset': {'inventory.' + item['objectcode']: 1}})
                    wname = name_to_weapon(weaponcode)
                    sendm(cwbot, user['id'], '🌐Эссенция оружия "'+wname+'" набрала 100 душ и теперь имеет четкие физические очертания. Можно использовать этот артефакт в бою!')
    except:
        pass

def spent_battle_items(user, items, used_rat_toy = False):
    if user == None:
        return
    wasitems = {}
    wasitems_battle = {}
    userbattleitems = []
    for ids in user['items_for_battle']:
        userbattleitems.append(ids)
    for ids in items:
        if ids not in wasitems_battle:
            wasitems_battle[ids] = 1
        else:
            wasitems_battle[ids] += 1
    items = wasitems_battle
    for ids in userbattleitems:
        if ids not in wasitems:
            wasitems[ids] = 1
        else:
            wasitems[ids] += 1
    #print('items = ' + str(items))
    spent_items = {}
    for ids in wasitems:
        if ids not in items:
            spent_items[ids] = wasitems[ids]
        else:
            spent_items[ids] = wasitems[ids] - items[ids]
    #print('spent_items = ' + str(spent_items))
    for ids in spent_items:
        while spent_items[ids] > 0:
            userbattleitems.remove(ids)
            spent_items[ids] -= 1
    if used_rat_toy:
        cwusers.update_one({'id': user['id']}, {'$inc': {'resources.rat_toys': -1}})
    cwusers.update_one({'id': user['id']}, {'$set': {'items_for_battle': userbattleitems}})


def get_player_exp_for_duel(uid, win, hp=3, quest_gold=0):
    try:
        user = cwusers.find_one({'id': uid})
        if win:
            middle_exp = exp_for_quest(user['lvl']) * 1.5
        else:
            middle_exp = exp_for_quest(user['lvl']) * 0.1
        multipler = random.randint(7, 13)
        multipler = multipler / 10
        taken_exp = int(middle_exp * multipler)
        if taken_exp < 1:
            taken_exp = 1

        cwusers.update_one({'id': user['id']}, {'$inc': {'exp': taken_exp}})
        cwusers.update_one({'id': user['id']}, {'$set': {'current_act': None}})
        user['exp'] += taken_exp
        check_lvlup(user)
        quest_gold = random.randint(5, 15)
        x = random.randint(1, 100)
        if x <= 40:
            quest_gold += random.randint(3, 10)
        if x <= 25:
            quest_gold += random.randint(3, 10)
        if x <= 5:
            quest_gold += random.randint(10, 30)
        pogchance = 0
        quest_pogs = 0
        if 'greedy' in user['equipped_skills']:
            if user['equipped_skills']['greedy']['lvl'] == 1:
                pogchance = 1
            if user['equipped_skills']['greedy']['lvl'] == 2:
                pogchance = 2
            if user['equipped_skills']['greedy']['lvl'] == 3:
                pogchance = 3
        if random.randint(1, 100) <= pogchance:
            quest_pogs += 1
        if win:
            quest_text = "Вы одержали победу над врагом!"
        else:
            quest_text = "Вы не смогли одолеть врага, и вернулись в замок залечивать раны."
            quest_gold = 0
            quest_pogs = 0
        if taken_exp > 0:
            quest_text += '\n*Получено опыта:* 🔥' + str(taken_exp)
        if quest_gold > 0:
            quest_text += '\n*Получено золота:* 💰' + str(quest_gold)
            cwusers.update_one({'id': user['id']}, {'$inc': {'gold': quest_gold}})
        if quest_pogs > 0:
            quest_text += '\n*Получено мешков золота:* 👝' + str(quest_pogs) + '\n'
            cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': quest_pogs}})
            sendm(cwbot, pasyuk_id, user['name'] + ':' + '\n*Получено мешков золота:* 👝' + str(quest_pogs) + '\n')
        restext = ''
        if win:
            restext = get_loot_for_quest(quest="duel", user=user)
        if restext != '':
            quest_text += restext
        lost_hp = 0
        if not win or hp <= 0:
            if not win:
                lost_hp = random.randint(1, 2)
            elif hp <= 0:
                lost_hp = 1
            difference = user['hp'] - lost_hp
            if difference < 0:
                lost_hp += difference
            quest_text += '\nПотеряно жизней: 💔' + str(lost_hp)
            if user['hp'] >= user['maxhp']:
                cwusers.update_one({'id': user['id']}, {'$set': {'last_hp_regen': time.time()}})
            cwusers.update_one({'id': user['id']}, {'$inc': {'hp': -lost_hp}})
        sendm(cwbot, user['id'], quest_text, parse_mode='markdown')
        sendm(cwbot, pasyuk_id, '[' + user['name'] + ']:\n' + quest_text, parse_mode='markdown')
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


questwaits = []


@cwbot.callback_query_handler(func=lambda call: call.data[:12] == 'quest_select')
def questselectttaaa(call):
    questselecttt(call)


def troll_help(user):
    cwusers.update_one({'id': user['id']}, {'$set': {'current_act': None}})
    sendm(cwbot, user['id'], "В замке заметили ваше отсутствие и выслали отряд быстрого реагирования на поиски. Подравшись с троллем и спугнув его, "+
                                   "вас вернули обратно в замок. Вы задолжали 2👝 спасшим вас рыцарям.")
    sendm(cwbot, pasyuk_id, '[' + user[
        'name'] + ']:\n' + "В замке заметили ваше отсутствие и выслали отряд быстрого реагирования на поиски. Подравшись с троллем и спугнув его, "+
                                   "вас вернули обратно в замок. Вы задолжали 2👝 спасшим вас рыцарям.", parse_mode='markdown')


def troll_quest(user):
    cwusers.update_one({'id': user['id']}, {'$set': {'current_act': None}})
    if random.randint(1, 100) <= 25:
        troll = cwtroll.find_one({})
        try:
            troll['lastname']
        except:
            cwtroll.update_one({}, {'$set': {'lastname': "Пасюк"}})
            troll['lastname'] = "Пасюк"
        gold = troll['gold']
        pogs = troll['pogs']
        gold += random.randint(30, 50)
        troll['exp'] += 3
        exp = int(exp_for_quest(user['lvl'])*troll['exp'])
        wintext = "Вам удалось застать врасплох тролля под мостом! Вы оглушили его дубинкой, и обыскали мост, забрав себе:\n"
        wintext += "💰"+str(gold)+'\n🔥'+str(exp)
        if pogs > 0:
            wintext += "\n👝"+str(pogs)
        else:
            wintext += ''
        wintext += '\nУходя обратно в замок, вы заметили надпись на камне:\n"Здесь был '+troll['lastname']+'"'
        sendm(cwbot, user['id'], wintext)
        sendm(cwbot, pasyuk_id, '['+user['name']+']:\n'+wintext)
        cwusers.update_one({'id': user['id']}, {'$inc': {'exp': exp, 'gold':gold, 'pogs':pogs}})
        cwtroll.update_one({},{'$set':{'gold':0, 'pogs':0, 'exp':0, 'lastname':user['name']}})
    else:
        exp_lost = 0
        pogs_lost = 0
        maxgold = user['gold']
        gold_lost = random.randint(30, 50)
        if maxgold < gold_lost:
            gold_lost = maxgold
            if gold_lost < 0:
                gold_lost = 0
            if user['pogs'] < 1:
                exp_lost = int(exp_for_quest(user['lvl'])*5)
                sendm(cwbot, user['id'], "Вам не удалось застать врасплох тролля под мостом, и он оглушил вас дубинкой, забрав " + str(gold_lost) + "💰. " + \
                                   "У вас с собой было слишком мало золота, и тролль решил обыскать вас получше, но не обнаружив у вас даже 1👝, разозлился и "+\
                                   "побил вас дубинкой так, что вы потеряли "+str(exp_lost)+"🔥 и остались в плену у тролля.")
                sendm(cwbot, pasyuk_id, '[' + user['name'] + ']:\n' + "Вам не удалось застать врасплох тролля под мостом, и он оглушил вас дубинкой, забрав " + str(gold_lost) + "💰. " + \
                                   "У вас с собой было слишком мало золота, и тролль решил обыскать вас получше, но не обнаружив у вас даже 1👝, разозлился и "+\
                                   "побил вас дубинкой так, что вы потеряли "+str(exp_lost)+"🔥 и остались в плену у тролля.", parse_mode='markdown')
                cwusers.update_one({'id': user['id']}, {'$set': {'current_act': 'wait_help'}})
                cwusers.update_one({'id': user['id']}, {'$inc': {'pogs': -2}})
                threading.Timer(random.randint(300, 900), troll_help, args=[user]).start()
            else:
                pogs_lost = 1
                sendm(cwbot, user['id'], "Вам не удалось застать врасплох тролля под мостом, и он оглушил вас дубинкой, забрав " + str(gold_lost) + "💰. "+\
                                   "У вас с собой было слишком мало золота, и тролль решил обыскать вас получше, забрав еще и 1👝.")
                sendm(cwbot, pasyuk_id, '[' + user['name'] + ']:\n' + "Вам не удалось застать врасплох тролля под мостом, и он оглушил вас дубинкой, забрав " + \
                                   str(gold_lost) + "💰. "+\
                                   "У вас с собой было слишком мало золота, и тролль решил обыскать вас получше, забрав еще и 1👝.",
                                   parse_mode='markdown')
        else:
            sendm(cwbot, user['id'], "Вам не удалось застать врасплох тролля под мостом, и он оглушил вас дубинкой, забрав "+str(gold_lost)+"💰.")
            sendm(cwbot, pasyuk_id, '[' + user[
                'name'] + ']:\n' + "Вам не удалось застать врасплох тролля под мостом, и он оглушил вас дубинкой, забрав "+str(gold_lost)+"💰.",parse_mode='markdown')
            
        cwusers.update_one({'id':user['id']},{'$inc':{'gold':-gold_lost, 'pogs':-pogs_lost, 'exp':-exp_lost}})
        cwtroll.update_one({}, {'$inc': {'gold': gold_lost, 'pogs': pogs_lost, 'exp': 1}})



def noise_quest_check():
    while True:
        try:
            users_to_remove = []
            for ids in cw_duel_find:
                user = cw_duel_find[ids]
                find = False
                for idss in cw_duel_find:
                    target = cw_duel_find[idss]
                    target_lvl_category = True
                    if (target['lvl'] < 10 and user['lvl'] >= 10) or (user['lvl'] < 10 and target['lvl'] >= 10):
                        target_lvl_category = False
                    if target['id'] != user['id'] and target['castle'] != user['castle'] and target_lvl_category:
                        users_to_remove.append(ids)
                        users_to_remove.append(idss)
                        game = creategame(chatid=user['id'])
                        cwgames.update(game)
                        game = cwgames[user['id']]
                        game['cwduel'] = True
                        try:
                            photopath = cwbot.get_file(cwbot.get_chat(user['id']).photo.big_file_id)
                            photo = requests.get(
                                'https://api.telegram.org/file/bot' + cwbottoken + '/' + photopath.file_path).content
                        except:
                            photo = None
                        game['players'].update(createplayer(uid=user['id'], name=user['name'], photo=photo))
                        player = game['players'][user['id']]
                        player['team'] = player['id']
                        set_player_battle_stats(player, user)

                        try:
                            photopath = cwbot.get_file(cwbot.get_chat(target['id']).photo.big_file_id)
                            photo = requests.get(
                                'https://api.telegram.org/file/bot' + cwbottoken + '/' + photopath.file_path).content
                        except:
                            photo = None
                        game['players'].update(createplayer(uid=target['id'], name=target['name'], photo=photo))
                        player2 = game['players'][target['id']]
                        player2['team'] = target['id']
                        set_player_battle_stats(player2, target)

                        if spectateallgames:
                            if game['id'] != pasyuk_id and pasyuk_id not in game['players']:
                                game['spectators'].append(pasyuk_id)

                        sendm(cwbot, user['id'],
                                           'Выйдя на источник шума, вы встретили бойца вражеского замка - ' + castle_to_emoji(
                                               target['castle']) + target['name'] + \
                                           '! Приготовьтесь к бою...')
                        sendm(cwbot, target['id'],
                                           'Выйдя на источник шума, вы встретили бойца вражеского замка - ' + castle_to_emoji(
                                               user['castle']) + user['name'] + \
                                           '! Приготовьтесь к бою...')
                        threading.Timer(2, goo, args=[None, user['id'], game, cwbot]).start()
                        find = True
                        break
                if find:
                    break
            for ids in users_to_remove:
                cw_duel_find.pop(ids)
            users_to_remove = {}
            for ids in cw_duel_find:
                user = cw_duel_find[ids]
                if time.time() - user['startfindtime'] >= 300:
                    users_to_remove.update({ids: cw_duel_find[ids]})
            for ids in users_to_remove:
                user = users_to_remove[ids]
                game = creategame(chatid=ids)
                cwgames.update(game)
                game = cwgames[ids]
                game['cwduelrats'] = True
                game['players'].update(createplayer(uid=user['id'], name=user['name'], photo=None))
                if spectateallgames:
                    if game['id'] != pasyuk_id and pasyuk_id not in game['players']:
                        game['spectators'].append(pasyuk_id)
                player = game['players'][user['id']]
                player['name'] = user['name']
                player['team'] = player['id']
                player['lvl'] = user['lvl']
                set_player_battle_stats(player, user)

                text = 'Вы отправились на поиски крысиного логова. Дойдете через 1 минуту.'
                threading.Timer(3, goo, args=[None, user['id'], game, cwbot]).start()
                # cwusers.update_one({'id':ids},{'$set':{'current_act':None}})
                cw_duel_find.pop(ids)
                sendm(cwbot, ids, "Выйдя на источник шума, вы обнаружили крысу! Приготовьтесь к бою...")
        except:
            sendm(cwbot, pasyuk_id, traceback.format_exc())
        time.sleep(5)


threading.Thread(target=noise_quest_check, args=[]).start()


@cwbot.message_handler(commands=['players_state'])
def plstatee(m):
    if m.from_user.id != pasyuk_id:
        return
    x = cwusers.find({})
    text = ''
    for ids in x:
        text += str(ids['id']) + ' ' + castle_to_emoji(ids['castle']) + ids['name'] + ': ' + get_player_state(
            ids) + '\n\n'
    texts = []
    while len(text) > 4000:
        textadd = text[:4000]
        text = text[4000:]
        texts.append(textadd)
    for ids in texts:
        sendm(cwbot, m.chat.id, ids)


@cwbot.message_handler(commands=['battle_log'])
def cwme(m):
    user = cwusers.find_one({'id': m.from_user.id})
    if user == None:
        return
    text = ''
    text += '💰: ' + str(user['changebattlegold']) + '\n'
    text += '🔥: ' + str(user['changebattleexp']) + '\n'
    for ids in user['changebattleres']:
        text += '📦' + resource_to_name(ids) + ': ' + str(user['changebattleres'][ids]) + '\n'
    if len(user['changebattleres']) == 0:
        text += '📦Нет изменений.\n'
    for ids in user['lastbattlelogs']:
        text += ids + '\n'
    sendm(cwbot, m.chat.id, "Лог последнего боя:\n\n" + text)


@cwbot.message_handler(commands=['nextlvl'])
def cwnextlvlvv(m):
    try:
        if m.from_user.id != pasyuk_id:
            return

        try:
            lvl = int(m.text.split(' ')[1])
        except:
            return
        need = need_exp_to_next_lvl(lvl - 1)
        sendm(cwbot, m.chat.id, 'Надо опыта для лвла ' + str(lvl) + ': ' + str(need))
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@cwbot.message_handler(commands=['expforquest'])
def cwnextlvlvv(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        text = ''
        lvl = 1
        while lvl < 40:
            exp = exp_for_quest(lvl)
            text += 'В среднем опыта за квест на ' + str(lvl) + ' лвле: ' + str(exp) + '\n'
            lvl += 1

        sendm(cwbot, m.chat.id, text)
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


##################################### CW CALLBACKS ##############################################################################################
##################################### CW CALLBACKS ##############################################################################################
##################################### CW CALLBACKS ##############################################################################################\

@cwbot.callback_query_handler(func=lambda call: time.time() - call.message.date > 125)
def cancelold(call):
    cwbot.answer_callback_query(call.id, 'Слишком старое сообщение!')


##################################### CW CALLBACKS END##############################################################################################
##################################### CW CALLBACKS END##############################################################################################
##################################### CW CALLBACKS END##############################################################################################

def check_necrostaff():
    has_necrostaff.clear()
    for ids in users.find({}):
        try:
            if ids['staff_of_necromant']:
                has_necrostaff.append(ids['id'])
        except:
            pass
    threading.Timer(900, check_necrostaff).start()


check_necrostaff()

has_charge = []


def check_charge():
    has_charge.clear()
    for ids in users.find({}):
        try:
            if ids['rhinosoul']:
                has_charge.append(ids['id'])
        except:
            pass
    threading.Timer(900, check_charge).start()


check_charge()


def summon_world_skeleton():
    w = world.find_one({})
    idlist = []
    for ids in w['npc']:
        idlist.append(w['npc'][ids]['id'])
    skeletonuser = newskeletonuser(idlist=idlist)
    skeleton = createplayer(skeletonuser, photo=skeletonphoto)
    for ids in skeleton:
        x = ids
        break
    skeleton[x]['name'] = 'Скелет|💀'
    skeleton[x]['team'] = skeleton[x]['id']
    skeleton[x]['controller'] = 'bot'
    skeleton[x]['weapon'] = weaponlist.Sword()
    hp = random.randint(2, 4)
    skeleton[x]['hp'] = hp
    skeleton[x]['maxhp'] = hp
    return skeleton[x]


def summon_world_rat():
    w = world.find_one({})
    idlist = []
    for ids in w['npc']:
        idlist.append(w['npc'][ids]['id'])
    newrat = newratuser(idlist=idlist)
    rat = createplayer(newrat, photo=ratphoto)
    for idsss in rat:
        x = idsss
        break
    rat[x]['name'] = 'Крыса|🐭'
    rat[x]['team'] = rat[x]['id']
    rat[x]['controller'] = 'bot'
    return rat[x]


def summon_world_rhino():
    w = world.find_one({})
    idlist = []
    for ids in w['npc']:
        idlist.append(w['npc'][ids]['id'])
    newrhino = newrhinouser(idlist=idlist)
    rhino = createplayer(newrhino, photo=None)
    for idsss in rhino:
        x = idsss
        break
    rhino[x]['name'] = 'Носорог|🦏'
    rhino[x]['team'] = rhino[x]['id']
    rhino[x]['controller'] = 'bot'
    rhino[x]['hp'] = 5
    rhino[x]['maxhp'] = 5
    rhino[x]['dmglimit'] = 9
    rhino[x]['maxdmglimit'] = 9
    rhino[x]['maxenergy'] = 3
    rhino[x]['energy'] = 3
    rhino[x]['weapon'] = weaponlist.Horn()
    rhino[x]['weapon'].dmgbonus += 1
    rhino[x]['selfarmorchance'] = 60
    rhino[x]['selfarmor'] = 2
    return rhino[x]


def spawn_npc(amount=1):
    w = world.find_one({})
    need = amount - len(w['npc'])
    npcs = []
    if need > 0:
        for i in range(need):
            choicenpc = []
            for i in range(10):
                choicenpc.append('rat')
            for i in range(20):
                choicenpc.append('skeleton')
            for i in range(1):
                choicenpc.append('rhino')
            npc = random.choice(choicenpc)
            if npc == 'skeleton':
                npcs.append(summon_world_skeleton())
            elif npc == 'rat':
                npcs.append(summon_world_rat())
            elif npc == 'rhino':
                npcs.append(summon_world_rhino())
    freelocs = []
    for ids in w['world']:
        loc = w['world'][ids]
        if loc['object'] == 'free' and loc['player'] == None and loc['fight'] == False and loc['home'] == False:
            freelocs.append(ids)
    for ids in npcs:
        loc = random.choice(freelocs)
        npc = ids
        world.update_one({}, {'$set': {'world.' + loc + '.player': npc['id']}})
        world.update_one({}, {'$set': {
            'npc.' + str(npc['id']): {'id': npc['id'], 'amount': 1, 'photo': npc['photo'], 'name': npc['name']}}})
        freelocs.remove(loc)


allowgames = True
games = {}
from keyboards import weapons
from keyboards import allw

# weapons = [weaponlist.Pistol, weaponlist.Baseball, weaponlist.Knife, weaponlist.Obrez,
#           weaponlist.Drobovik, weaponlist.Revolver, weaponlist.Torch, weaponlist.Flamethrower,
#           weaponlist.Rifle, weaponlist.Axe, weaponlist.Bulava, weaponlist.Kastet, weaponlist.Kuvalda, weaponlist.Chain,
#          weaponlist.Spear, weaponlist.Saber, weaponlist.Granatomet, weaponlist.Bow, weaponlist.Claws, weaponlist.Electro]
#
# allw = [weaponlist.Pistol, weaponlist.Baseball, weaponlist.Knife, weaponlist.Obrez,
#           weaponlist.Drobovik, weaponlist.Revolver, weaponlist.Torch, weaponlist.Flamethrower,
#           weaponlist.Rifle, weaponlist.Axe, weaponlist.Bulava, weaponlist.Kastet, weaponlist.Kuvalda, weaponlist.Chain,
#       weaponlist.Narsil, weaponlist.Fist, weaponlist.Spear, weaponlist.BowAsgard, weaponlist.Katana, weaponlist.Saber, weaponlist.Granatomet, weaponlist.Bow, weaponlist.Claws,
#       weaponlist.Electro, weaponlist.Non]

npcweapons = [weaponlist.Baseball, weaponlist.Knife, weaponlist.Revolver, weaponlist.Torch, weaponlist.Flamethrower,
              weaponlist.Axe, weaponlist.Kastet, weaponlist.Bow, weaponlist.Chain, weaponlist.Kuvalda, weaponlist.Molot,
              weaponlist.Obrez, weaponlist.Yatagan]

npcclassicweapons = [weaponlist.Pistol_classic, weaponlist.Baseball_classic, weaponlist.Knife_classic, weaponlist.Obrez_classic,
           weaponlist.Drobovik_classic, weaponlist.Revolver_classic, weaponlist.Torch_classic, weaponlist.Flamethrower_classic,
           weaponlist.Axe_classic, weaponlist.Kastet_classic, weaponlist.Kuvalda_classic, weaponlist.Chain_classic,
           weaponlist.Police_classic]

blockweapons = [weaponlist.MachineGun().name, weaponlist.NecromantStaff_players().name]

npcskills = ['sniper', 'dvuzhil', 'zombie', 'bicepc', 'protivogaz', 'shieldgen', 'medic', 'cherep', 'charge', 'berserk',
             'sadist']
npcclassicskills = ['sniper', 'shieldgen', 'medic', 'dvuzhil', 'zombie',
          'bicepc_classic', 'sadist', 'berserk', 'zapas', 'protivogaz_classic',
         'cherep_classic', 'hypnotist_classic', 'armor_classic']

npcitems = ['grenade', 'adrenaline', 'shield', 'flash', 'molotov', 'hitin']  # 'madpotion']

testweapon = allw[-1]

logs = 735169795
ratphoto = 'AgACAgIAAxkBAAEBRAVhK6Ir1wtXM7Q7BaPnR1aLhgniGgAC9rcxG0uoYUlUUf3xM8YqUQEAAwIAA20AAyAE'
skeletonkingphoto = 'AgACAgIAAxkBAAEB1BFhM7fDkTjhY9eGG5ufVi434gYbYAAC0rkxGzIxoUkVJNEkCFF-DAEAAwIAA3kAAyAE'
vampirephoto = 'AgACAgIAAxkBAAEB1SxhM9ASfBl0IXKtewxMvYsFSSIGWgAC7LkxGzIxoUkNhyaIL3_cWQEAAwIAA3kAAyAE'
demonlordphoto = 'AgACAgIAAxkBAAEB7WBhNLcMWGo8R0iLMyoJBAMzBZjw_wACxbUxG2iKqUmEQck6JVPN_QEAAwIAA3kAAyAE'
rhinophoto = 'AgACAgIAAxkBAAEDMFVhOxPFf5i7nqrBKeKJtd0Qz_ILwwACZrUxG22OoUm6J6ChIb5blAEAAwIAA3gAAyAE'
skeletonphoto = 'AgACAgIAAxkBAAEDZURhPvHc2HU3hb5wlmMnFcEDEjBiCgACIbUxG6Pk-Ulc537VVRrXOwEAAwIAA3gAAyAE'
necromantphoto = 'AgACAgIAAxkBAAESEq9iU0HW907UDeJGu2vqhRHohxS1_AADuDEbUaKQSlhp1WlFDKwHAQADAgADeAADIwQ'
onepunchphoto = 'AgACAgIAAxkBAAEz3edjihudg6z_n2ZK4VwyHhHCv6-T9AACjsMxG63nWEheCAf1zzQQkAEAAwIAA3kAAysE'

skills = ['sniper', 'shieldgen', 'medic', 'dvuzhil', 'zombie',
          'bicepc', 'pyromancer', 'sadist', 'berserk', 'zapas', 'visor', 'protivogaz', 'narkoman',
          'vor', 'ritualist', 'navod', 'oruzh', 'necromant', 'incvizitor', 'pyrotech', 'cherep', 'alchemist',
          'ninja', 'multicast', 'lastchance']

items = ['grenade', 'adrenaline', 'shield', 'flash', 'knife', 'molotov', 'dzet', 'hitin']  # , 'bint']#'madpotion']

class RobotMessage:
    def __init__(self, chat):
        self.chat = chat


class RobotChat:
    def __init__(self, id):
        self.id = id

class RobotCall:
    def __init__(self, from_user, data, message):
        self.from_user = from_user
        self.data = data
        self.message = message

class RobotFromUser:
    def __init__(self, id):
        self.id = id


def questselecttt(call):
    if call.from_user.id in questwaits:
        return
    questwaits.append(call.from_user.id)
    try:
        quest = call.data.split('?')[1]
        if is_battle_near():
            sendm(cwbot, call.message.chat.id, 'Битва близко. Сейчас не до приключений.')
            questwaits.remove(call.from_user.id)
            return
        user = cwusers.find_one({'id': call.from_user.id})
        if user['current_act'] in busy_acts:
            if user['current_act'] == 'quest_castle_protect' and quest == 'castle_protect':
                try:
                    user['forest_queue']
                except KeyError:
                    cwusers.update_one({'id': user['id']}, {'$set': {'forest_queue': 0}})
                    user['forest_queue'] = 0
                if user['forest_queue'] >= 5:
                    sendm(cwbot, call.message.chat.id, 'Максимум квестов в очереди - 5!')
                    questwaits.remove(call.from_user.id)
                    return
                cwusers.update_one({'id': user['id']}, {'$inc': {'forest_queue': 1}})
                sendm(cwbot, call.message.chat.id,
                      f'Квест добавлен в очередь. Квестов в очереди: {user["forest_queue"] + 1}')
                if random.randint(1, 100) <= 5:
                    captcha(user)
                questwaits.remove(call.from_user.id)
                return

            sendm(cwbot, call.message.chat.id, 'Вы чем-то заняты и в данный момент не можете взять этот квест.')
            questwaits.remove(call.from_user.id)
            return

        text = 'Ошибка. Обратитесь к Пасюку.'

        # Castle Protect
        if quest == 'castle_protect':
            if user['stamina'] < 1:
                sendm(cwbot, call.message.chat.id, 'Недостаточно выносливости!')
                questwaits.remove(call.from_user.id)
                return
            questtime = 180
            text = 'Вы отправились патрулировать окрестности. Вернетесь через 3 минуты.'
            staminaregen = user['last_stamina_regen']
            if user['stamina'] >= user['maxstamina']:
                staminaregen = time.time()
            cwusers.update_one({'id': call.from_user.id}, {
                '$set': {'current_act': 'quest_castle_protect', 'stamina': user['stamina'] - 1,
                         'quest_started': time.time(),
                         'last_stamina_regen': staminaregen}})
            threading.Timer(questtime, castle_protect_quest, args=[user]).start()
            sendm(cwbot, call.message.chat.id, text)
            questwaits.remove(call.from_user.id)
            return

        # Rat Hunt
        if quest == 'rathunt':
            if user['stamina'] < 1:
                sendm(cwbot, call.message.chat.id, 'Недостаточно выносливости!')
                questwaits.remove(call.from_user.id)
                return
            if call.message.chat.id not in cwgames:
                staminaregen = user['last_stamina_regen']
                if user['stamina'] >= user['maxstamina']:
                    staminaregen = time.time()
                cwusers.update_one({'id': call.from_user.id}, {
                    '$set': {'current_act': 'quest_rathunt', 'stamina': user['stamina'] - 1,
                             'quest_started': time.time(),
                             'last_stamina_regen': staminaregen}})
                game = creategame(call.message)
                cwgames.update(game)
                game = cwgames[call.message.chat.id]
                game['cwrats'] = True
                try:
                    photopath = cwbot.get_file(cwbot.get_chat(call.from_user.id).photo.big_file_id)
                    photo = requests.get(
                        'https://api.telegram.org/file/bot' + cwbottoken + '/' + photopath.file_path).content
                except:
                    photo = None
                game['players'].update(createplayer(call.from_user, photo=photo))
                if spectateallgames:
                    if game['id'] != pasyuk_id and pasyuk_id not in game['players']:
                        game['spectators'].append(pasyuk_id)
                player = game['players'][call.from_user.id]
                player['name'] = user['name']
                player['team'] = player['id']
                player['lvl'] = user['lvl']
                set_player_battle_stats(player, user)
                text = 'Вы отправились на поиски крысиного логова. Дойдете через 15 секунд.'
                threading.Timer(15, goo, args=[None, call.message.chat.id, game, cwbot]).start()
            sendm(cwbot, call.message.chat.id, text)
            questwaits.remove(call.from_user.id)
            return

        # Noise Check
        if quest == 'noise_check':
            if user['noise_check'] <= 0:
                sendm(cwbot, call.message.chat.id, 'Вы ничего не слышали!')
                questwaits.remove(call.from_user.id)
                return
            cwusers.update_one({'id': user['id']}, {'$inc': {'noise_check': -1}})
            cwusers.update_one({'id': call.from_user.id}, {'$set': {'current_act': 'quest_noise_check'}})
            user['startfindtime'] = time.time()
            cw_duel_find.update({user['id']: user})
            text = '👀|Вы отправились на поиски источника странного шума.'
            sendm(cwbot, call.message.chat.id, text)
            questwaits.remove(call.from_user.id)
            return

        # Troll
        if quest == 'troll':
            try:
                user['troll']
            except KeyError:
                cwusers.update_one({'id': user['id']}, {'$set': {'troll': 1}})
                user['troll'] = 1
            if user['troll'] <= 0:
                sendm(cwbot, call.message.chat.id, 'В логово тролля можно ходить всего раз в день!')
                questwaits.remove(call.from_user.id)
                return
            if user['stamina'] < 2:
                sendm(cwbot, call.message.chat.id, 'Недостаточно выносливости!')
                questwaits.remove(call.from_user.id)
                return
            cwusers.update_one({'id': user['id']}, {'$inc': {'troll': -1, 'stamina': -2}})
            cwusers.update_one({'id': call.from_user.id}, {'$set': {'current_act': 'troll'}})
            stickid = "CAACAgIAAxkBAAKPa2bpdv-tdcDsu6gPyYuOZK8r2ESgAALqVAACZkkRS98YykCTmuaQNgQ"
            try:
                cwbot.send_sticker(user['id'], stickid)
            except:
                pass
            text = '👹|Вы отправились в логово тролля, под мост. Вернетесь через 2 минуты.'
            threading.Timer(random.randint(110, 130), troll_quest, args=[user]).start()
            sendm(cwbot, call.message.chat.id, text)
            questwaits.remove(call.from_user.id)
            return

    except Exception as e:
        sendm(cwbot, pasyuk_id, traceback.format_exc())
        questwaits.remove(call.from_user.id)


def check_robots_acts():
    for ids in users.find({}):
        user = ids
        try:
            if user["robot"]:
                if user["current_act"] == None:
                    from_user = RobotFromUser(user["id"])
                    data = "quest_select?noise_check"
                    chat = RobotChat(user["id"])
                    message = RobotMessage(chat)
                    call = RobotCall(from_user, data, message)
                    questselecttt(call)
        except:
            pass


# def createuser(user):
#    return {
#    'id':user.id,
#    'name':user.first_name,
#    'wins':0,
#    'games':0
#    }

# @bot.message_handler(commands = ['profile'])
# def prrrrr(m):
#    user = users.find_one({'id':m.from_user.id})
#    if user == None:
#        user = users.insert_one(createuser(m.from_user))
#        user = users.find_one({'id':m.from_user.id})
#    text = 'Профиль игрока '+user['name']+':\n\n'
#    text += 'Игр: '+str(user['games'])+'\n'
#    text += 'Побед: '+str(user['wins'])+'\n'
#    try:
#        perc = (user['wins']/user['games'])*100
#        perc = round(perc, 2)
#    except:
#        perc = 0
#    text += 'Процент побед: '+str(perc)+'%'
#    sendm(bot, m.chat.id, text)

def getstat(m, stat):
    user = users.find_one({'id': m.from_user.id})
    if user == None:
        player = {
            'id': m.from_user.id,
            'name': m.from_user.first_name
        }
        users.insert_one(createuser(player))
        user = users.find_one({'id': m.from_user.id})
    if stat == 'all':
        wins = user['wins']
        loses = user['games'] - user['wins']
        games = user['games']
        try:
            ties = user['ties']
        except:
            ties = 0
        try:
            percent = str(round((user['wins'] / user['games'] * 100), 1)) + '%'
        except:
            percent = 'Не было сыграно ни одной игры!'
        whatstat = '(все игры)'

    if stat == 'rats':
        try:
            wins1 = user['ratstats']['diff1']['wins']
            loses1 = user['ratstats']['diff1']['games'] - user['ratstats']['diff1']['wins']
            games1 = user['ratstats']['diff1']['games']
            try:
                percent1 = str(round((wins1 / games1 * 100), 1)) + '%'
            except:
                percent1 = 'Не было сыграно ни одной игры!'
            whatstat1 = 'Сложность 1:\n'

            wins2 = user['ratstats']['diff2']['wins']
            loses2 = user['ratstats']['diff2']['games'] - user['ratstats']['diff2']['wins']
            games2 = user['ratstats']['diff2']['games']
            try:
                percent2 = str(round((wins2 / games2 * 100), 1)) + '%'
            except:
                percent2 = 'Не было сыграно ни одной игры!'
            whatstat2 = 'Сложность 2:\n'

            wins3 = user['ratstats']['diff3']['wins']
            loses3 = user['ratstats']['diff3']['games'] - user['ratstats']['diff3']['wins']
            games3 = user['ratstats']['diff3']['games']
            try:
                percent3 = str(round((wins3 / games3 * 100), 1)) + '%'
            except:
                percent3 = 'Не было сыграно ни одной игры!'
            whatstat3 = 'Сложность 3:\n'

            textall = 'Статистика ' + m.from_user.first_name + ' по играм с крысами:\n\n' + whatstat1 + '' + 'Игр сыграно: ' + str(
                games1) + '\n' + \
                      'Победы: ' + str(wins1) + '\n' + 'Поражения: ' + str(
                loses1) + '\n' + 'Процент побед: ' + percent1 + '\n\n' + \
                      whatstat2 + '' + 'Игр сыграно: ' + str(games2) + '\n' + \
                      'Победы: ' + str(wins2) + '\n' + 'Поражения: ' + str(
                loses2) + '\n' + 'Процент побед: ' + percent2 + '\n\n' + \
                      whatstat3 + '' + 'Игр сыграно: ' + str(games3) + '\n' + \
                      'Победы: ' + str(wins3) + '\n' + 'Поражения: ' + str(
                loses3) + '\n' + 'Процент побед: ' + percent3 + '\n\n'

            sendm(bot, m.chat.id, textall)
            return
        except:
            sendm(bot, m.chat.id, 'Не было сыграно ни одной игры с крысами!')
            return

    if stat == 'duel':
        try:
            wins = user['duels']['wins']
            loses = user['duels']['games'] - user['duels']['wins']
            games = user['duels']['games']
            try:
                ties = user['duels']['ties']
            except:
                ties = 0
        except:
            wins = 0
            loses = 0
            games = 0
            ties = 0
        try:
            percent = str(round((user['duels']['wins'] / user['duels']['games'] * 100), 1)) + '%'
        except:
            percent = 'Не было сыграно ни одной игры!'
        whatstat = '(дуэли)'
    if stat == 'mass':
        try:
            wins = user['massbattles']['wins']
            loses = user['massbattles']['games'] - user['massbattles']['wins']
            games = user['massbattles']['games']
            try:
                ties = user['massbattles']['ties']
            except:
                ties = 0
        except:
            wins = 0
            loses = 0
            games = 0
            ties = 0
        try:
            percent = str(round((user['massbattles']['wins'] / user['massbattles']['games'] * 100), 1)) + '%'
        except:
            percent = 'Не было сыграно ни одной игры!'
        whatstat = '(каждый за себя)'
    if stat == 'pureduels':
        try:
            wins = user['pureduels']['wins']
            loses = user['pureduels']['games'] - user['pureduels']['wins']
            games = user['pureduels']['games']
            try:
                ties = user['pureduels']['ties']
            except:
                ties = 0
        except:
            wins = 0
            loses = 0
            games = 0
            ties = 0
        try:
            percent = str(round((user['pureduels']['wins'] / user['pureduels']['games'] * 100), 1)) + '%'
        except:
            percent = 'Не было сыграно ни одной игры!'
        whatstat = '(дуэли на рапирах)'
    if stat == 'teams':
        try:
            wins = user['teams']['wins']
            loses = user['teams']['games'] - user['teams']['wins']
            games = user['teams']['games']
            try:
                ties = user['teams']['ties']
            except:
                ties = 0
        except:
            wins = 0
            loses = 0
            games = 0
            ties = 0
        try:
            percent = str(round((user['teams']['wins'] / user['teams']['games'] * 100), 1)) + '%'
        except:
            percent = 'Не было сыграно ни одной игры!'
        whatstat = '(командные бои)'
    textall = 'Статистика ' + m.from_user.first_name + ' ' + whatstat + ':\n' + 'Игр сыграно: ' + str(games) + '\n' + \
              'Победы: ' + str(wins) + '\n' + 'Поражения: ' + str(loses) + '\nНичьи: ' + str(
        ties) + '\n' + 'Процент побед: ' + percent

    sendm(bot, m.chat.id, textall)


@bot.callback_query_handler(func=lambda call: call.data[:5] == 'click')
def clicksss(call):
    user = users.find_one({'id': call.from_user.id})
    pos = user['worldpos']
    clickedpos = call.data.split('?')[1]
    w = world.find_one({})
    if clickedpos in w['world']:
        if w['world'][clickedpos]['object'] == 'wall' or w['world'][clickedpos]['player'] != None or \
                w['world'][clickedpos]['fight']:
            bot.answer_callback_query(call.id, 'Клетка занята!')
            return
        users.update_one({'id': call.from_user.id}, {'$set': {'worldpos': clickedpos}})
        user['worldpos'] = clickedpos
        world.update_one({}, {'$set': {'world.' + pos + '.player': None}})
        world.update_one({}, {'$set': {'world.' + clickedpos + '.player': call.from_user.id}})
        w['world'][pos]['player'] = None
        w['world'][clickedpos]['player'] = call.from_user.id
        bot.answer_callback_query(call.id, '✅')
    else:
        bot.answer_callback_query(call.id, 'Это край карты!')
        return
    kb = get_player_keyboard(user, w)
    medit('Карта.', call.message.chat.id, call.message.message_id, reply_markup=kb)


@bot.message_handler(commands=['useramount'])
def uamount(m):
    if m.from_user.id != pasyuk_id:
        return
    x = users.find({})
    z = 0
    for ids in x:
        z += 1
    sendm(bot, m.chat.id, 'Всего пользователей: ' + str(z))


def base_effect(eid):
    return {
        'name': 'Без имени',
        'id': eid,
        'effect_chance': '50',
        'effect': 'stun',
        'effect_targets': ['enemy_i_attack']
    }


def base_weapon(wid):
    return {
        'name': 'Без имени',
        'id': wid,
        'effects': {},
        'ranged': False,
        'cubes': '3',
        'dmgbonus': '0',
        'accuracybonus': '2',
        'energycost': '2'

    }


@bot.message_handler(commands=['create_weapon'])
def createww(m):
    if m.from_user.id != pasyuk_id:
        return
    user = users.find_one({'id': m.from_user.id})
    if user == None:
        return
    try:
        user['custom_weapons']
    except:
        users.update_one({'id': user['id']}, {'$set': {'custom_weapons': {}}})
        user = users.find_one({'id': m.from_user.id})
    wid = 0
    for ids in user['custom_weapons']:
        wid += 1
    weapon = base_weapon(wid)


@bot.message_handler(commands=['giveEXPLOSION'])
def giveEXPLOSION(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        user = users.find_one({'id': m.reply_to_message.from_user.id})
        users.update_one({'id': user['id']}, {'$set': {'EXPLOSION': True}})
        sendm(bot, m.chat.id, 'Got EXPLOSION')
    except:
        sendm(bot, m.chat.id, 'Отправьте команду реплаем на сообщение!')


@bot.message_handler(commands=['giveMINER'])
def giveMINER(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        user = users.find_one({'id': m.reply_to_message.from_user.id})
        users.update_one({'id': user['id']}, {'$set': {'miner': True}})
        sendm(bot, m.chat.id, 'Got MINER.')
    except:
        sendm(bot, m.chat.id, 'Отправьте команду реплаем на сообщение!')


@bot.message_handler(commands=['giveCHARGE'])
def giveCHARGE(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        user = users.find_one({'id': m.reply_to_message.from_user.id})
        users.update_one({'id': user['id']}, {'$set': {'rhinosoul': True}})
        sendm(bot, m.chat.id, 'Got CHARGE')
    except:
        sendm(bot, m.chat.id, 'Отправьте команду реплаем на сообщение!')


@bot.message_handler(commands=['kirilitsa'])
def kirilitsaa(m):
    try:
        kb = types.InlineKeyboardMarkup()
        kb.add(types.InlineKeyboardButton(text='Дата', callback_data='Дата'))
        sendm(bot, m.chat.id, 'text', reply_markup=kb)
    except:
        sendm(bot, m.chat.id, traceback.format_exc())


@bot.message_handler(commands=['newworld'])
def clearw(m):
    if m.from_user.id != pasyuk_id:
        return
    world.drop({})
    users.update_many({}, {'$set': {'worldpos': None}})
    ow = generate_open_world()
    world.insert_one({'world': ow, 'npc': {}})
    sendm(bot, m.chat.id, 're-created')


@bot.message_handler(commands=['spawnnpc'])
def spawnnpccc(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        amount = int(m.text.split(' ')[1])
    except:
        amount = 1
    spawn_npc(amount)
    sendm(bot, m.chat.id, 'spawned ' + str(amount))


@bot.message_handler(commands=['world'])
def worlddddd(m):
    w = world.find_one({})
    user = users.find_one({'id': m.from_user.id})
    if user == None:
        users.insert_one(createuser2(m.from_user))
        user = users.find_one({'id': m.from_user.id})
    try:
        curpos = user['worldpos']
        if curpos == None:
            raise Exception()
        try:
            kb = get_player_keyboard(user, w)
        except:
            print(traceback.format_exc())
            kb = types.InlineKeyboardMarkup()
        sendm(bot, m.chat.id, 'Карта.', reply_markup=kb)
    except:
        pos = place_new_player(user, w)
        world.update_one({}, {'$set': {'world.' + pos + '.home': m.from_user.id}})
        users.update_one({'id': m.from_user.id}, {'$set': {'worldpos': pos}})
        sendm(bot, m.chat.id, 'Вы создали базу! Нажмите команду еще раз, чтобы увидеть местоположение.')


@bot.message_handler(commands=['newplayer'])
def clearw(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        amount = int(m.text.split(' ')[1])
    except:
        amount = 1
    for i in range(amount):
        pos = place_new_player(users.find_one({'id': m.from_user.id}), world.find_one({}))
        world.update_one({}, {'$set': {'world.' + pos + '.home': m.from_user.id}})
    sendm(bot, m.chat.id, 'added player')


@bot.message_handler(commands=['update'])
def upddd(m):
    if m.from_user.id != pasyuk_id:
        return
    global allowgames
    allowgames = not allowgames
    sendm(bot, m.chat.id, 'Режим технических работ теперь ' + str(not allowgames))


@bot.message_handler(commands=['v_stats'])
def vegstat(m):
    getstat(m, 'all')


@bot.message_handler(commands=['v_stats_teams'])
def vegstat(m):
    getstat(m, 'teams')


@bot.message_handler(commands=['v_stats_massbattle'])
def vegstat(m):
    getstat(m, 'mass')


@bot.message_handler(commands=['v_stats_duels'])
def vegstat(m):
    getstat(m, 'duel')


@bot.message_handler(commands=['v_stats_rats'])
def vegstat_rats(m):
    getstat(m, 'rats')


@bot.message_handler(commands=['v_stats_pureduels'])
def vegstat_pureduelss(m):
    getstat(m, 'pureduels')


@bot.message_handler(commands=['caster_help'])
def casterhelpp(m):
    text = 'Заклинатель - достаточно разнообразный скилл. В вашем арсенале есть обширный набор способностей, использование которых поможет вам почти во всех игровых ' + \
           'ситуациях. Но есть одно условие - вы не знаете, какие элементы надо скомбинировать между собой, чтобы получить заклинание. Остается только одно - ' + \
           'экспериментировать!\n\nВсего на данный момент есть 21 способность и 13 элементов (но за ход вы будете получать всего 9 из них). Каждое заклинание состоит ' + \
           'из трех элементов, и среди них могут быть повторяющиеся. То есть ' + \
           'заклинание не обязательно должно содержать 3 различных элемента, оно может состоять из двух элементов одного типа и третьего элемента другого типа. Например: ' + \
           '❄️❄️💧 (такого заклинания не существует, даже не пытайтесь). Или ❄️❄️❄️. А вот порядок элементов уже не важен. ❄️❄️💧 и ❄️💧❄️ - одно и то же для мира магии. ' + \
           'Так же после каждого успешного заклинания бойцу требуется отдых в зависимости от силы примененной способности.\n\n' + \
           '__P.S.__ "Заклинатель" временно недоступен для похода в подземелье. Возможно, список заклинаний когда-нибудь пополнится, ' + \
           'а может даже будут ивенты, за прохождение которых будут выдаваться рецепты колдовства. ' + \
           'Но это все только в планах.\n\nТеперь заклинатели начинают игру с одним скиллом, кулаками и тремя энергии.'
    try:
        sendm(bot, m.chat.id, text, parse_mode='markdown')
    except:
        pass


@bot.message_handler(commands=['getsize'])
def vegdictsize(m):
    if m.from_user.id != pasyuk_id:
        return
    x = createplayer(m.from_user)
    sendm(bot, m.chat.id, str(getsizeof(x)) + ' байт - размер объекта игрока')


@bot.message_handler(commands=['spectateall'])
def vegdictsizespectate(m):
    if m.from_user.id != pasyuk_id:
        return
    global spectateallgames
    spectateallgames = not spectateallgames
    sendm(bot, m.chat.id, 'Трансляция всех игр теперь ' + str(spectateallgames))


@bot.message_handler(commands=['chatid'])
def giveweaponchatid(m):
    sendm(bot, m.chat.id, str(m.chat.id))


@bot.message_handler(commands=['giveweapon'])
def giveweapon(m):
    try:
        if m.from_user.id != pasyuk_id and m.from_user.id != 197216910:
            return
        try:
            game = games[m.chat.id]
        except:
            return
        try:
            player = game['players'][m.reply_to_message.from_user.id]
        except:
            return
        try:
            wname = m.text.split(' ', 1)[1]
        except:
            return
        w = None
        for ids in allw:
            if ids().name == wname:
                w = ids()
                break
        if w == None:
            sendm(bot, m.chat.id, 'Оружия не существует!')
            return
        player['weapon'] = w
        sendm(bot, m.chat.id, 'Теперь у ' + player['name'] + ' оружие ' + w.name + '!')
    except:
        sendm(bot, m.chat.id, 'Ошибка!')


@bot.message_handler(commands=['addgametext'])
def giveweapon(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        try:
            game = games[m.chat.id]
        except:
            return
        game['text'] += m.text.split(' ', 1)[1]
        sendm(bot, m.chat.id, 'Добавил текст в результаты.')
    except:
        sendm(bot, m.chat.id, 'Ошибка.')


@bot.message_handler(commands=['weaponhits'])
def whitss(m):
    try:
        weapon = m.text.split('?')[1]

    except:
        sendm(bot, m.chat.id, 'Введите имя оружия!')
        return
    try:
        amount = int(m.text.split('?')[3])
    except:
        amount = 10000
    try:
        energy = int(m.text.split('?')[2])
    except:
        energy = 5
    w = None
    for ids in allw:
        if ids().name == weapon:
            w = ids()
            break
    if w == None:
        sendm(bot, m.chat.id, 'Оружия не существует!')
        return
    sendm(bot, m.chat.id, 'Рассчитываю...')
    dmg, chances = getweaponhits(w, energy, amount)
    chtext = ''
    for ids in chances:
        chtext += str(ids) + ' урона: ' + str(round((chances[ids] / amount) * 100, 4)) + '%\n'
    sendm(bot, m.chat.id, 'Средний урон оружия ' + w.name + ' с ' + str(energy) + '⚡️ энергии: ' + str(
        dmg) + '\n\n' + chtext)


@bot.message_handler(commands=['setequip'])
def seteq(m):
    if m.chat.type != 'private':
        sendm(bot, m.chat.id, 'Команда доступна только в ЛС!')
        return
    user = users.find_one({'id': m.from_user.id})
    if user == None:
        users.insert_one(createuser2(m.from_user))
        user = users.find_one({'id': m.from_user.id})
    kb = getallweaponkb()
    sendm(bot, m.chat.id, 'Выберите оружие:', reply_markup=kb)


def getallweaponkb():
    kb = types.InlineKeyboardMarkup()
    kbrow = []
    for ids in allw:
        x = ids
        kbrow.append(types.InlineKeyboardButton(text=x.name, callback_data='setuserweapon?' + str(x.id)))
        if len(kbrow) == 2:
            kb.add(*kbrow)
            kbrow = []
    if len(kbrow) > 0:
        kb.add(*kbrow)
    return kb


@bot.callback_query_handler(func=lambda call: call.data[:13] == 'setuserweapon')
def selectuserweapon(call):
    weapon = None


@bot.message_handler(commands=['send_to_all'])
def sendtoall(m):
    if m.from_user.id != pasyuk_id:
        return
    if m.reply_to_message == None:
        sendm(bot, m.chat.id, 'Ответьте на сообщение!')
    sendm(bot, m.chat.id, 'Начинаю рассылку...')
    x = 0
    for ids in users.find({}):
        try:
            bot.forward_message(ids['id'], m.chat.id, message_id=m.reply_to_message.message_id)
            x += 1
            time.sleep(0.3)
        except:
            print(traceback.format_exc())
    sendm(bot, m.chat.id, 'Сообщение получили ' + str(x) + ' человек.')


@bot.message_handler(content_types=['photo'])
def photoss(m):
    if m.chat.id != pasyuk_id:
        return
    sendm(bot, m.chat.id, str(m.photo[-1].file_id))


@bot.message_handler(commands=['drop_stats_confirm_confirm'])
def drrrrrrrrrrrrrrrrrrrrrrr(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        user = users.find_one({'id': m.reply_to_message.from_user.id})
    except:
        sendm(bot, m.chat.id,
                         'Ответьте командой на сообщение!\n\n*Warning:* команда сбросит стату выбранного пользователя!',
                         parse_mode='markdown')
        return
    if user != None:
        text = 'wins: ' + str(user['wins']) + '\n' + 'games: ' + str(user['games'])
        sendm(bot, pasyuk_id, text)
        users.update_one({'id': user['id']}, {'$set': {'games': 0, 'wins': 0}})
    sendm(bot, m.chat.id,
                     'Статистика ползователя ' + m.reply_to_message.from_user.first_name + ' обнулена! Резервная копия статы получена в ЛС.')


@bot.message_handler(commands=['id'])
def idddd(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        sendm(bot, m.from_user.id, str(m.reply_to_message.from_user.id))
        sendm(bot, m.chat.id, 'Got ID')
    except:
        sendm(bot, m.chat.id, 'Error!')


@bot.message_handler(commands=['currentgames'])
def idddd(m):
    if m.from_user.id != pasyuk_id:
        return
    x = 0
    for ids in games:
        if games[ids]['started']:
            if games[ids]['id'] != botfights:
                x += 1
    try:
        sendm(bot, m.chat.id, 'Количество игр: ' + str(x))

    except:
        sendm(bot, m.chat.id, 'Error!')


@bot.message_handler(commands=['allstats'])
def allstats(m):
    if m.from_user.id != pasyuk_id:
        return
    text = ''
    try:
        x = m.text.split(' ')[1]
        if x in ['teamfight', 'team']:
            stats = teamstats
            text = 'Статистика командных игр:\n\n'
        elif x in ['pvp', 'duel']:
            stats = duelstats
            text = 'Статистика дуэлей:\n\n'
        elif x in ['mass', 'massbattle']:
            stats = massbattlestats
            text = 'Статистика массовых битв:\n\n'
        else:
            stats = duelstats
    except:
        stats = duelstats
        text = 'Статистика дуэлей:\n\n'
    s = stats.find_one({})
    for ids in s['skills']:
        try:
            percent = str(round((s['skills'][ids]['wins'] / s['skills'][ids]['games'] * 100), 1)) + '%'
        except:
            percent = 'Не было сыграно ни одной игры!'
        text += getname(s['skills'][ids]['name']) + ':\n'
        text += 'Игр: ' + str(s['skills'][ids]['games']) + '\n'
        text += 'Побед: ' + str(s['skills'][ids]['wins']) + '\n'
        text += 'Поражений: ' + str(s['skills'][ids]['games'] - s['skills'][ids]['wins']) + '\n'
        text += 'Процент побед: ' + percent + '\n'
        text += '\n'
    sendm(bot, m.chat.id, text)
    text = ''
    for ids in s['weapons']:
        try:
            percent = str(round((s['weapons'][ids]['wins'] / s['weapons'][ids]['games'] * 100), 1)) + '%'
        except:
            percent = 'Не было сыграно ни одной игры!'
        text += s['weapons'][ids]['name'] + ':\n'
        text += 'Игр: ' + str(s['weapons'][ids]['games']) + '\n'
        text += 'Побед: ' + str(s['weapons'][ids]['wins']) + '\n'
        text += 'Поражений: ' + str(s['weapons'][ids]['games'] - s['weapons'][ids]['wins']) + '\n'
        text += 'Процент побед: ' + percent + '\n'
        text += '\n'
    if text != '':
        sendm(bot, m.chat.id, text)


@bot.message_handler(commands=['hitchance'])
def hitchance(m):
    try:
        x = m.text.split(' ')
        cubes = int(x[1])
        energy = int(x[2])
        basechance = 1 - (energy / 10)
        chance = 1
        for i in range(cubes):
            chance = chance * basechance
        naturalchance = (1 - chance) * 100
        naturalchance = round(naturalchance, 0)
        naturalchance = int(naturalchance)
        text = '🎯|Вероятность попасть при 🎲' + str(cubes) + ' кубах и ⚡️' + str(energy) + ' энергии - ' + str(
            naturalchance) + '%'
        sendm(bot, m.chat.id, text)
    except:
        sendm(bot, m.chat.id, 'Формат ввода:\n' +
                         '/hitchance кубы энергия')


@bot.message_handler(commands=['start'])
def start(m):
    sendm(bot, m.chat.id, 'Приветствие')


@bot.message_handler(commands=['v_cancel'])
def cancelll(m):
    if m.chat.id not in games:
        sendm(bot, m.chat.id, 'Игра ещё не была создана (/v_prepare)!')
        return
    game = games[m.chat.id]
    if game['started'] == True:
        sendm(bot, m.chat.id, 'Игра уже в процессе!')
        return
    try:
        if m.chat.type != 'private' and bot.get_chat_member(m.chat.id, m.from_user.id).status not in ['creator',
                                                                                                      'administrator'] and m.from_user.id != \
                game['creator']:
            sendm(bot, m.chat.id, 'Вы не администратор чата!')
            return
    except:
        pass
    del games[game['id']]
    sendm(bot, m.chat.id, 'Игра удалена!')


@bot.message_handler(commands=['v_join'])
def join(m):
    if m.chat.id not in games:
        sendm(bot, m.chat.id, 'Игра ещё не была создана (/v_prepare)!')
        return
    game = games[m.chat.id]
    if game['started'] == True:
        sendm(bot, m.chat.id, 'Игра уже в процессе!')
        return
    if m.from_user.id in game['players']:
        sendm(bot, m.chat.id, 'Вы уже в игре!')
        return
    user = users.find_one({'id': m.from_user.id})
    if user == None:
        users.insert_one(createuser2(m.from_user))
        user = users.find_one({'id': m.from_user.id})
    if game['pureduel_rats'] and len(game['players']) >= 1:
        sendm(bot, m.chat.id, 'Лимит игроков для дуэли с крысой - 1!', reply_to_message_id=m.message_id)
        return
    if game['pureduel'] and len(game['players']) >= 2 and not game['teamplay']:
        sendm(bot, m.chat.id, 'Лимит игроков для дуэли - 2!', reply_to_message_id=m.message_id)
        return
    if game['pokemonhunt'] and len(game['players']) >= 1:
        sendm(bot, m.chat.id, 'Лимит игроков для ловли крыс - 1!', reply_to_message_id=m.message_id)
        return
    if game['dungeon'] and game['dungeon_type'] == 'roulette' and len(game['players']) >= 1:
        sendm(bot, m.chat.id, 'Эта игра - смертельная дуэль для ДВОИХ.', reply_to_message_id=m.message_id)
        return
    if game['rp_fight']:
        try:
            user['rp_profile']
        except:
            sendm(bot, m.chat.id, 'У вас нет рп-профиля!')
            return
    try:
        sendm(bot, m.from_user.id, 'Вы успешно присоединились!')
        sendm(bot, m.chat.id, m.from_user.first_name + ' присоединился к игре!')
        teams = []
        x = 0
        for ids in game['players']:
            if x > 1:
                break
            teams.append(game['players'][ids])
            x += 1
        try:

            photopath = bot.get_file(bot.get_chat(m.from_user.id).photo.big_file_id)
            photo = requests.get('https://api.telegram.org/file/bot' + token + '/' + photopath.file_path).content


        except:
            print(traceback.format_exc())
            photo = None
        playerslimit = 1000
        if game['bossfight']:
            playerslimit = 1000
        if len(game['players']) >= playerslimit:
            sendm(bot, m.chat.id, 'Слишком много игроков!')
            return
        game['players'].update(createplayer(m.from_user, photo=photo))
        player = game['players'][m.from_user.id]
        if player['id'] in has_hell_reward:
            player['completed_hell'] = True
        if game['rp_fight']:
            player['rp_fighter'] = True
            player['hp'] = user['rp_profile']['hp']
            player['maxhp'] = user['rp_profile']['maxhp']
            player['energy'] = user['rp_profile']['energy']
            player['maxenergy'] = user['rp_profile']['maxenergy']
            player['inventory'] = user['rp_profile']['inventory']
            player['dmglimit'] = user['rp_profile']['dmglimit']
            player['maxdmglimit'] = user['rp_profile']['maxdmglimit']
            player['rp_weapon'] = user['rp_profile']['weapon']
            player['user'] = user
            if player['hp'] <= 0:
                player['hp'] = 1
                player['energy'] -= 3
                player['maxenergy'] -= 3
                if player['maxenergy'] < 2:
                    player['maxenergy'] = 2
        if len(game['players']) > 2 and game['teamplay']:
            team1 = 0
            team2 = 0
            for ids in game['players']:
                if game['players'][ids]['team'] == teams[0]['team']:
                    team1 += 1
                if game['players'][ids]['team'] == teams[1]['team']:
                    team2 += 1
            kb = types.InlineKeyboardMarkup()
            kb.add(types.InlineKeyboardButton(text=teams[0]['name'] + ' - ' + str(team1),
                                              callback_data='selectteam?' + str(game['id']) + '?' + str(
                                                  teams[0]['id'])))
            kb.add(types.InlineKeyboardButton(text=teams[1]['name'] + ' - ' + str(team2),
                                              callback_data='selectteam?' + str(game['id']) + '?' + str(
                                                  teams[1]['id'])))
            sendm(bot, m.from_user.id, 'Выберите команду.', reply_markup=kb)
        else:
            player['team'] = player['id']

    except:
        sendm(bot, m.chat.id, 'Для начала напишите боту в ЛС!')

@bot.message_handler(commands=['give_dark'])
def giveDARKrewarddd(m):
    if m.from_user.id not in [pasyuk_id, 441399484]:
        return
    try:
        user = users.find_one({'id': m.reply_to_message.from_user.id})
        users.update_one({'id': user['id']}, {'$set': {'dark_reward': True}})
        sendm(bot, m.chat.id, 'Got dark')
    except:
        sendm(bot, m.chat.id, 'Отправьте команду реплаем на сообщение!')

@bot.message_handler(commands=['give_necromant'])
def giveDARKrewarddd(m):
    if m.from_user.id not in [pasyuk_id, 441399484]:
        return
    try:
        user = users.find_one({'id': m.reply_to_message.from_user.id})
        users.update_one({'id': user['id']}, {'$set': {'necromant_reward': True}})
        sendm(bot, m.chat.id, 'Got necromant')
    except:
        sendm(bot, m.chat.id, 'Отправьте команду реплаем на сообщение!')


@bot.callback_query_handler(func=lambda call: call.data[:10] == 'selectteam')
def selectteam(call):
    game = int(call.data.split('?')[1])
    team = int(call.data.split('?')[2])
    try:
        game = games[game]
    except:
        return
    if call.from_user.id not in game['players']:
        return
    player = game['players'][call.from_user.id]
    if player['team'] != None:
        bot.answer_callback_query(call.id, 'Вы уже выбрали команду!')
        return
    team_exists = False
    for ids in game['players']:
        if game['players'][ids]['team'] == team:
            team_exists = True
            break
    if not team_exists:
        bot.answer_callback_query(call.id, 'Команды не существует!')
        return
    player['team'] = team
    player2 = game['players'][team]
    medit('Вы успешно выбрали команду: ' + player2['name'] + '!', call.message.chat.id, call.message.message_id)
    sendm(bot, game['id'], player['name'] + ' выбирает команду: ' + player2['name'] + '!')

@bot.message_handler(commands = ['removerhino'])
def removerrr(m):
    if m.from_user.id != 441399484:
        return
    users.update_one({'id': 5691781572}, {'$set': {'rhinosoul': False}})
    sendm(bot, m.chat.id, 'Ok')

@bot.callback_query_handler(func=lambda call: call.data[:10] == 'switchtext')
def switchteextss(call):
    text = call.data.split('?')[1]
    user = users.find_one({'id': call.from_user.id})
    try:
        user['customtexts']
    except:
        users.update_one({'id': user['id']}, {'$set': {'customtexts': {}}})
    if text not in user['customtexts']:
        bot.answer_callback_query(call.id, 'Ошибка!')
        return
    users.update_one({'id': user['id']}, {'$set': {'customtexts.' + text: not user['customtexts'][text]}})
    user['customtexts'][text] = not user['customtexts'][text]
    bot.answer_callback_query(call.id, '✅')
    kb = getswitchkb(user)
    medit('Нажмите на текст, чтобы включить/выключить его.', call.message.chat.id, call.message.message_id,
          reply_markup=kb)


def getswitchkb(user):
    kb = types.InlineKeyboardMarkup()
    for ids in user['customtexts']:
        if user['customtexts'][ids]:
            g = '✅'
        else:
            g = '☑️'
        kb.add(types.InlineKeyboardButton(text=g + ids, callback_data='switchtext?' + ids))
    return kb


@bot.message_handler(commands=['selecttexts'])
def selecttexts(m):
    if m.chat.type != 'private':
        sendm(bot, m.chat.id, 'Доступно только в ЛС!')
        return
    user = users.find_one({'id': m.from_user.id})
    if user == None:
        users.insert_one(createuser2(m.from_user))
        user = users.find_one({'id': m.from_user.id})
    try:
        user['customtexts']
    except:
        users.update_one({'id': user['id']}, {'$set': {'customtexts': {}}})
    kb = getswitchkb(user)
    sendm(bot, m.chat.id, 'Нажмите на текст, чтобы включить/выключить его.', reply_markup=kb)


@bot.message_handler(commands=['givetext'])
def givetextt(m):
    try:
        if m.from_user.id not in [pasyuk_id, novice_alex_id]:
            return
        user = users.find_one({'id': m.from_user.id})
        if user == None:
            users.insert_one(createuser2(m.from_user))
            user = users.find_one({'id': m.from_user.id})
        try:
            user['customtexts']
        except:
            users.update_one({'id': user['id']}, {'$set': {'customtexts': {}}})
        try:
            text = m.text.split('?')[1]
            user2 = users.find_one({'id': m.reply_to_message.from_user.id})
        except:
            sendm(bot, m.chat.id,
                             'Напишите название текста ответом на сообщение и следующим способом:\n/givetext ?название_текста')
            return
        users.update_one({'id': user2['id']}, {'$set': {'customtexts.' + text: True}})
        sendm(bot, m.chat.id, m.reply_to_message.from_user.first_name + ' получил ' + text)
    except:
        sendm(bot, pasyuk_id, traceback.format_exc())


@bot.message_handler(commands=['flee'])
def fleee(m):
    if m.chat.id not in games:
        sendm(bot, m.chat.id, 'Игра ещё не была создана (/v_prepare)!')
        return
    game = games[m.chat.id]
    if game['started'] == True:
        sendm(bot, m.chat.id, 'Игра уже в процессе!')
        return
    if m.from_user.id not in game['players']:
        sendm(bot, m.chat.id, 'Вы не в игре!')
        return
    del game['players'][m.from_user.id]
    newleaderchoice = []
    for ids in game['players']:
        player = game['players'][ids]
        if player['team'] == m.from_user.id:
            newleaderchoice.append(player['id'])
    if len(newleaderchoice) > 0:
        newleader = random.choice(newleaderchoice)
        for ids in game['players']:
            player = game['players'][ids]
            if player['team'] == m.from_user.id:
                player['team'] = newleader
    sendm(bot, m.chat.id, m.from_user.first_name + ' сбежал!')


@bot.message_handler(commands=['del_game'])
def delgame(m):
    try:
        try:
            chatid = int(m.text.split(' ')[1])
        except:
            chatid = m.chat.id
        if chatid not in games:
            sendm(bot, m.chat.id, 'Игры в выбранном чате не существует!')
            return
        game = games[chatid]
        if m.from_user.id != game['creator'] and m.from_user.id != pasyuk_id and m.from_user.id != 441399484:
            sendm(bot, m.chat.id, 'Только создатель партии может удалить её!')
            return
        if not game['dungeon'] and m.from_user.id != 441399484:
            only_npc = True
            for ids in game["players"]:
                target = game["players"][ids]
                if not target["dead"] and target["controller"] != "bot":
                    only_npc = False
                    break
            if not only_npc:
                sendm(bot, m.chat.id, 'Можно удалять только данжи и игры, в которых нет игроков!')
                return
        try:
            game['timer'].cancel()
        except:
            pass
        for ids in game['alltimers']:
            try:
                ids.cancel()
            except:
                pass
        del games[game['id']]
        sendm(bot, m.chat.id, 'Игра в чате ' + str(chatid) + ' удалена!')
    except:
        sendm(bot, m.chat.id, 'Error')
        sendm(bot, pasyuk_id, traceback.format_exc())


@bot.message_handler(commands=['v_prepare'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к игре запущена! /v_join для присоединения, /v_go для запуска.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['duel_rules'])
def duelrules(m):
    text = ''
    text += '*Правила дуэли на рапирах:*\n\n*1.* Рапира тратит 2 энергии за атаку. Рапира наносит 1 урон за каждые 2 единицы энергии атакующего, с округлением '
    text += 'в большую сторону. Пример: имея 1 или 2 энергии, вы наносите 1 урон. 3 или 4 энергии - 2 урона. 5 или 6 энергии - 3 урона.\n\n'
    text += '*2.* Если вам нанесли урона больше, чем нанесли вы, то соперник не теряет ХП от вашей атаки.\n\n'
    text += '*3.* Если у вас 4 или меньше энергии, перекат соперника сработает, заставив вас промахнуться. Иначе снизит ваш урон на 2.\n\n'
    text += '*4.* У каждого игрока из предметов есть адреналин и флэшка. Из способностей - генератор щитов и вор.\n\n'
    text += '*5.* Перезарядка генератора щитов - 5 ходов, перезарядка переката - 5 ходов, перезарядка вора - 3 хода.\n\n'
    text += '*6.* Сама по себе рапира не промахивается, хотя в меню персонажа написан шанс попадания. Шанс попадания рапиры по врагу - 100%, если тот не перекатывается '
    text += 'и если у вас больше, чем 0 энергии. Если же враг перекатывается - смотрите пункт 3.'
    sendm(bot, m.chat.id, text, reply_to_message_id=m.message_id, parse_mode='markdown')


@bot.message_handler(commands=['v_pureduel'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['pureduel'] = True
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к дуэли на рапирах запущена! /v_join для присоединения. Правила режима: /duel_rules. Командный режим: ' +
                         '/v_pureduel_teams. Статистика по режиму: /v_stats_pureduels')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

def get_pokemon_daytime():
    timenow = datetime.now()
    hournow = timenow.hour
    minutenow = timenow.minute
    if minutenow >= 0 and minutenow <= 15:
        daytime = 'morning'
    elif minutenow >= 16 and minutenow <= 30:
        daytime = 'day'
    elif minutenow >= 31 and minutenow <= 45:
        daytime = 'evening'
    elif minutenow >= 46 and minutenow <= 60:
        daytime = 'night'
    return daytime

def get_pokemon_daytime_text(x):
    y = 'None'
    if x == 'morning':
        y = 'утро'
    elif x == 'day':
        y = 'день'
    elif x == 'evening':
        y = 'вечер'
    elif x == 'night':
        y = 'ночь'
    return y


@bot.message_handler(commands=['v_pokemonhunt'])
def startgame(m):
    return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['pokemonhunt'] = True
        p_daytime = get_pokemon_daytime()
        game['pokemon_daytime'] = p_daytime
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к ловле крыс запущена! /v_join для присоединения. В мире крыс сейчас: '+get_pokemon_daytime_text(p_daytime))
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

#import pickle
#from pathlib import Path

actlist = ['attack', 'adrenaline', 'perekat', 'reload', 'flash', 'vor', 'shield']

def createdemons():
    return
    global demon_amount
    demons = {}
    for i in range(demon_amount):
        demon = {}
        demon['pattern'] = {}
        demon['score'] = 0
        demon['number'] = i
        for i1 in range(6):
            for i2 in range(4):
                for i3 in range(2):
                    for i4 in range(2):
                        for i5 in range(2):
                            for i6 in range(2):
                                for i7 in range(2):
                                    for i8 in range(6):
                                        for i9 in range(4):
                                            for i10 in range(2):
                                                for i11 in range(2):
                                                    for i12 in range(2):
                                                        for i13 in range(2):
                                                            for i14 in range(2):
                                                                string = str(i1)+str(i2+1)+str(i3)+str(i4)+str(i5)+str(i6)+str(i7)+str(i8)+str(i9+1)+str(i10)+str(i11)+str(i12)+str(i13)+str(i14)
                                                                demon['pattern'][string] = random.choice(actlist)

        demons.update({i:demon})
        print(i)
    return demons

demon_amount = 10

def infinity_teaching(m):
    global demon_amount
    cycles = 5
    try:
        cycles = int(m.text.split(" ")[1])
    except:
        pass
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['neuralfight'] = True
        game['pureduel_rats'] = True
        game['pureduel'] = True
        game['maxcycle'] = cycles
        i = 1
        while Path('demons_'+str(demon_amount)+'_generation_' + str(i) + '.pickle').is_file():
            i += 1
        if i > 1:
            i -= 1
        if Path('demons_'+str(demon_amount)+'_generation_' + str(i) + '.pickle').is_file():
            with open('demons_'+str(demon_amount)+'_generation_' + str(i) + '.pickle', 'rb') as f:
                demons = pickle.load(f)
        else:
            demons = createdemons()
            with open('demons_'+str(demon_amount)+'_generation_' + str(i) + '.pickle', 'wb') as f:
                pickle.dump(demons, f)
        game['m'] = m
        game['cycle'] = 1
        game['demons'] = demons
        sendm(bot, m.chat.id, 'Инициализирован процесс обучения нейрокрыс поколения '+str(i+1)+'. Количество циклов: ' + str(
            cycles) + '. Количество демонов: ' + str(demon_amount))
        goo(m)
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands=['v_neuralfight'])
def startgame(m):
    return
    if m.from_user.id != 441399484:
        return
    infinity_teaching(m)

@bot.message_handler(commands = ["create_brain"])
def create_brain(m):
    user = users.find_one({"id":m.from_user.id})
    number = 1
    if "brains" not in user:
        users.update_one({"id":user["id"]},{"$set":{"brains":{}}})
    while str(number) in user["brains"]:
        number += 1
    users.update_one({"id":m.from_user.id},{"$set":{"brain_"+str(number):new_brain()}})
    bot.send_message(m.chat.id, "Вы создали мозг! Он лежит в банке под номером "+str(number)+". Чтобы настроить его, нажмите /edit_brain_"+str(number))

def get_brain_kb():
    kb = types.InlineKeyboardMarkup()

@bot.message_handler(func = lambda m: m.text[:12] == "/edit_brain_")
def editbrainn(m):
    user = users.find_one({"id": m.from_user.id})
    bnumber = m.text.split("_")[2]
    try:
        brain = user["brains"][bnumber]
    except:
        numbers = ""
        for ids in user["brains"]:
            numbers += ids+", "
        numbers = numbers[:len(numbers)-2]
        bot.send_message(m.chat.id, "У вас нет такого мозга! Номера банок:\n"+numbers)
    kb = get_brain_kb()

def new_brain():
    return {"conditions":{},
            "triggers":{}}

@bot.message_handler(commands=['v_pureduel_rats_v2'])
def startgame(m):
    return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['pureduel'] = True
        game['pureduel_rats'] = True
        game['pureduel_rats_hard'] = True
        i = 1
        while Path('demons_' + str(demon_amount) + '_generation_' + str(i) + '.pickle').is_file():
            i += 1
        if i > 1:
            i -= 1
        #i = 2
        if Path('demons_' + str(demon_amount) + '_generation_' + str(i) + '.pickle').is_file():
            with open('demons_' + str(demon_amount) + '_generation_' + str(i) + '.pickle', 'rb') as f:
                demons = pickle.load(f)
        for ids in demons:
            best_demon = demons[ids]
            break
        game['fullneuraldemon_final'] = best_demon
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к дуэли на рапирах против последней версии нейросетевой крысы запущена! /v_join для присоединения. Правила режима: /duel_rules. Командный режим: ' +
                         '/v_pureduel_teams. Статистика по режиму: /v_stats_pureduels')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_pureduel_rats'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['pureduel'] = True
        game['pureduel_rats'] = True
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к дуэли на рапирах против крысы запущена! /v_join для присоединения. Правила режима: /duel_rules. Командный режим: ' +
                         '/v_pureduel_teams. Статистика по режиму: /v_stats_pureduels')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_prepare_magic'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.from_user.id != pasyuk_id and m.chat.id != -1001541389947:
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['magictournier'] = True
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к турниру заклинателей запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands=['v_prepare_classic'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['classic_game'] = True
        game['teamplay'] = True
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к классической игре запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_pureduel_teams'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['pureduel'] = True
        game['teamplay'] = True
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к командной дуэли на рапирах запущена! /v_join для присоединения. Правила режима: /duel_rules')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_prepare_allrandom'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        game['allrandom'] = True
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к игре со случайным выбором экипировки запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_prepare_tournier'])
def startgametourn(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.from_user.id != pasyuk_id and m.chat.id not in [-1001541389947, -1001923672063, -1001891312421]:
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        game['tournier'] = True
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к турнирной игре запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_prepare_testgame'])
def startgametourn(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        game['testequipgame'] = True
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к тестовой игре запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands=['v_prepare_anyweapon_tournier'])
def startgametourn(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        game['testequipgame_tournier'] = True
        game['teamplay'] = True
        game['tournier'] = True
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к турнирной игре с любым выбором снаряжения запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_rathunt'])
def startgamerat(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        game['rats'] = True
        try:
            diff = int(m.text.split(' ', 1)[1])
        except:
            diff = 1
        if diff < 1:
            diff = 1
        if diff > 3:
            diff = 3
        game['rat_difficulty'] = diff
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id, 'Подготовка к игре с крысами (сложность: ' + str(
            diff) + ') запущена! /v_join для присоединения.\nПодсказка: теперь вы можете выбрать ' +
                         'сложность крыс (1-3), добавив соответствующее число после ввода команды. Пример:\n/v_rathunt 3')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return



@bot.message_handler(commands=['v_dungeon'])
def startgameratdung(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['dungeon'] = True
        if game['id'] != pasyuk_id:
            game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к подземелью запущена! /v_join для присоединения.\nЗа прохождение всех этажей можно получить уникальный скилл!')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands=['v_deathmatch'])
def startgamedm(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['dm'] = True
        if game['id'] != pasyuk_id:
            game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к битве на смерть запущена! /v_join для присоединения.\nПравила: /rules_dm')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands=['set_skill_amount'])
def setskkamount(m):
    try:
        game = games[m.chat.id]
    except:
        return
    x = bot.get_chat_member(m.chat.id, m.from_user.id)
    if x.status != 'creator' and x.status != 'administrator' and m.from_user.id != pasyuk_id and game[
        'creator'] != m.from_user.id:
        sendm(bot, m.chat.id,
                         'Только пользователь, запустивший игру, или администратор чата могут установить количество скиллов!',
                         reply_to_message_id=m.message_id)
        return
    if game['dungeon']:
        sendm(bot, m.chat.id, 'Нельзя менять число скиллов в подземелье!', reply_to_message_id=m.message_id)
        return
    if game['pureduel']:
        sendm(bot, m.chat.id, 'Нельзя менять число скиллов в дуэли на рапирах!', reply_to_message_id=m.message_id)
        return
    if game['started']:
        sendm(bot, m.chat.id, 'Игра уже идет!')
        return
    try:
        y = int(m.text.split(' ')[1])
    except:
        sendm(bot, m.chat.id, 'Укажите требуемое количество скиллов! Пример команды:\n/set_skill_amount 3',
                         reply_to_message_id=m.message_id)
        return

    if y > 8 and m.from_user.id != pasyuk_id:
        sendm(bot, m.chat.id, 'Максимальное число скиллов - 8!', reply_to_message_id=m.message_id)
        return
    game["dop_skills"] = y
    game["new_limit"] = True
    sendm(bot, m.chat.id, 'Установлено число скиллов для игры: '+str(y), reply_to_message_id=m.message_id)
    

@bot.message_handler(commands=['v_dungeon_ghoul'])
def startgameratdung(m):
    # if m.from_user.id != pasyuk_id and m.from_user.id != 197216910:
    #    return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['dungeon'] = True
        game['dungeon_type'] = 'ghoul'
        if game['id'] != pasyuk_id:
            game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к подземелью с вурдалаками запущена! /v_join для присоединения.\nЗа прохождение всех этажей можно что-то получить.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_dungeon_dark'])
def startgameratdung(m):
    # if m.from_user.id != pasyuk_id and m.from_user.id != 197216910 and m.from_user.id != 94197300:
    #    return
    #if m.chat.id == -1001516877618:
    #    sendm(bot, m.chat.id, 'Подземелье тьмы в этом чате временно недоступно, добавьте бота в другой чат!')
    #    return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['dungeon'] = True
        game['dungeon_type'] = 'dark'
        if game['id'] != pasyuk_id:
            game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к походу во тьму запущена! /v\_join для присоединения.\nОколо входа вы видите табличку:\n' + \
                         '*Инфо.* За прохождение всех этажей... \[надпись скрыта тенью]', parse_mode='markdown')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands = ['hell_first_run'])
def hellfrunn(m):
    if m.chat.id not in games:
        return
    game = games[m.chat.id]
    if game['started']:
        sendm(bot, m.chat.id, 'Игра уже началась!')
        return
    if game['creator'] != m.from_user.id:
        sendm(bot, m.chat.id, 'Не вы создатель лобби!')
        return
    if game['simulate_first_run'] == False:
        game['simulate_first_run'] = True
        sendm(bot, m.chat.id, '💬Аластор|❤️‍🔥: Договорились!')

@bot.message_handler(commands=['v_dungeon_hell'])
def startgameratdungh(m):
    # if m.from_user.id != pasyuk_id and m.from_user.id != 197216910 and m.from_user.id != 94197300:
    #    return
    #if m.chat.id == -1001516877618:
    #    sendm(bot, m.chat.id, 'Подземелье тьмы в этом чате временно недоступно, добавьте бота в другой чат!')
    #    return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['dungeon'] = True
        game['dungeon_type'] = 'hell'
        if game['id'] != pasyuk_id:
            game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к походу в 🔥ад🔥 запущена! /v\_join для присоединения.', parse_mode='markdown')
        if m.from_user.id in has_hell_reward:
            sendm(bot, m.chat.id, '💬Аластор|❤️‍🔥: И снова приветствую в аду! Если желаете встретиться, как будто в первый раз - нажмите /hell_first_run и я сделаю вид, что мы никогда не встречались!')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands=['v_dungeon_winter'])
def startgameratdung(m):
    return
    # if m.from_user.id != pasyuk_id and m.from_user.id != 197216910 and m.from_user.id != 94197300:
    #    return
    #if m.chat.id == -1001516877618:
    #    sendm(bot, m.chat.id, 'Подземелье тьмы в этом чате временно недоступно, добавьте бота в другой чат!')
    #    return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['dungeon'] = True
        game['dungeon_type'] = 'winter'
        if game['id'] != pasyuk_id:
            game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к походу в ледяной замок запущена! /v\_join для присоединения.', parse_mode='markdown')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands=['v_dungeon_dragon'])
def startgameratdungd(m):
    # if m.from_user.id != pasyuk_id and m.from_user.id != 197216910 and m.from_user.id != 94197300:
    #    return
    #if m.chat.id == -1001516877618:
    #    sendm(bot, m.chat.id, 'Подземелье тьмы в этом чате временно недоступно, добавьте бота в другой чат!')
    #    return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['dungeon'] = True
        game['dungeon_type'] = 'dragon'
        if game['id'] != pasyuk_id:
            game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к походу в замок дракона запущена! /v\_join для присоединения.', parse_mode='markdown')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return

@bot.message_handler(commands=['v_dungeon_roulette'])
def startgameratdung(m):
    return
    # if m.from_user.id != pasyuk_id and m.from_user.id != 197216910 and m.from_user.id != 94197300:
    #    return
    #if m.chat.id == -1001516877618:
    #    sendm(bot, m.chat.id, 'Подземелье тьмы в этом чате временно недоступно, добавьте бота в другой чат!')
    #    return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        game['dungeon'] = True
        game['dungeon_type'] = 'roulette'
        if game['id'] != pasyuk_id:
            game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        sendm(bot, m.chat.id,
                         'Подготовка к игре в русскую рулетку запущена... /v\_join для присоединения.', parse_mode='markdown')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


def cancelgame(gid):
    try:
        game = games[gid]
        if not game['started']:
            if not game['botfight']:
                del games[gid]
                sendm(bot, gid, 'Прошло 5 минут, игра была удалена.')
            else:
                goo(chatid=game['id'])
    except:
        print(traceback.format_exc())


@bot.message_handler(commands=['v_prepare_teams'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        game['teamplay'] = True
        sendm(bot, m.chat.id, 'Подготовка к командной игре запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_prepare_teams_tournier'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        game['teamplay'] = True
        game['tournier'] = True
        sendm(bot, m.chat.id, 'Подготовка к командной турнирной игре запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_prepare_allrandom_teams'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        game['teamplay'] = True
        game['allrandom'] = True
        sendm(bot, m.chat.id,
                         'Подготовка к командной игре со случайной экипировкой запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_bossfight'])
def startgame(m):
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        game['bossfight'] = True
        sendm(bot, m.chat.id, 'Подготовка к битве с боссом запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


@bot.message_handler(commands=['v_rp_fight'])
def startgame(m):
    # sendm(bot, m.chat.id, 'Это говно блять не работает, потом починю эту хуйню ебучую, пошел нахуй со своим бесконечным циклом ПИДОРАС')
    # return
    if not allowgames:
        sendm(bot, m.chat.id, 'Проводятся технические работы, игры временно недоступны!')
        return
    if m.chat.id not in games:
        game = creategame(m)
        games.update(game)
        game = games[m.chat.id]
        if spectateallgames:
            if game['id'] != pasyuk_id:
                game['spectators'].append(pasyuk_id)
        t = threading.Timer(300, cancelgame, args=[game['id']])
        t.start()
        game['canceltimer'] = t
        game['rp_fight'] = True
        sendm(bot, m.chat.id, 'Подготовка к рп-бою запущена! /v_join для присоединения.')
    else:
        sendm(bot, m.chat.id, 'В этом чате уже есть игра!')
        return


def getrpprofile():
    return {
        'hp': 8,
        'maxhp': 8,
        'energy': 5,
        'maxenergy': 5,
        'dmglimit': 6,
        'maxdmglimit': 6,
        'inventory': [],
        'skills': [],
        'weapon': None
    }


@bot.message_handler(commands=['give_rp_profile'])
def rpprofilee(m):
    if m.from_user.id != pasyuk_id:
        return
    if m.reply_to_message == None:
        sendm(bot, m.chat.id, 'Ответьте командой на сообщение!')
        return
    user = users.find_one({'id': m.reply_to_message.from_user.id})
    if user == None:
        sendm(bot, m.chat.id, 'User = None!')
        return
    try:
        user['rp_profile']
        sendm(bot, m.chat.id, 'У пользователя уже есть РП-профиль!')
        return
    except:
        pass
    users.update_one({'id': user['id']}, {'$set': {'rp_profile': getrpprofile()}})
    sendm(bot, m.chat.id,
                     'Теперь у ' + m.reply_to_message.from_user.first_name + ' есть рп-профиль! Посмотреть - /rp_profile')


@bot.message_handler(commands=['rp_profile'])
def rpprofilee(m):
    user = users.find_one({'id': m.from_user.id})
    if user == None:
        sendm(bot, m.chat.id, 'User = None!')
        return
    try:
        user['rp_profile']
    except:
        sendm(bot, m.chat.id, 'У вас нет РП-профиля!')
        return
    profile = user['rp_profile']
    text = 'Профиль ' + m.from_user.first_name + ':\n'
    text += '♥️ХП: ' + str(profile['hp']) + '/' + str(profile['maxhp']) + '\n'
    text += '⚡️Энергия: ' + str(profile['energy']) + '/' + str(profile['maxenergy']) + '\n'
    text += '💔Лимит урона: ' + str(profile['dmglimit']) + '/' + str(profile['maxdmglimit']) + '\n'
    text += '💥Оружие: ' + str(profile['weapon']) + '\n'
    skilltext = '➕Способности: '
    for ids in profile['skills']:
        skilltext += getname[ids] + ', '
    if len(profile['skills']) > 0:
        skilltext = skilltext[:len(skilltext) - 2]
    if m.chat.type != 'private':
        skilltext = '➕Способности: скрыто для публичного чата. Используйте команду в ЛС.'
    inventorytext = '📦Инвентарь: '
    for ids in profile['inventory']:
        inventorytext += getname(ids) + ', '
    if len(profile['inventory']) > 0:
        inventorytext = inventorytext[:len(inventorytext) - 2]
    text += skilltext + '\n'
    text += inventorytext + '\n'
    sendm(bot, m.chat.id, text)

@bot.message_handler(commands = ["knight_de"])
def kde(m):
    if m.from_user.id != pasyuk_2_id and m.from_user.id != pasyuk_id:
        return
    try:
        game = games[m.chat.id]
    except:
        bot.send_message(m.chat.id, "no game.")
        return
    game["knight_need_dark_energy"] = True
    game["dungeonlvl"] = 2
    bot.send_message(m.chat.id, "ok")

@bot.message_handler(commands=['set_rp_stat'])
def rpprofileesetstats(m):
    if m.from_user.id != pasyuk_id:
        return
    user = users.find_one({'id': m.reply_to_message.from_user.id})
    if user == None:
        sendm(bot, m.chat.id, 'User = None!')
        return
    try:
        user['rp_profile']
    except:
        sendm(bot, m.chat.id, 'У пользователя нет РП-профиля!')
        return
    profile = user['rp_profile']
    try:
        stat = m.text.split(' ')[1]
    except:
        sendm(bot, m.chat.id, 'Укажите характеристику!')
        return
    try:
        amount = int(m.text.split(' ')[2])
    except:
        try:
            amount = m.text.split(' ')[2]
        except:
            sendm(bot, m.chat.id, 'Укажите значение!')
            return
    if stat in user['rp_profile']:
        users.update_one({'id': user['id']}, {'$set': {stat: amount}})
        sendm(bot, m.chat.id, 'Значение характеристики "' + stat + '" установлено на ' + str(amount) + '!')
    else:
        sendm(bot, m.chat.id, 'Характеристики "' + stat + '" не существует!')


@bot.message_handler(commands=['set_rp_weapon'])
def rpprofileesetstats(m):
    try:
        if m.from_user.id != pasyuk_id:
            return
        user = users.find_one({'id': m.reply_to_message.from_user.id})
        if user == None:
            sendm(bot, m.chat.id, 'User = None!')
            return
        try:
            user['rp_profile']
        except:
            sendm(bot, m.chat.id, 'У пользователя нет РП-профиля!')
            return
        profile = user['rp_profile']
        try:
            w = m.text.split('?')[1]
        except:
            sendm(bot, m.chat.id, 'Укажите название оружия! Пример:\n/set_rp_weapon ?Название оружия')
            return
        users.update_one({'id': user['id']}, {'$set': {'rp_profile.weapon': w}})
        sendm(bot, m.chat.id, 'Теперь у ' + user['name'] + ' оружие ' + w + '!')
    except:
        sendm(bot, m.chat.id, traceback.format_exc())


@bot.message_handler(commands=['dmg'])
def dmggggt(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        game = games[m.chat.id]
        dmg = int(m.text.split(' ')[1])
    except:
        return
    p = []
    for ids in game['players']:
        p.append(game['players'][ids])
    x = random.choice(p)
    x['outgoingdmgs'].append([x['id'], dmg])
    x['incomingdmgs'].append([x['id'], dmg])
    sendm(bot, m.chat.id, 'dmg')


@bot.message_handler(commands=['dmg_to_npc'])
def dmggggt(m):
    if m.from_user.id != pasyuk_id and m.from_user.id != pasyuk_2_id:
        return
    try:
        game = games[m.chat.id]
        dmg = int(m.text.split(' ')[1])
    except:
        return
    for ids in game['players']:
        if game['players'][ids]['controller'] == 'bot':
            game['players'][ids]['outgoingdmgs'].append([game['players'][ids]['id'], dmg])
            game['players'][ids]['incomingdmgs'].append([game['players'][ids]['id'], dmg])
    sendm(bot, m.chat.id, 'dmg')


@bot.message_handler(commands=['death_to_npc'])
def dmggggt(m):
    if m.from_user.id != pasyuk_id and m.from_user.id != pasyuk_2_id:
        return
    try:
        game = games[m.chat.id]
    except:
        return
    for ids in game['players']:
        if game['players'][ids]['controller'] == 'bot':
            game['players'][ids]['dead'] = True
    sendm(bot, m.chat.id, 'dmg')


@bot.message_handler(commands=['getabil'])
def dmggggt(m):
    try:
        if m.from_user.id != pasyuk_id and m.from_user.id != 197216910:
            return
        try:
            game = games[m.chat.id]
            abil = m.text.split(' ')[1]
        except:
            return
        try:
            if m.reply_to_message == None:
                x = game['players'][m.from_user.id]
                x['skills'].append(abil)
                sendm(bot, m.chat.id, abil + ' получена.')
            else:
                x = game['players'][m.reply_to_message.from_user.id]
                x['skills'].append(abil)
                sendm(bot, m.chat.id, abil + ' получена для ' + m.reply_to_message.from_user.first_name + '.')
        except:
            pass
    except:
        sendm(bot, m.chat.id, 'Ошибка!')


@bot.message_handler(commands=['test'])
def testttt(m):
    if m.from_user.id not in [pasyuk_id]:
        return
    try:
        game = games[m.chat.id]
        game['test'] = True
        sendm(bot, m.chat.id, 'test')
    except:
        return

@bot.message_handler(commands = ["get_skill_list"])
def skilllllist(m):
    threading.Thread(target = getskilllistfunc, args = [m]).start()

def getskilllistfunc(m):
    try:
        text = ""
        stat = duelstats.find_one({})
        for ids in stat["skills"]:
            text += "`"+ids+"`, "
        text = text[:len(text)-2]
        bot.send_message(m.chat.id, text, parse_mode = "markdown")
    except:
        bot.send_message(m.chat.id, "Ошибка.")
        bot.send_message(pasyuk_id, traceback.format_exc())

def getstatsfunc(m):
    try:
        stat = duelstats.find_one({})
        msgerror = "Ошибка формата. Пример:\n/get_stats weapon кувалда\n/get_stats weapon Кувалда\n/get_stats skill bicepc\n\nПолучить список названий скиллов - /get_skill_list"
        try:
            stype = m.text.split(" ")[1]
        except:
            bot.send_message(m.chat.id, msgerror)
            return
        try:
            name = m.text.split(" ", 2)[2]
        except:
            bot.send_message(m.chat.id, msgerror)
            return
        text = ""
        if stype == "weapon":
            for ids in stat["weapons"]:
                if ids.lower() == name.lower():
                    winperc = round((stat["weapons"][ids]["wins"]/stat["weapons"][ids]["games"])*100, 3)
                    text += "⚔️|Статистика оружия "+ids+":\n"
                    text += "🏆|Победы: "+str(stat["weapons"][ids]["wins"])+"\n"
                    text += "💔|Поражения: "+str(stat["weapons"][ids]["games"]-stat["weapons"][ids]["wins"]-stat["weapons"][ids]["ties"])+"\n"
                    text += "❓|Ничьи: "+str(stat["weapons"][ids]["ties"])+"\n\n"
                    text += "🎲|Число игр: "+str(stat["weapons"][ids]["games"])+"\n"
                    text += "➗|Процент побед: "+str(winperc)+"\n"
                    bot.send_message(m.chat.id, text, parse_mode = "markdown")
                    return
            bot.send_message(m.chat.id, "Оружие "+name+" не найдено!")
            return
        elif stype == "skill":
            for ids in stat["skills"]:
                if ids.lower() == name.lower():
                    winperc = round((stat["skills"][ids]["wins"]/stat["skills"][ids]["games"])*100, 3)
                    text += "⚔️|Статистика скилла "+ids.replace("_", "\_")+":\n"
                    text += "🏆|Победы: "+str(stat["skills"][ids]["wins"])+"\n"
                    text += "💔|Поражения: "+str(stat["skills"][ids]["games"]-stat["skills"][ids]["wins"]-stat["skills"][ids]["ties"])+"\n"
                    text += "❓|Ничьи: "+str(stat["skills"][ids]["ties"])+"\n\n"
                    text += "🎲|Число игр: "+str(stat["skills"][ids]["games"])+"\n"
                    text += "➗|Процент побед: "+str(winperc)+"\n"
                    bot.send_message(m.chat.id, text, parse_mode = "markdown")
                    return
            bot.send_message(m.chat.id, "Скилл "+name+" не найден!")
            return
    except:
        bot.send_message(m.chat.id, "Ошибка.")
        bot.send_message(pasyuk_id, traceback.format_exc())

@bot.message_handler(commands = ["get_stats"])
def get_statss(m):
    threading.Thread(target = getstatsfunc, args = [m]).start()


@bot.message_handler(commands=['spectate'])
def spectateee(m):
    if m.from_user.id != pasyuk_id:
        return
    try:
        game = games[int(m.text.split(' ')[1])]
    except:
        sendm(bot, m.chat.id, 'Игры не существует!')
        return
    if m.chat.id not in game['spectators']:
        game['spectators'].append(m.chat.id)
        sendm(bot, m.chat.id, 'Запущена трансляция игры!', reply_to_message_id=m.message_id)
    else:
        sendm(bot, m.chat.id, 'Игра уже транслируется!', reply_to_message_id=m.message_id)


def get_cw_rat_skills(skills_amount, sum_lvl):
    if skills_amount == 0:
        return []
    skills = cwratskills.copy()
    skills_to_return = []
    lvls = {}
    middle = int(sum_lvl / skills_amount)
    doplvl = sum_lvl - (middle * skills_amount)
    for i in range(skills_amount):
        lvls.update({i: middle})
    while doplvl > 0:
        # sendm(cwbot, pasyuk_id, str(lvls))
        # time.sleep(1)
        key = random.choice(list(lvls))
        ii = 0
        while lvls[key] >= 3:
            key = random.choice(list(lvls))
            ii += 1
            if ii > 100:
                break
            # sendm(cwbot, pasyuk_id, "b")
        lvls[key] += 1
        doplvl -= 1
    skillnames = []
    for ids in lvls:
        skill = random.choice(skills)
        skilllvl = int(skill.split('?')[1])
        skillname = skill.split('?')[0]
        ii = 0
        while skill in skills_to_return or skilllvl != lvls[ids] or skillname in skillnames:
            ii += 1
            if ii > 200:
                break
            # sendm(cwbot, pasyuk_id, 'skill='+str(skill)+'\nskills_to_return='+str(skills_to_return)+'\nlvls[ids]='+str(lvls[ids]))
            # time.sleep(1)
            skill = random.choice(skills)
            skilllvl = int(skill.split('?')[1])
            skillname = skill.split('?')[0]
            if len(skills_to_return) >= 8:
                break
        skills_to_return.append(skill)
        skillnames.append(skillname)
    sendm(cwbot, pasyuk_id, 'sum_lvl=' + str(sum_lvl) + ', allskills=\n' + str(skills_to_return))
    return skills_to_return


def get_cw_rat_weapon(rat_weaponlvl, wname = None, blockedw = []):
    ratweapons = cwratweapons.copy()
    ratweapons_allowed = []
    for ids in ratweapons:
        w = ids()
        if w.name not in blockedw:
            if w.lvl == rat_weaponlvl:
                if wname != None:
                    if w.name == wname:
                        ratweapons_allowed.append(ids)
                else:
                    ratweapons_allowed.append(ids)
    ratw = random.choice(ratweapons_allowed)()
    return ratw


def get_cw_rat_items(rat_item_amount):
    ratitems = cwratitems.copy()
    items = []
    ii = 0
    while len(items) < rat_item_amount:
        if len(items) >= len(ratitems):
            break
        ii += 1
        if ii > 200:
            break
        x = random.choice(ratitems)
        if x not in items:
            items.append(x)
    return items


@bot.message_handler(commands=['v_go'])
def go(m):
    goo(m)


def goo(m=None, chatid=None, game=None, bot=bot):
    try:
        if m == None:
            chatid = chatid
        else:
            chatid = m.chat.id
        if game == None:
            if chatid not in games:
                sendm(bot, chatid, 'Игра ещё не была создана (/v_prepare)!')
                return
            if not allowgames:
                sendm(bot, chatid, 'Проводятся технические работы, игры временно недоступны!')
                return
            game = games[chatid]
        if not game['castlefight']:
            if game['started']:
                sendm(bot, chatid, 'Игра уже идёт!')
                # game['started'] = False
                return
        # game['started'] = True
        if not game['castlefight']:
            for ids in game['players']:
                player = game['players'][ids]
                if player['team'] == None:
                    sendm(bot, chatid, 'Не все игроки выбрали команду!')
                    # game['started'] = False
                    return
        minimum = 2
        if game['rats']:
            minimum = 1
        if game['bossfight']:
            minimum = 2
        if game['dungeon']:
            minimum = 1
        if game['testequipgame']:
            minimum = 1
        if game['testequipgame_tournier']:
            minimum = 2
        if game['botfight']:
            minimum = 0
        if game['castlefight']:
            minimum = 0
        if game['cwrats']:
            minimum = 1
        if game['cwduel']:
            minimum = 2
        if game['cwduelrats']:
            minimum = 1
        if game['cwbar']:
            minimum = 0
        if game['pureduel_rats']:
            minimum = 1
        if game['neuralfight']:
            minimum = 0
        if game['pokemonhunt']:
            minimum = 1

        if len(game['players']) < minimum:
            sendm(bot, chatid, 'Недостаточно игроков!')
            # game['started'] = False
            return
        if not game['pureduel_rats']:
            if game['pureduel'] and game['teamplay'] and (len(game['players']) % 2 != 0):
                sendm(bot, chatid, 'Для командной битвы на рапирах нужно четное число игроков!')
                # game['started'] = False
                return
        game['started'] = True
        time.sleep(3)
        if game['bossfight']:
            players = []
            for ids in game['players']:
                players.append(game['players'][ids]['id'])
                game['players'][ids]['boss'] = True  ################################
            boss = random.choice(players)
            game['players'][boss]['boss'] = True
        if game['bossfight']:
            team = None
            for ids in game['players']:
                player = game['players'][ids]
                if not player['boss']:
                    team = player['team']
                    break
            for ids in game['players']:
                player = game['players'][ids]
                if not player['boss']:
                    player['team'] = team
        if game['dungeon']:
            for ids in game['players']:
                team = game['players'][ids]['team']
                break
            for ids in game['players']:
                game['players'][ids]['team'] = team
            if game['dungeon_type'] == 'rhino':
                ratamount = 0
                rats = []
                ratamount = len(game['players'])
                i = 0
                while i < ratamount:
                    rat = summon_rat(game, len(rats))
                    rats.append(rat)
                    i += 1
                for ids in rats:
                    game['players'].update(ids)
            elif game['dungeon_type'] == 'ghoul':
                weakskeleamount = 0
                weakskeles = []
                weakskeleamount = len(game['players'])
                i = 0
                while i < weakskeleamount:
                    weakskele = summon_weakskele(game, len(weakskeles))
                    weakskeles.append(weakskele)
                    i += 1
                # if random.randint(1, 100) <= 50:
                #    weakskele = summon_weakskele(game, len(weakskeles))
                #    weakskeles.append(weakskele)
                for ids in weakskeles:
                    game['players'].update(ids)
            elif game['dungeon_type'] == 'dark':
                darkratamount = 0
                darkrats = []
                darkratamount = len(game['players'])
                i = 0
                while i < darkratamount:
                    darkrat = summon_darkrat(game, len(darkrats))
                    darkrats.append(darkrat)
                    i += 1
                for ids in darkrats:
                    game['players'].update(ids)
            elif game['dungeon_type'] == 'winter':
                snowmanamount = 0
                snowmans = []
                snowmanamount = len(game['players'])
                i = 0
                while i < snowmanamount:
                    snowman = summon_eyedemon(game, len(snowmans))
                    snowmans.append(snowman)
                    i += 1
                for ids in snowmans:
                    game['players'].update(ids)
            elif game['dungeon_type'] == 'hell':
                eyedemon = 0
                eyedemons = []
                eyedemonamount = len(game['players'])
                i = 0
                while i < eyedemonamount:
                    eyedemon = summon_eyedemon(game, len(eyedemons))
                    eyedemons.append(eyedemon)
                    i += 1
                for ids in eyedemons:
                    game['players'].update(ids)
            elif game['dungeon_type'] == 'dragon':
                rhino = 0
                rhinos = []
                rhinoamount = len(game['players'])
                i = 0
                while i < rhinoamount:
                    rhino = summon_small_rhino(game, len(rhinos))
                    rhinos.append(rhino)
                    i += 1
                for ids in rhinos:
                    game['players'].update(ids)
            elif game['dungeon_type'] == "roulette":
                demon = summon_demon(game)
                game['players'].update(demon)
        if game['botfight']:
            btypes = ['skelet', 'rat', 'ghoul', 'treant', 'worm', 'demon', 'rhino', 'knight', 'mini-rhino', 'dragon']
            weights = [100, 100, 100, 100, 100, 100, 50, 50, 75, 75]
            botamount = random.randint(2, len(btypes)+2)
            botstogame = []
            skeletss = 0
            ratss = 0
            ghoulss = 0
            rhinoss = 0
            treantss = 0
            wormss = 0
            demonss = 0
            knightss = 0
            mini_rhinoss = 0
            dragonss = 0
            while len(botstogame) < botamount:
                btype = random.choices(btypes, weights, k=1)[0]
                if btype == 'rat':
                    rat = summon_rat(game, ratss, team=getrandomid())
                    for idss in rat:
                        x = idss
                        break
                    rat[x]['team'] = rat[x]['id']
                    botstogame.append(rat)
                    ratss += 1
                if btype == 'skelet':
                    skeleton = summon_dung_skeleton(game, skeletss, team=getrandomid())
                    for idss in skeleton:
                        x = idss
                        break
                    skeleton[x]['team'] = skeleton[x]['id']
                    botstogame.append(skeleton)
                    skeletss += 1
                if btype == 'rhino':
                    rhino = summon_rhino(game, rhinoss, team=getrandomid())
                    for idss in rhino:
                        x = idss
                        break
                    rhino[x]['team'] = rhino[x]['id']
                    botstogame.append(rhino)
                    rhinoss += 1
                if btype == 'ghoul':
                    ghoul = summon_ghoul(game, ghoulss, team=getrandomid(), hp=4)
                    for idss in ghoul:
                        x = idss
                        break
                    ghoul[x]['team'] = ghoul[x]['id']
                    botstogame.append(ghoul)
                    ghoulss += 1
                if btype == 'treant':
                    treant = summon_treant(game, None, treantss, team=getrandomid(), hp=4)
                    for idss in treant:
                        x = idss
                        break
                    treant[x]['team'] = treant[x]['id']
                    botstogame.append(treant)
                    treantss += 1
                if btype == 'worm':
                    worm = summon_magmaworm(game, wormss, hp=4)
                    for idss in worm:
                        x = idss
                        break
                    worm[x]['team'] = worm[x]['id']
                    botstogame.append(worm)
                    wormss += 1
                if btype == 'demon':
                    demon = summon_eyedemon(game, demonss, hp=4)
                    for idss in demon:
                        x = idss
                        break
                    demon[x]['team'] = demon[x]['id']
                    botstogame.append(demon)
                    demonss += 1
                if btype == 'knight':
                    knight = summon_knight(game, knightss, randomid=True)
                    for idss in knight:
                        x = idss
                        break
                    knight[x]['team'] = knight[x]['id']
                    botstogame.append(knight)
                    knightss += 1
                if btype == 'mini-rhino':
                    knight = summon_small_rhino(game, mini_rhinoss)
                    for idss in knight:
                        x = idss
                        break
                    knight[x]['team'] = knight[x]['id']
                    botstogame.append(knight)
                    mini_rhinoss += 1
                if btype == 'dragon':
                    knight = summon_dragon(game, dragonss)
                    for idss in knight:
                        x = idss
                        break
                    knight[x]['team'] = knight[x]['id']
                    botstogame.append(knight)
                    dragonss += 1
            for ids in botstogame:
                game['players'].update(ids)
        if game['classic_game']:
            for ids in game['players']:
                player = game['players'][ids]
                player['customtexts'] = {}
        if game['testequipgame']:
            dummys = []
            dummyamount = len(game['players'])
            i = 0
            while i < dummyamount:
                dummy = summon_dummy(game, len(dummys))
                dummys.append(dummy)
                i += 1
            for ids in dummys:
                game['players'].update(ids)
        if game['cwrats'] or game['cwduelrats']:
            ratamount = 0
            rats = []
            ratamount = 1
            i = 0
            while i < ratamount:
                rat = summon_rat(game, len(rats))
                rats.append(rat)
                i += 1
            for ids in game['players']:
                player = game['players'][ids]
                break
            for ids in rats:
                for idss in ids:
                    rat = ids[idss]
                    break

                ratlvl = player['lvl']
                buff = 0
                buffen = 0
                if ratlvl >= 10:
                    buff += 1
                    buffen += 1
                if ratlvl >= 25:
                    buff += 1
                if ratlvl >= 40:
                    buff += 1
                rat_skillnumber = len(player['skills'])
                rat_weaponlvl = player['weapon'].lvl
                rat_skill_lvl_summary = 0
                for idss in player['skills']:
                    lvl = int(idss.split('?')[1])
                    rat_skill_lvl_summary += lvl
                rat_item_amount = len(player['inventory'])
                rat_skills = get_cw_rat_skills(rat_skillnumber, rat_skill_lvl_summary)
                rat_weapon = get_cw_rat_weapon(rat_weaponlvl)

                rat_items = get_cw_rat_items(rat_item_amount)

                rat_type_chance = random.randint(1, 100)

                if rat_type_chance <= 15:
                    special_rat = random.choice(["Золотая крыса", "Призрачная крыса"])
                    if special_rat == "Золотая крыса":
                        rat['name'] = "Золотая крыса|🐭💰"
                        rat['hp'] = 3 + buff + 1
                        rat['maxhp'] = 3 + buff + 1
                        rat['dmglimit'] = 5 + buff + 10
                        rat['maxdmglimit'] = 5 + buff + 10
                    else:
                        rat['name'] = "Призрачная крыса|🐭👻"
                        rat['hp'] = 3 + buff + 2
                        rat['maxhp'] = 3 + buff + 2

                else:
                    rat['name'] = "Страшная крыса|🐭🎃"
                    rat['hp'] = 3 + buff
                    rat['maxhp'] = 3 + buff
                    rat['dmglimit'] = 5 + buff
                    rat['maxdmglimit'] = 5 + buff


                rat['energy'] = 4 + buffen
                rat['maxenergy'] = 4 + buffen
                rat['weapon'] = rat_weapon
                rat['skills'] = rat_skills
                rat['inventory'] = rat_items
                rat['team'] = 'rats'

                game['players'].update(ids)

        if game['cwduel']:
            pass
        if game['dm']:
            game['sum_dm_deaths'] = 0
            for ids in game["players"]:
                game['sum_dm_deaths'] += 3
                game["players"][ids]["count_as_dm"] = True
                
        for ids in game['players']:
            player = game['players'][ids]
            player['stage'] = 'selectweapon'
        if chatid != botfights:
            if not game['castlefight'] and not game['neuralfight']:
                if not game['cwrats'] and not game['cwduel'] and not game['cwduelrats']:
                    try:
                        sendm(bot, pasyuk_id,
                                     'Игра началась в ' + str(m.chat.title) + ' (@' + str(m.chat.username) + ')')
                    except:
                        pass
                    # sendm(bot, pasyuk_id, '/spectate '+str(game['id']))
                else:
                    if game['cwduel']:
                        sendm(bot, pasyuk_id, 'Дуэль между двумя игроками началась!')
                    if game['cwrats'] or game['cwduelrats']:
                        for ids in game['players']:
                            player = game['players'][ids]
                            break
                        sendm(bot, pasyuk_id,
                                         'Игра против крысы в Veganochatwars началась! Игрок: ' + player['name'])
                    # sendm(bot, pasyuk_id, '/spectate '+str(game['id']))
        try:
            game['canceltimer'].cancel()
        except:
            pass
        if not game['neuralfight']:
            if not game['castlefight'] and not game['cwbar']:
                if not game['bossfight']:
                    if game['cwrats'] or game['cwduelrats']:
                        sendm(bot, chatid, 'Бой с крысой начинается! Соперники готовятся к сражению...')
                    else:
                        if not game['cwduel']:
                            sendm(bot, chatid, 'Игра начинается!')
                else:
                    sendm(bot, chatid,
                                     'Игра начинается!')  # Цель игроков - победить босса '+game['players'][boss]['name']+'!')
        global timefromstart
        # if timefromstart >= 1175:
        #    try:
        #        pass
        #        #bot.send_message(game['id'], '❗️❗️❗️Бот будет перезагружен через '+str(1200-timefromstart)+' минут! Начинайте игры на свой страх и риск❗️❗️❗️')
        #    except:
        #        pass
        if not game['castlefight']:
            # time.sleep(1)
            if not game['neuralfight']:
                threading.Timer(1, select_weapon, args=[game, bot]).start()
            else:
                try:
                    select_weapon(game)
                except:
                    sendm(bot, pasyuk_id, traceback.format_exc())
        else:
            try:
                select_weapon(game)
            except:
                sendm(cwbot, pasyuk_id, traceback.format_exc())
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


def getrandomid(checklist=None):
    id = random.randint(1, 100000)
    if checklist != None:
        while id in checklist:
            id = random.randint(1, 100000)
    return id


@bot.message_handler(commands=['suicide'])
def suic(m):
    try:
        for ids in games:
            game = games[ids]
            if m.from_user.id in game['players']:
                if game['started'] and game['players'][m.from_user.id]['dead'] == False:
                    if game['dungeon'] and game['dungeon_type'] == 'dark' and game['dungeonlvl'] == 3 and \
                            game['players'][m.from_user.id]['darkness_sleep']:
                        # game['players'][m.from_user.id]['darkness_sleep'] = False
                        game['players'][m.from_user.id]['act'] = ['wake_up', 'self']
                    else:
                        game['players'][m.from_user.id]['suicide'] = True
                    game['players'][m.from_user.id]['ready'] = True
                    game['players'][m.from_user.id]['stage'] = None
    except:
        pass


def newratuser(game=None, idlist=None):
    if game != None:
        checklist = game['players']
    elif idlist != None:
        checklist = idlist
    else:
        checklist = []
    id = random.randint(1, 1000000)
    while id in checklist:
        id = random.randint(1, 1000000)
    user = npclist.NPC(id, 'Крыса')
    return user


def newtreantuser(game=None, idlist=None):
    if game != None:
        checklist = game['players']
    elif idlist != None:
        checklist = idlist
    id = random.randint(1, 100000)
    while id in checklist:
        id = random.randint(1, 100000)
    user = npclist.NPC(id, 'Трент')
    return user


def newvirususer(game=None, idlist=None):
    if game != None:
        checklist = game['players']
    elif idlist != None:
        checklist = idlist
    id = random.randint(1, 100000)
    while id in checklist:
        id = random.randint(1, 100000)
    user = npclist.NPC(id, 'Вирус-мутант')
    return user


def newrhinouser(game=None, idlist=None):
    if game != None:
        checklist = game['players']
    elif idlist != None:
        checklist = idlist
    id = random.randint(1, 100000)
    while id in checklist:
        id = random.randint(1, 100000)
    user = npclist.NPC(id, 'Носорог')
    return user


def newskeletonuser(game=None, idlist=None):
    if game != None:
        checklist = game['players']
    elif idlist != None:
        checklist = idlist
    id = random.randint(1, 100000)
    while id in checklist:
        id = random.randint(1, 100000)
    user = npclist.NPC(id, 'Скелет')
    return user


@bot.message_handler(commands=['addrats'])
def addratss(m):
    try:
        game = games[m.chat.id]
    except:
        return
    try:
        need_team = m.text.split(' ')[2]
    except:
        need_team = None
    x = bot.get_chat_member(m.chat.id, m.from_user.id)
    if x.status != 'creator' and x.status != 'administrator' and m.from_user.id != pasyuk_id and game[
        'creator'] != m.from_user.id:
        sendm(bot, m.chat.id,
                         'Только пользователь, запустивший игру, или администратор чата могут призывать крыс!',
                         reply_to_message_id=m.message_id)
        return
    if game['alreadyaddedrats'] and m.from_user.id != pasyuk_id and m.from_user.id != pasyuk_2_id:
        sendm(bot, m.chat.id, 'В одну игру добавить крыс можно только один раз!',
                         reply_to_message_id=m.message_id)
        return
    if game['dungeon']:
        sendm(bot, m.chat.id, 'Нельзя добавлять крыс в подземелье!', reply_to_message_id=m.message_id)
        return
    if game['pureduel']:
        sendm(bot, m.chat.id, 'Нельзя добавлять крыс в дуэль на рапирах!', reply_to_message_id=m.message_id)
        return
    if game['started']:
        sendm(bot, m.chat.id, 'Игра уже идет!')
        return
    try:
        y = int(m.text.split(' ')[1])
    except:
        sendm(bot, m.chat.id, 'Укажите требуемое количество крыс! Пример команды:\n/addrats 3',
                         reply_to_message_id=m.message_id)
        return
    try:
        rat_diff = int(m.text.split(' ')[2])
    except:
        rat_diff = 1
    if y > 15 and m.from_user.id != pasyuk_id and m.from_user.id != pasyuk_2_id:
        sendm(bot, m.chat.id, 'Максимальное число крыс - 15!', reply_to_message_id=m.message_id)
        return
    if y < 1:
        sendm(bot, m.chat.id, 'Бага здесь нет, поищите в другом месте!', reply_to_message_id=m.message_id)
        return
    rats = []
    gameratamount = 0
    randomid = False
    if "random_teams=True" in m.text:
        randomid =  True
    for ids in game['players']:
        target = game['players'][ids]
        if 'Крыса' in target['name'] and target['controller'] == 'bot':
            gameratamount += 1
    while len(rats) < y:
        newrat = newratuser(game)
        rat = createplayer(newrat, photo=ratphoto)
        for ids in rat:
            x = ids
            break
        rat[x]['name'] = 'Крыса ' + str(len(rats) + 1 + gameratamount) + '|🐭'
        if need_team == None:
            rat[x]['team'] = rat[x]['id']
        else:
            rat[x]['team'] = need_team
        if randomid:
            rat[x]['team'] = rat[x]["id"]
        rat[x]['controller'] = 'bot'
        rats.append(rat)
    for ids in rats:
        game['players'].update(ids)
    game['alreadyaddedrats'] = True
    if need_team == None:
        sendm(bot, m.chat.id, 'Добавлено ' + str(y) + ' крыс!\nТеперь в боте есть похожая команда: /addknights.\nПодсказка: чтобы все крысы были в разных командах - добавьте в конец команды текст random_teams=True. Пример:\n/addrats 10 random_teams=True')
    else:
        sendm(bot, m.chat.id, 'Добавлено ' + str(y) + ' крыс в команду ' + need_team + '!\nТеперь в боте есть похожая команда: /addknights.')


@bot.message_handler(commands=['addknights'])
def addratssk(m):
    try:
        game = games[m.chat.id]
    except:
        return
    try:
        need_team = m.text.split(' ')[2]
    except:
        need_team = None
    x = bot.get_chat_member(m.chat.id, m.from_user.id)
    if x.status != 'creator' and x.status != 'administrator' and m.from_user.id != pasyuk_id and game[
        'creator'] != m.from_user.id:
        sendm(bot, m.chat.id,
                         'Только пользователь, запустивший игру, или администратор чата могут призывать рыцарей!',
                         reply_to_message_id=m.message_id)
        return
    if game['alreadyaddedknights'] and m.from_user.id != pasyuk_id and m.from_user.id != pasyuk_2_id:
        sendm(bot, m.chat.id, 'В одну игру добавить рыцарей можно только один раз!',
                         reply_to_message_id=m.message_id)
        return
    if game['dungeon']:
        sendm(bot, m.chat.id, 'Нельзя добавлять рыцарей в подземелье!', reply_to_message_id=m.message_id)
        return
    if game['pureduel']:
        sendm(bot, m.chat.id, 'Нельзя добавлять рыцарей в дуэль на рапирах!', reply_to_message_id=m.message_id)
        return
    if game['started']:
        sendm(bot, m.chat.id, 'Игра уже идет!')
        return
    try:
        y = int(m.text.split(' ')[1])
    except:
        sendm(bot, m.chat.id, 'Укажите требуемое количество крыс! Пример команды:\n/addrats 3',
                         reply_to_message_id=m.message_id)
        return
    if y > 15 and m.from_user.id != pasyuk_id and m.from_user.id != pasyuk_2_id:
        sendm(bot, m.chat.id, 'Максимальное число рыцарей - 15!', reply_to_message_id=m.message_id)
        return
    if y < 1:
        sendm(bot, m.chat.id, 'Бага здесь нет, поищите в другом месте!', reply_to_message_id=m.message_id)
        return
    rats = []
    gameratamount = 0
    for ids in game['players']:
        target = game['players'][ids]
        if 'Рыцарь' in target['name'] and target['controller'] == 'bot':
            gameratamount += 1
    randomid = False
    if "random_teams=True" in m.text:
        randomid =  True
    while len(rats) < y:
        knight = summon_knight(game, len(rats), randomid=randomid)
        rats.append(knight)
    for ids in rats:
        game['players'].update(ids)
    game['alreadyaddedknights'] = True
    if need_team == None:
        sendm(bot, m.chat.id, 'Добавлено ' + str(y) + ' рыцарей!\nПодсказка: чтобы все рыцари были в разных командах - добавьте в конец команды текст random_teams=True. Пример:\n/addknights 10 random_teams=True')
    else:
        sendm(bot, m.chat.id, 'Добавлено ' + str(y) + ' рыцарей в команду ' + need_team + '!')


def checktourgame(m):
    try:
        game = games[m.chat.id]
    except:
        return False
    if game['tournier'] and m.from_user.id in game['players']:
        return True
    return False


# @bot.message_handler(func = lambda m: checktourgame(m))
# def delmsgs(m):
#    try:
#        bot.delete_message(m.chat.id, m.message_id)
#        sendm(bot, m.chat.id, m.from_user.first_name + ', во время турнирной игры участникам нельзя писать в чат!')
#    except:
#        pass

def npcweaponselect(game, player):
    if not game['classic_game']:
        x = random.choice(npcweapons)()
        if player['is_rhino']:
            x = weaponlist.Horn()
    else:
        x = random.choice(npcclassicweapons)()
    return x


def getweaponkb(game, player=None):
    global testweapon
    kb = types.InlineKeyboardMarkup()
    w = []
    newweaponlist = weapons.copy()
    if game['classic_game']:
        newweaponlist = weapons_classic.copy()
    allys = []
    for ids in game['players']:
        target = game['players'][ids]
        if target['id'] != player['id'] and target['team'] == player['team']:
            allys.append(target['id'])
    #if not game['dungeon']:
    #    if not game['tournier']:
    #        if player['id'] in has_necrostaff:
    #            if not game['classic_game']:
    #                newweaponlist.append(weaponlist.NecromantStaff_players)
    # else:
    #    if len(allys) == 0:
    #        if game['dungeon_type'] == 'rhino' and player['id'] not in has_charge:
    #            pass
    #        else:
    #            if game['dungeon_type'] != 'dark':
    #                newweaponlist.append(weaponlist.NecromantStaff_players)

    weaponlimit = 4
    if game['classic_game']:
        weaponlimit = 3
    if game['testequipgame']:
        newweaponlist = allw.copy()
        newweaponlist.remove(weaponlist.NecromantStaff_players)
        newweaponlist.remove(weaponlist.Narsil)
        newweaponlist.remove(weaponlist.BowAsgard)
        newweaponlist.remove(weaponlist.Katana)
        newweaponlist.remove(weaponlist.Shield)
        newweaponlist.remove(weaponlist.Flamethrower_narsil)

        for ids in newweaponlist:
            x = ids()
            kb.add(
                types.InlineKeyboardButton(text=x.name,
                                           callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)+"?te%"))
    elif game['testequipgame_tournier']:
        newweaponlist = weapons.copy()
        try:
            newweaponlist.remove(weaponlist.OnePunch)
        except:
            pass
        for ids in newweaponlist:
            x = ids()
            if x.name not in blockweapons:
                kb.add(
                    types.InlineKeyboardButton(text=x.name,
                                            callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)+"?te%"))
    else:
        while len(w) < weaponlimit:
            notallowed = True
            x = random.choice(newweaponlist)()
            # if x.name == 'Дробовик' and player['id'] == 1134827568:
            #    notallowed = True
            while x.id in w or (game['tournier'] and x.name in blockweapons) or notallowed:
                notallowed = False
                x = random.choice(newweaponlist)()
                # if x.name == 'Дробовик' and player['id'] == 1134827568:
                #    notallowed = True
                new_weapon_chance = False
                if new_weapon_chance:
                    if random.randint(1, 100) <= 15:
                        y = weaponlist.OnePunch()
                        if y.id not in w:
                            x = y
                if (x.name == 'Пулемет' or x.name == 'One punch') and game['tournier']:
                    notallowed = True
                if x.name in ['Пулемет', 'Морозный лук', 'One punch'] and game['dungeon']:
                    notallowed = True
                if x.name in ['Гранатомет'] and len(game['players']) > 2 and not game['dungeon']:
                    notallowed = True
            if game['test']:
                try:
                    x = testweapon()
                except:
                    pass
            kb.add(types.InlineKeyboardButton(text=x.name,
                                              callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)),
                   types.InlineKeyboardButton(text='Информация',
                                              callback_data='weaponinfo?' + str(game['id']) + '?' + str(x.id)))
            w.append(x.id)
    if player != None and not game['tournier']:
        if player['id'] == 1134827568:
            if game['classic_game']:
                x = weaponlist.Narsil_classic()
            else:
                x = weaponlist.Narsil()
            kb.add(types.InlineKeyboardButton(text=x.name,
                                              callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)))
            if not game['classic_game']:
                x = weaponlist.Shield()
                kb.add(types.InlineKeyboardButton(text=x.name,
                                              callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)))
                x = weaponlist.Flamethrower_narsil()
                kb.add(types.InlineKeyboardButton(text=x.name,
                                              callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)))
        if player['id'] == 52322637:
            x = weaponlist.BowAsgard()
            kb.add(types.InlineKeyboardButton(text=x.name,
                                              callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)))
        if player['id'] == 205959167 or player['id'] == 188314207 or player['id'] == 94197300:
            x = weaponlist.Katana()
            kb.add(types.InlineKeyboardButton(text=x.name,
                                              callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)))
        if player['id'] == 1134827568 or player['id'] == 1891820166:
            if not game['classic_game']:
                x = weaponlist.DuelRapier()
                kb.add(types.InlineKeyboardButton(text=x.name,
                                                  callback_data='selectweapon?' + str(game['id']) + '?' + str(x.id)))
        if not game['classic_game']:
            if player['id'] in has_necrostaff:
                allys = []
                for ids in game['players']:
                    target = game['players'][ids]
                    if target['id'] != player['id'] and target['team'] == player['team']:
                        allys.append(target['id'])
                if not game['dungeon']:
                    x = weaponlist.NecromantStaff_players()
                    kb.add(types.InlineKeyboardButton(text = x.name, callback_data = 'selectweapon?'+str(game['id'])+'?'+str(x.id)))
                else:
                    if game['dungeon_type'] == 'hell' and game['dungeonlvl'] == 3:
                        x = weaponlist.NecromantStaff_players()
                        kb.add(types.InlineKeyboardButton(text=x.name,
                                                          callback_data='selectweapon?' + str(game['id']) + '?' + str(
                                                              x.id)))
                    else:
                        if len(allys) == 0:
                            if (game['dungeon_type'] == 'rhino' and player['id'] not in has_charge) or (game['dungeon_type'] == 'dragon' and player['id'] not in has_dragon_power):
                                pass
                            else:
                                if game['dungeon_type'] != 'dark' and game['dungeon_type'] != 'hell':
                                    x = weaponlist.NecromantStaff_players()
                                    kb.add(types.InlineKeyboardButton(text = x.name, callback_data = 'selectweapon?'+str(game['id'])+'?'+str(x.id)))
    if not game['classic_game']:
        kb.add(types.InlineKeyboardButton(text='Случайное оружие', callback_data='selectrandomweapon?' + str(game['id'])))
    return kb


def getnpcskills(game, player, skilllimit=2, banned_skills=[], dopskills=[]):
    x = []
    if game['dungeon'] and not player["is_knight"]:
        banned_skills.append('charge')
    while len(x) < skilllimit:
        notallowed = True
        npcskillscopy = npcskills.copy()
        if game['classic_game']:
            npcskillscopy = npcclassicskills.copy()
        for ids in dopskills:
            npcskillscopy.append(ids)
        y = random.choice(npcskillscopy)
        while y in x or notallowed:
            notallowed = False
            y = random.choice(npcskillscopy)
            if y in ['bicepc', 'berserk', 'charge'] and player['weapon'].ranged:
                notallowed = True
            if y in ['sniper'] and not player['weapon'].ranged:
                notallowed = True
            if y in ['navod', 'necromant', 'defer'] and len(allys) == 0:
                notallowed = True
            if y in banned_skills:
                notallowed = True
        x.append(y)
    if player['is_rhino'] or 'Скелет' in player['name'] or 'Дряхлый скелет' in player['name'] or 'Некромант' in player[
        'name'] or \
            'Амальгама' in player['name'] or 'Тьма' in player['name']:
        x = []
    if player['is_vurdalak']:
        if game['dungeon']:
            x = ['ghoul_vampirism', 'ghoul_bloodlust']
        else:
            x.append('ghoul_vampirism')
            x.append('ghoul_bloodlust')
    if player['is_amalgama']:
        if game['dungeon']:
            x = ['amalgama_mutate', 'scare']
    if player['is_imp']:
        x = ['fire_regen', 'fire_power']
    if player['is_magmaworm']:
        x = ['fire_resistance', 'burrow']
    if player['is_lucifer']:
        x = ['lucifer_hellfire', 'DOOM']
    if player['is_radiodemon']:
        x = ['?']
    if player['is_eyedemon']:
        x = ['fire_touch']
    if player["is_dragon"]:
        x = ["dragon_fireball", "wing_attack"]

    return x

di = 0
for ids in ratdemons.find({'demons':{}}):
    di += 1
print(di)
ratdemons.delete_many({'demons':{}})

def select_weapon(game, bot=bot):
    try:
        if game['rats']:
            for ids in game['players']:
                player = game['players'][ids]
                team = player['team']
                break
            for ids in game['players']:
                player = game['players'][ids]
                if player['team'] != team:
                    player['team'] = team
            ratamount = len(game['players'])
            rats = []
            while len(rats) < ratamount:
                ratuser = newratuser(game)
                rat = createplayer(ratuser, photo=ratphoto)
                for ids in rat:
                    x = ids
                    break
                rat[x]['name'] = 'Крыса ' + str(len(rats) + 1) + '|🐭'
                rat[x]['team'] = 'rats'
                rat[x]['controller'] = 'bot'
                if game['rat_difficulty'] >= 2:
                    buffs = ['accuracy', 'hp', 'armor', 'energy']  # , '+3shields']
                    getbuffs = []
                    for i in range(3):
                        # getbuffs.append(random.choice(buffs))
                        notallowed = True
                        while notallowed:
                            notallowed = False
                            z = random.choice(buffs)
                            if z == 'accuracy' and z in getbuffs:
                                notallowed = True
                            if z == 'energy' and z in getbuffs:
                                notallowed = True
                            if z == '+3shields' and z in getbuffs:
                                notallowed = True
                        getbuffs.append(z)
                    rat[x]['getbuffs2'] = getbuffs
                if game['rat_difficulty'] >= 3:
                    buffs = ['+1skill', 'hypnotist', 'armor++', 'energy++']
                    getbuffs = []
                    for i in range(2):
                        notallowed = True
                        while notallowed:
                            notallowed = False
                            z = random.choice(buffs)
                            if z == 'hypnotist' and z in getbuffs:
                                notallowed = True
                            if z == 'energy++' and z in getbuffs:
                                notallowed = True
                            if z == '+1skill' and z in getbuffs:
                                notallowed = True
                        getbuffs.append(z)
                    rat[x]['getbuffs3'] = getbuffs
                if game['rat_difficulty'] == 2:
                    rat[x]['name'] += '🟠'
                if game['rat_difficulty'] == 3:
                    rat[x]['name'] += '🔴'
                rats.append(rat)
            for ids in rats:
                game['players'].update(ids)
        if game['teamplay']:
            teams = {}
            for ids in game['players']:
                if game['players'][ids]['team'] not in teams:
                    teams.update({game['players'][ids]['team']: 1})
                else:
                    teams[game['players'][ids]['team']] += 1
            maxplayers = -1
            for ids in teams:
                if teams[ids] > maxplayers:
                    maxplayers = teams[ids]
            rats = []
            gameratamount = 0
            for ids in game['players']:
                target = game['players'][ids]
                if 'Крыса' in target['name'] and target['controller'] == 'bot':
                    gameratamount += 1
            for ids in teams:
                if teams[ids] < maxplayers:
                    y = maxplayers - teams[ids]
                    doprats = []
                    while len(doprats) < y:
                        newrat = newratuser(game)
                        rat = createplayer(newrat, photo=ratphoto)
                        for idsss in rat:
                            x = idsss
                            break
                        rat[x]['name'] = 'Крыса ' + str(len(rats) + 1 + gameratamount) + '|🐭'
                        rat[x]['team'] = ids
                        rat[x]['controller'] = 'bot'
                        doprats.append(rat)
                        rats.append(rat)
            for ids in rats:
                game['players'].update(ids)
        if game['pureduel_rats']:
            if game['neuralfight']:
                ratamount = 2
                rats = []
                while len(rats) < ratamount:
                    ratuser = newratuser(game)
                    rat = createplayer(ratuser, photo=ratphoto)
                    for idss in rat:
                        x = idss
                        break
                    rat[x]['name'] = 'Дуэльная крыса|🐭'
                    rat[x]['team'] = str(len(rats))
                    rat[x]['controller'] = 'bot'
                    if len(rats) == 0:
                        rat[x]['fullneuraldemon'] = game['fullneuraldemon1']
                    else:
                        rat[x]['fullneuraldemon'] = game['fullneuraldemon2']
                    rat[x]['fullneuraldemonobject'] = game['demons'][rat[x]['fullneuraldemon']]
                    #print("7895: neurodemon1", game['fullneuraldemon1'])
                    rats.append(rat)
                for idss in rats:
                    game['players'].update(idss)
            elif game['pureduel_rats_hard']:
                ratamount = 1
                rats = []
                for ids in game['players']:
                    target = game['players'][ids]
                    break
                while len(rats) < ratamount:
                    ratuser = newratuser(game)
                    rat = createplayer(ratuser, photo=ratphoto)
                    for idss in rat:
                        x = idss
                        break
                    rat[x]['name'] = 'Дуэльная нейрокрыса v.2|🐭'
                    rat[x]['team'] = 'rats'
                    rat[x]['controller'] = 'bot'
                    #rat[x]['weights'] = random_duelrat_weights()
                    #rat[x]['fullneuraldemon'] = game['fullneuraldemon_final']
                    rat[x]['fullneuraldemonobject'] = game['fullneuraldemon_final']
                    rats.append(rat)
                for idss in rats:
                    game['players'].update(idss)
            else:
                ratamount = 1
                rats = []
                for ids in game['players']:
                    target = game['players'][ids]
                    break
                while len(rats) < ratamount:
                    ratuser = newratuser(game)
                    rat = createplayer(ratuser, photo=ratphoto)
                    for idss in rat:
                        x = idss
                        break
                    rat[x]['name'] = 'Дуэльная крыса|🐭'
                    rat[x]['team'] = 'rats'
                    rat[x]['controller'] = 'bot'
                    rat[x]['weights'] = random_duelrat_weights()
                    demons = ratdemons.find_one({'id':target['id']})
                    if demons == None or demons['demons'] == {}:
                        #if demons['demons'] == {}:
                        #    print("none")

                        #maxscore = -9999
                        #topdemon = None
                        #for idss in ratdemons.find({}):
                            #print(idss)
                        #    for idsss in idss['demons']:
                        #        if idss['demons'][idsss]['score'] > maxscore:
                        #            maxscore = idss['demons'][idsss]['score']
                                    #print(maxscore)
                        #            topdemon = idss['demons']
                        if True:#topdemon == None:
                            createddemons = create_demons_for_rat()
                        else:
                            createddemons = topdemon
                        #if demons != None and demons['demons'] == {}:
                        #    ratdemons.update_one({'id': target['id'], 'demons': createddemons})
                        #else:
                        ratdemons.insert_one({'id':target['id'], 'demons':createddemons})
                        demons = ratdemons.find_one({'id':target['id']})

                    rat[x]['rat_demons'] = demons['demons']
                    #print(rat[x]['rat_demons'])
                    #print(demons)
                    rats.append(rat)
                for idss in rats:
                    game['players'].update(idss)
        if game['pokemonhunt']:
            ratamount = 1
            rats = []
            for ids in game['players']:
                target = game['players'][ids]
                break
            while len(rats) < ratamount:
                ratuser = newratuser(game)
                rat = createplayer(ratuser, photo=ratphoto)
                for idss in rat:
                    x = idss
                    break
                rat[x]['name'] = pokemonlist.namegenerator()+'|🐭'
                rat[x]['team'] = 'rats'
                wtype = 'melee'
                wtype = 'ranged'
                rat[x]['skills'] = pokemonlist.randomskills(wtype)
                hp = pokemonlist.randomhp()
                dmglimit = pokemonlist.randomdmglimit()
                rat[x]['hp'] = hp
                rat[x]['maxhp'] = hp
                rat[x]['dmglimit'] = dmglimit
                rat[x]['maxdmglimit'] = dmglimit
                rat[x]['controller'] = 'bot'
                rats.append(rat)
            for idss in rats:
                game['players'].update(idss)
        for ids in game['players']:
            player = game['players'][ids]
            player['stage'] = 'selectweapon'
            player['ready'] = False
            items_get = []
            limit = 2
            if player['controller'] != 'bot' and game['dungeon'] and game['dungeonlvl'] >= 2:
                limit = 3
            if player['controller'] == 'player':
                which_list = items.copy()
            else:
                which_list = npcitems.copy()
            if game['testequipgame']:
                for ids in which_list:
                    for i in range(100):
                        items_get.append(ids)
            elif game['testequipgame_tournier']:
                items_get = []
            elif game['rp_fight']:
                if player['controller'] == 'player':
                    user = player['user']
                    items_get = user['rp_profile']['inventory']
                else:
                    items_get = []
            else:
                if not game['pureduel_rats']:
                    while len(items_get) < limit:
                        item = random.choice(which_list)
                        notallowed = True
                        while item in items_get or notallowed:
                            notallowed = False
                            item = random.choice(which_list)
                            if item in ['bint'] and game['tournier']:
                                notallowed = True
                        items_get.append(item)
            if game['pureduel']:
                items_get = ['adrenaline', 'flash']
                for idss in game['players']:
                    for idsss in game['players']:
                        game['players'][idss]['nearplayers'].append(game['players'][idsss]['id'])
            items_to_append = items_get.copy()
            if not game['castlefight'] and not game['cwrats'] and not game['cwduel'] and not game['cwduelrats']:
                for idss in items_to_append:
                    if ('носорог' in player['name'].lower() or 'Скелет' in player['name'] or 'Некромант' in player['name'] or \
                        'Вурдалак' in player['name'] or 'Дряхлый скелет' in player['name'] or 'Амальгама' in player[
                            'name'] or \
                        'Трент' in player['name'] or 'Тьма' in player['name'] or player['is_imp'] or player['is_magmaworm'] or player['is_lucifer'] or player['is_eyedemon'] or \
                    player['is_radiodemon'] or player["is_dragon"] or player["is_knight"]) \
                            and player['controller'] == 'bot':
                        pass
                    else:
                        player['inventory'].append(idss)
                        # print('append ',ids)

            itemtext = ''
            for idss in player['inventory']:
                itemtext += getname(idss) + ', '
            if len(itemtext) >= 2:
                itemtext = itemtext[:len(itemtext) - 2]
            if game['testequipgame']:
                itemtext = 'х100 каждого.'
            if player['controller'] == 'player':
                try:
                    if not game['cwrats'] and not game['cwduel'] and not game['cwduelrats']:
                        sendm(bot, player['id'], 'Ваши предметы: ' + itemtext)
                    if not player['boss']:
                        if game['allrandom']:
                            newwlist = weapons.copy()
                            newwlist.remove(weaponlist.OnePunch)
                            weapon = random.choice(newwlist)()
                            w = weapon
                            player['weapon'] = w
                            player['stage'] = None
                            sendm(bot, player['id'], 'Выбрано случайное оружие: ' + w.name + '!')
                            player['ready'] = True
                            readycheck_select_skills(game)
                        elif game['pureduel']:
                            weapon = weaponlist.DuelRapier()
                            w = weapon
                            player['weapon'] = w
                            player['stage'] = None
                            player['ready'] = True
                            sendm(bot, player['id'], 'Выбрано оружие: ' + w.name + '!')
                            readycheck_select_skills(game)
                        elif game['magictournier']:
                            weapon = weaponlist.MagicStaff()
                            w = weapon
                            player['weapon'] = w
                            player['stage'] = None
                            player['ready'] = True
                            sendm(bot, player['id'], 'Выбрано оружие: ' + w.name + '!')
                            readycheck_select_skills(game)
                        elif game['rp_fight']:
                            user = player['user']
                            weaponname = user['rp_profile']['weapon']
                            if weaponname == 'Гранатомет огра':
                                player['weapon'] = weaponlist.OgreGrenadeLauncher()
                            else:
                                player['weapon'] = weaponlist.Fist()
                            player['stage'] = None
                            player['ready'] = True
                            sendm(bot, player['id'], 'Выбрано оружие: ' + player['weapon'].name + '!')
                            readycheck_select_skills(game)
                        elif game['cwrats'] or game['cwduelrats']:
                            player['stage'] = None
                            player['ready'] = True
                            # sendm(bot, player['id'], 'Выбрано оружие: ' + player['weapon'].name + '!')
                            readycheck_select_skills(game)

                        elif game['cwduel']:
                            player['stage'] = None
                            player['ready'] = True
                            readycheck_select_skills(game)

                        else:
                            kb = getweaponkb(game, player)
                            sendm(bot, player['id'], 'Выберите оружие:', reply_markup=kb)
                        if game['testequipgame_tournier']:
                            kb = getitemskb(game, player)
                            try:
                                sendm(bot, player['id'], 'Выберите предметы (лимит: 2).', reply_markup=kb)
                            except:
                                print(traceback.format_exc())
                    else:
                        kb = getbosskb(game, player)
                        sendm(bot, player['id'], 'Выберите, каким боссом вы будете:', reply_markup=kb)
                except:
                    sendm(cwbot, pasyuk_id, traceback.format_exc())
            else:
                if game['pureduel_rats']:
                    weapon = weaponlist.DuelRapier()
                    w = weapon
                    player['weapon'] = w
                    player['stage'] = None
                    player['ready'] = True
                    #bot.send_message(player['id'], 'Выбрано оружие: ' + w.name + '!')
                    #readycheck_select_skills(game)
                else:
                    if not game['castlefight'] and not game['cwrats'] and not game['cwduel'] and not game['cwduelrats']:
                        if 'носорог' not in player['name'].lower() and 'Скелет' not in player['name'] and 'Вурдалак' not in player[
                            'name'] and \
                                'Дряхлый скелет' not in player['name'] and 'Некромант' not in player[
                            'name'] and 'Тень крысы' not in player['name'] and \
                                'Амальгама' not in player['name'] and 'Трент' not in player['name'] and 'Тьма' not in \
                                player['name'] and not player['is_imp'] and not player['is_magmaworm'] and not player['is_lucifer'] and not player['is_snowman'] \
                                and not player['is_eyedemon'] and not player['is_radiodemon'] and not player["is_dragon"] and not player["is_knight"]:
                            player['weapon'] = npcweaponselect(game, player)

                player['stage'] = None
                player['ready'] = True
        game['stage'] = 'weapons'
        if not game['castlefight'] and not game['cwbar'] and not game['neuralfight']:
            # t = threading.Timer(60, select_skills, args = [game, bot])
            # t.start()
            # game['timer'] = t
            # game['alltimers'].append(t)
            game['turntimer'] = time.time()
        else:
            select_skills(game)
    except:
        sendm(cwbot, pasyuk_id, traceback.format_exc())


@bot.callback_query_handler(func=lambda call: call.data[:12] == 'getskillinfo')
def skillllinfo(call):
    try:
        text = skillinfo.getskillinfo(call.data.split('?')[1])
    except:
        text = 'Неизвестно'
    bot.answer_callback_query(call.id, text, show_alert=True)


@bot.callback_query_handler(func=lambda call: call.data[:11] == 'getbossinfo')
def skillllinfo(call):
    try:
        text = skillinfo.getbossinfo(call.data.split('?')[1])
    except:
        text = 'Неизвестно'
    bot.answer_callback_query(call.id, text, show_alert=True)


@bot.callback_query_handler(func=lambda call: time.time() - call.message.date > 125)
def cancelold(call):
    bot.answer_callback_query(call.id, 'Слишком старое сообщение!')


@bot.callback_query_handler(func=lambda call: call.data[:10] == 'weaponinfo')
def weaponinfo(call):
    weapon = int(call.data.split('?')[2])
    w = None
    for ids in allw:
        if ids().id == weapon:
            w = ids()
            break
    try:
        text = skillinfo.getweaponinfo(w.name)
    except:
        text = 'Неизвестно'
    bot.answer_callback_query(call.id, text, show_alert=True)


@bot.callback_query_handler(func=lambda call: call.data[:18] == 'selectrandomweapon')
def selectweapon(call):
    game = int(call.data.split('?')[1])
    try:
        game = games[game]
    except:
        return
    notallowed = True
    while notallowed:
        weapon = random.choice(weapons)()
        notallowed = False
        if weapon.name in ['Пулемет', 'One punch'] and game['dungeon']:
            notallowed = True
        if weapon.name in ['Пулемет', 'One punch'] and game['tournier']:
            notallowed = True
        if weapon.name in ['Гранатомет'] and not game['dungeon'] and len(game['players']) > 2:
            notallowed = True
    if call.from_user.id not in game['players']:
        return
    player = game['players'][call.from_user.id]
    if player['stage'] != 'selectweapon':
        return
    w = weapon
    player['weapon'] = w
    player['stage'] = None
    medit('Выбрано случайное оружие: ' + w.name + '!', call.message.chat.id, call.message.message_id)
    player['ready'] = True
    readycheck_select_skills(game)


@bot.callback_query_handler(func=lambda call: call.data[:12] == 'selectweapon')
def selectweapon(call):
    game = int(call.data.split('?')[1])
    weapon = int(call.data.split('?')[2])
    try:
        game = games[game]
    except:
        return
    if call.from_user.id not in game['players']:
        return
    player = game['players'][call.from_user.id]
    if player['stage'] != 'selectweapon':
        return
    if not game["testequipgame"] and not game["testequipgame_tournier"] and "?te%" in call.data:
        return
    w = None
    for ids in allw:
        if ids().id == weapon:
            w = ids()
            break
    player['weapon'] = w
    player['stage'] = None
    medit('Выбрано оружие: ' + w.name + '!', call.message.chat.id, call.message.message_id)
    player['ready'] = True
    readycheck_select_skills(game)


@bot.callback_query_handler(func=lambda call: call.data[:10] == 'selectboss')
def selectbosss(call):
    game = int(call.data.split('?')[1])
    boss = call.data.split('?')[2]
    try:
        game = games[game]
    except:
        return
    if call.from_user.id not in game['players']:
        return
    player = game['players'][call.from_user.id]
    if player['stage'] != 'selectweapon':
        return
    player['skills'].append(boss)
    player['stage'] = None
    if boss == 'skeletonking':
        player['weapon'] = weaponlist.SkeletonKingSword()
    if boss == 'vampire':
        player['weapon'] = weaponlist.VampireBite()
    if boss == 'demonlord':
        player['weapon'] = weaponlist.DemonlordEye()
    medit('Выбран босс: ' + getname(boss) + '!', call.message.chat.id, call.message.message_id)
    player['ready'] = True
    player['name'] = getname(boss) + ' ' + player['name']
    if boss == 'skeletonking':
        player['photo'] = skeletonkingphoto
    if boss == 'vampire':
        player['photo'] = vampirephoto
    if boss == 'demonlord':
        player['photo'] = demonlordphoto
    readycheck_select_skills(game)


@bot.callback_query_handler(func=lambda call: call.data[:17] == 'selectoruzhweapon')
def selectweapon(call):
    game = int(call.data.split('?')[1])
    weapon = int(call.data.split('?')[2])
    try:
        game = games[game]
    except:
        return
    if call.from_user.id not in game['players']:
        return
    player = game['players'][call.from_user.id]
    if player['stage'] != 'selectskill':
        return
    w = None
    for ids in allw:
        if ids().id == weapon:
            w = ids()
            break
    player['secondweapon'] = w
    medit('Выбрано второе оружие: ' + w.name + '!', call.message.chat.id, call.message.message_id)
    limit = 2
    if game['bossfight']:
        limit += 1
    if player['boss']:
        limit += 1
    if game['dungeon'] and game['dungeonlvl'] >= 2:
        limit += 1
    if len(player['skills']) >= limit:
        player['stage'] = None
        player['ready'] = True
        readycheck_next_turn(game)
    else:
        kb = getskillkb(game, player)
        sendm(bot, player['id'], 'Выберите способности (лимит: ' + str(limit) + ').', reply_markup=kb)


def readycheck_select_skills(game):
    return
    ready = 0
    for ids in game['players']:
        player = game['players'][ids]
        if player['ready']:
            ready += 1
    if len(game['players']) == ready:
        game['timer'].cancel()
        select_skills(game)


def select_skills(game, bot=bot):
    game['stage'] = None
    # try:
    #    game['timer'].cancel()
    # except:
    #    pass
    # for ids in game['alltimers']:
    #    try:
    #        ids.cancel()
    ##
    #    except:
    #        pass
    for ids in game['players']:
        if game['castlefight'] or game['cwrats'] or game['cwduel'] or game['cwduelrats']:
            if game['players'][ids]['weapon'] == None:
                game['players'][ids]['weapon'] = cw_weaponlist.Fist_1()
        else:
            if game['players'][ids]['weapon'] == None:
                if game['classic_game']:
                    game['players'][ids]['weapon'] = weaponlist.Fist_classic()
                else:
                    game['players'][ids]['weapon'] = weaponlist.Fist()
    addrats = []
    addskeles = []
    alreadyrats = 0
    for ids in game['players']:
        player = game['players'][ids]
        if 'Крыса' in player['name'] and player['controller'] == 'bot':
            alreadyrats += 1
    alreadyskeles = 0
    for ids in game['players']:
        player = game['players'][ids]
        if 'Скелет' in player['name'] and player['controller'] == 'bot':
            alreadyskeles += 1
    for ids in game['players']:
        player = game['players'][ids]
        if player['weapon'].name == 'One punch':
            targets = []
            for idss in game['players']:
                target = game['players'][idss]
                if target['team'] != player['team']:
                    targets.append(target)
            if len(targets) > 0:
                target = random.choice(targets)
                for i in range(1):
                    createdrat = summon_rat(game, len(addrats) + alreadyrats, team=target['team'])
                    for idsss in createdrat:
                        x = idsss
                        break
                    createdrat[x]['weapon'] = npcweaponselect(game, createdrat[x])
                    ratinventory = []
                    which_list = npcitems.copy()
                    for i in range(2):
                        item = random.choice(which_list)
                        while item in ratinventory:
                            item = random.choice(which_list)
                        ratinventory.append(item)
                    createdrat[x]['inventory'] = ratinventory
                    addrats.append(createdrat)
                for i in range(1):
                    createdskele = summon_dung_skeleton(game, skeletons=len(addskeles) + alreadyskeles,
                                                        team=target['team'])
                    for idsss in createdskele:
                        x = idsss
                        break
                    addskeles.append(createdskele)
    for ids in addrats:
        game['players'].update(ids)
    for ids in addskeles:
        game['players'].update(ids)
    game['playersamount'] = len(game['players'])
    tries = 0
    if not game['castlefight'] and not game['cwrats'] and not game['cwduel'] and not game['cwduelrats'] and not game['neuralfight']:
        while True:
            try:
                sendm(bot, game['id'], 'Оружие выбрано.')
                break
            except:
                tries += 1
                if tries > 100:
                    del games[game['id']]
                    return
                time.sleep(3)

    if game['teamplay']:
        teamlist = {}
        for ids in game['players']:
            player = game['players'][ids]
            if player['team'] not in teamlist:
                teamlist.update({player['team']: 1})
            else:
                teamlist[player['team']] += 1
        gl = []
        for ids in teamlist:
            if teamlist[ids] == 2:
                gl.append(ids)
        if random.randint(1, 100) <= 0:
            if len(gl) > 0:
                team = random.choice(gl)
                game['gl'] = team

    for ids in game['players']:
        player = game['players'][ids]
        if not player['suicide']:
            player['ready'] = False
            player['stage'] = 'selectskill'
        skill_limit = 2
        if game['bossfight']:
            skill_limit += 1
        if player['boss']:
            skill_limit += 1
        if game['dungeon'] and game['dungeonlvl'] >= 2:
            skill_limit += 1
        if game["new_limit"]:
            skill_limit = game['dop_skills']
        if player['controller'] == 'player':
            try:
                if game['allrandom']:
                    getrandomskills(game, player)
                    skilltext = ''
                    for idss in player['skills']:
                        skilltext += getname(idss) + ', '
                    skilltext = skilltext[:len(skilltext) - 2]
                    skilltext += '.'
                    sendm(bot, player['id'], 'Выбраны случайные способности: ' + skilltext)
                    player['ready'] = True
                    player['stage'] = None
                elif game['pureduel']:
                    player['skills'] = ['shieldgen', 'vor']
                    sendm(bot, player['id'], 'Способности выбраны.')
                    player['ready'] = True
                    player['stage'] = None
                elif game['magictournier']:
                    player['skills'] = ['invoker']
                    sendm(bot, player['id'], 'Способности выбраны.')
                    player['ready'] = True
                    player['stage'] = None
                elif game['rp_fight']:
                    user = player['user']
                    player['skills'] = user['rp_profile']['skills']
                    abiltext = ''
                    for idss in player['skills']:
                        abiltext += getname(idss) + ', '
                    if len(abiltext) >= 2:
                        abiltext = abiltext[:len(abiltext) - 2]
                    sendm(bot, player['id'], 'Способности выбраны: ' + abiltext)
                    player['ready'] = True
                    player['stage'] = None
                elif game['cwrats'] or game['cwduelrats']:
                    player['ready'] = True
                    player['stage'] = None
                elif game['cwduel']:
                    player['ready'] = True
                    player['stage'] = None
                else:
                    kb = getskillkb(game, player)
                    sendm(bot, player['id'], 'Выберите способности (лимит: ' + str(skill_limit) + ').',
                                     reply_markup=kb)

            except:
                sendm(bot, pasyuk_id, traceback.format_exc())
        else:
            if game['pureduel_rats']:
                player['skills'] = ['shieldgen', 'vor']
                #bot.send_message(player['id'], 'Способности выбраны.')
                player['ready'] = True
                player['stage'] = None
            else:
                if not game['castlefight'] and not game['cwrats'] and not game['cwduel'] and not game['cwduelrats']:
                    skilllimit = 2
                    for idss in player['getbuffs3']:
                        if idss == '+1skill':
                            skilllimit += 1
                    if game["new_limit"]:
                        skilllimit = game['dop_skills']
                    if not player["is_knight"] and not player["is_dragon"]:
                        player['skills'] = getnpcskills(game, player, skilllimit)
            player['ready'] = True
            player['stage'] = None
    game['stage'] = 'skills'
    if not game['castlefight'] and not game['cwbar'] and not game['neuralfight']:
        # t = threading.Timer(90, next_turn, args = [game, bot])
        # t.start()
        # game['timer'] = t
        # game['alltimers'].append(t)
        game['turntimer'] = time.time()
    else:
        next_turn(game)


def getrandomskills(game, player):
    choiceskills = []
    allys = []
    for ids in game['players']:
        target = game['players'][ids]
        if target['id'] != player['id'] and target['team'] == player['team']:
            allys.append(target['id'])
    while len(choiceskills) < 2:
        x = random.choice(skills)
        notallowed = True
        while x in choiceskills or notallowed:
            notallowed = False
            x = random.choice(skills)
            if x in ['bicepc', 'berserk', 'charge', 'multicast'] and player['weapon'].ranged:
                notallowed = True
            if x in ['invoker', 'bloodseeker'] and game['dungeon']:
                notallowed = True
            # if x in ['robot'] and player['weapon'].name in ['Дробовик', 'Обрез']:
            #    notallowed = True
            if x in ['sniper'] and not player['weapon'].ranged:
                notallowed = True
            if x in ['navod', 'necromant', 'defer'] and len(allys) == 0:
                notallowed = True
            if x in ['sniper', 'visor'] and player['weapon'].name in ['Дробовик']:
                notallowed = True
            if x in blockskills and game['tournier']:
                notallowed = True
            if x in ["ritualist"]:
                notallowed = True
        choiceskills.append(x)
    player['skills'] = choiceskills
    if 'oruzh' in player['skills']:
        r_weapon = random.choice(weapons)()
        
        while r_weapon.name == player['weapon'].name or r_weapon.name == "One punch":
            r_weapon = random.choice(weapons)()
        player['secondweapon'] = r_weapon
        try:
            sendm(bot, player['id'], 'Выбрано оружие для оружейника: ' + player['secondweapon'].name + '!')
        except:
            print(traceback.format_exc())


def readycheck_next_turn(game):
    return
    ready = 0
    for ids in game['players']:
        player = game['players'][ids]
        if player['ready']:
            ready += 1
    if len(game['players']) == ready:
        game['timer'].cancel()
        next_turn(game)

@bot.callback_query_handler(func=lambda call: call.data[:10] == 'selectitem')
def selectitemmm(call):
    game = int(call.data.split('?')[1])
    item = call.data.split('?')[2]
    try:
        game = games[game]
    except:
        return
    if call.from_user.id not in game['players']:
        return
    player = game['players'][call.from_user.id]
    if player['stage'] != 'selectskill' and player['stage'] != 'selectweapon':
        return
    limit = 2
    if game['bossfight']:
        limit += 1
    if player['boss']:
        limit += 1
    if game['dungeon'] and game['dungeonlvl'] >= 2:
        limit += 1
    if len(player['inventory']) >= limit:
        return
    player['inventory'].append(item)
    medit('Выбран предмет: ' + getname(item) + '!', call.message.chat.id, call.message.message_id)
    if len(player['inventory']) >= limit:
        return
    else:
        kb = getitemskb(game, player)
        sendm(bot, player['id'], 'Выберите предметы (лимит: ' + str(limit) + ').', reply_markup=kb)


@bot.callback_query_handler(func=lambda call: call.data[:11] == 'selectskill')
def selectskill(call):
    game = int(call.data.split('?')[1])
    skill = call.data.split('?')[2]
    try:
        game = games[game]
    except:
        return
    if call.from_user.id not in game['players']:
        return
    player = game['players'][call.from_user.id]
    if player['stage'] != 'selectskill':
        return
    if not game["testequipgame"] and not game["testequipgame_tournier"] and "?te%" in call.data:
        return
    limit = 2
    if 'elmo' in player['skills']:
        limit = 5
    if game['bossfight']:
        limit += 1
    if player['boss']:
        limit += 1
    if game['dungeon'] and game['dungeonlvl'] >= 2:
        limit += 1
    if game["new_limit"]:
        limit = game['dop_skills']
    if len(player['skills']) >= limit:
        return
    player['skills'].append(skill)
    if skill == 'oruzh':
        kb2 = getoruzhkb(game, player)
        medit('Выберите второе оружие.', call.message.chat.id, call.message.message_id, reply_markup=kb2)
        return
    else:
        medit('Выбрана способность: ' + getname(skill) + '!', call.message.chat.id, call.message.message_id)
    if len(player['skills']) >= limit:
        player['stage'] = None
        player['ready'] = True
        readycheck_next_turn(game)
    else:
        kb = getskillkb(game, player)
        sendm(bot, player['id'], 'Выберите способности (лимит: ' + str(limit) + ').', reply_markup=kb)


def next_turn(game, bot=bot):
    try:
        # try:
        #    game['timer'].cancel()
        # except:
        #    pass
        # idstoremove = []
        # for ids in game['alltimers']:
        #    try:
        #        ids.cancel()
        # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
        #        idstoremove.append(ids)
        #    except:
        #        pass
        # for ids in idstoremove:
        #    game['alltimers'].remove(ids)

        #print("8550: neurodemon1", game['fullneuraldemon1'])
        game['stage'] = None
        if game['turn'] == 1 and not game['providets'] and not game['was_1_turn']:
            game['was_1_turn'] = True
            if not game['castlefight'] and not game['neuralfight']:
                wps = ''
                customtexts = []
                for ids in game['players']:
                    player = game['players'][ids]
                    xx = player['weapon'].name
                    if player['weapon'].name == 'Меч короля':
                        xx = 'Меч короля скелетов'
                    if player['weapon'].name == 'Меч дряхлого скелета':
                        xx = 'Меч'
                    if player['weapon'].name == 'Посох Некроманта':
                        xx = 'Посох некроманта'
                    if 'invoker' in player['skills']:
                        xx = 'Посох'
                    #if player['id'] == 872267409 and player['weapon'].name == 'Булава':
                    #    xx = 'Булава-хуялка'
                    #if player['weapon'].name == 'Булава' and 'zilch_bulava' in player['customtexts'] and player['customtexts']['zilch_bulava']:
                    #    xx = 'Булава Нарсил'
                    #if player['weapon'].name == 'Огнемет' and 'zilch_flamethrower' in player['customtexts'] and player['customtexts']['zilch_flamethrower']:
                    #    xx = 'Огнемет Нарсил'
                    
                    if player['weapon'].name == 'Булава' and' semw_bulava' in player['customtexts'] and player['customtexts']['semw_bulava']:
                        xx = 'Палка-хуялка'
                    if player['weapon'].name == 'Револьвер' and 'zilch_revolver' in player['customtexts'] and player['customtexts']['zilch_revolver']:
                        xx = 'Револьвер Нарсил'
                    if player['weapon'].name == 'Пистолет' and 'zilch_pistol' in player['customtexts'] and player['customtexts']['zilch_pistol']:
                        xx = 'Пистолет Нарсил'
                    if player['weapon'].name == 'Пиломет' and 'zilch_saw' in player['customtexts'] and player['customtexts']['zilch_saw']:
                        xx = 'Пиломет Нарсил'
                    if player['weapon'].name == 'Пулемет' and 'zilch_machinegun' in player['customtexts'] and player['customtexts']['zilch_machinegun']:
                        xx = 'Пулемет Нарсил'
                    if player['weapon'].name == 'Лук' and 'zilch_bow' in player['customtexts'] and player['customtexts']['zilch_bow']:
                        xx = 'Лук Нарсил'
                    if player['weapon'].name == 'Дробовик' and 'zilch_drobovik' in player['customtexts'] and player['customtexts']['zilch_drobovik']:
                        xx = 'Дробовик Нарсил'
                    if player['weapon'].name == 'Обрез' and 'zilch_obrez' in player['customtexts'] and player['customtexts']['zilch_obrez']:
                        xx = 'Обрез Нарсил'
                    if player['weapon'].name == 'Огнемет' and 'alex_flamethrower' in player['customtexts'] and player['customtexts']['alex_flamethrower']:
                        xx = 'Пасть Дракона'
                    if player['weapon'].name == 'Цепь' and 'tuman_chain' in player['customtexts'] and player['customtexts']['tuman_chain']:
                        xx = 'Клинок Тумана 🌙'
                    if player['weapon'].name == 'Шест' and 'bibizyan_shest' in player['customtexts'] and player['customtexts']['bibizyan_shest']:
                        xx = 'Шест Бибизян 🐵'
                    dp = ""
                    if "dragon_power" in player["skills"]:
                        dp = "🐦‍🔥|"
                    if game['cwrats'] or game['cwduel'] or game['cwduelrats']:
                        wps += dp+player['name'] + ': ' + xx + ' lvl.' + str(player['weapon'].lvl) + '\n'
                    else:
                        wps += dp+player['name'] + ': ' + xx + '\n'
                        if xx == 'One punch':
                            wps += '❗️Против ' + player['name'] + ' пришли сражаться скелет и крыса!\n'
                            player['photo'] = onepunchphoto
                    if len(player['customtexts']) > 0:
                        for idss in player['customtexts']:
                            if player['customtexts'][idss]:
                                customtexts.append(idss)
                ctextinfo = ''
                textkb = types.InlineKeyboardMarkup()
                if len(customtexts) > 0:
                    textkb.add(types.InlineKeyboardButton(text = 'Инфо о кастомных текстах', callback_data = 'customtextinfo?'+str(game['id'])))
                    game['customtextlist'] = customtexts
                    ctextinfo = '\n❗️В игре присутствуют измененные описания действий и способностей. Получить информацию в ЛС можно, нажав на кнопку ниже.\n'
                if game['teamplay']:
                    teamtext = ''
                    teams = {}
                    for ids in game['players']:
                        player = game['players'][ids]
                        if player['team'] not in teams:
                            teams.update({player['team']: [player['id']]})
                        else:
                            teams[player['team']].append(player['id'])
                    i = 1
                    for ids in teams:
                        teamtext += 'Команда ' + str(i) + ': '
                        for idss in teams[ids]:
                            teamtext += game['players'][idss]['name'] + ', '
                        teamtext = teamtext[:len(teamtext) - 2]
                        teamtext += '\n'
                        i += 1
                    while True:
                        tries = 0
                        try:
                            sendm(bot, game['id'], teamtext)
                            break
                        except:
                            tries += 1
                            if tries > 100:
                                del games[game['id']]
                                return
                            time.sleep(3)
                if game['cwrats'] or game['cwduel'] or game['cwduelrats'] or game['cwbar']:
                    for ids in game['players']:
                        player = game['players'][ids]
                        if player['controller'] != 'bot':
                            try:
                                sendm(bot, player['id'], 'Выбор оружия:\n' + wps)
                            except:
                                pass
                else:
                    while True:
                        tries = 0
                        try:
                            sendm(bot, game['id'], 'Способности выбраны, игра начинается. Выбор оружия:\n' + wps+ctextinfo, reply_markup = textkb)
                            break
                        except:
                            tries += 1
                            if tries > 100:
                                del games[game['id']]
                                return
                            time.sleep(3)
            knight_talk = False
            for ids in game['players']:
                player = game['players'][ids]

                # cwratskills = ['armor?1', 'armor?2', 'armor?3', 'resistant?1', 'resistant?2', 'resistant?3', 'dvuzhil?1', 'dvuzhil?2', 'dvuzhil?3',
                #   'zapas?1', 'zapas?2', 'zapas?3', 'enduring?1', 'enduring?2', 'enduring?3']

                if 'resistant?1' in player['skills']:
                    player['dmglimit'] += 1
                    player['maxdmglimit'] += 1
                if 'resistant?2' in player['skills']:
                    player['dmglimit'] += 2
                    player['maxdmglimit'] += 2
                if 'resistant?3' in player['skills']:
                    player['dmglimit'] += 4
                    player['maxdmglimit'] += 4

                if 'dvuzhil?1' in player['skills']:
                    player['hp'] += 1
                    player['maxhp'] += 1
                    player['bloodresist'] += 0
                if 'dvuzhil?2' in player['skills']:
                    player['hp'] += 1
                    player['maxhp'] += 1
                    player['bloodresist'] += 1
                if 'dvuzhil?3' in player['skills']:
                    player['hp'] += 2
                    player['maxhp'] += 2
                    player['bloodresist'] += 1

                if 'enduring?1' in player['skills']:
                    player['energy'] += 0
                    player['maxenergy'] += 0
                if 'enduring?2' in player['skills']:
                    player['energy'] += 1
                    player['maxenergy'] += 1
                if 'enduring?3' in player['skills']:
                    player['energy'] += 2
                    player['maxenergy'] += 2

                if 'zapas?1' in player['skills'] or 'zapas?2' in player['skills'] or 'zapas?3' in player['skills']:
                    if 'zapas?1' in player['skills']:
                        rangeamount = 1
                    if 'zapas?2' in player['skills']:
                        rangeamount = 2
                    if 'zapas?3' in player['skills']:
                        rangeamount = 3
                    lst = cwratitems.copy()
                    if player['controller'] == 'bot':
                        lst = cwratitems.copy()
                    for i in range(rangeamount):
                        notallowed = True
                        x = random.choice(lst)
                        if len(player['inventory']) < len(lst):
                            while x in player['inventory'] or notallowed:
                                x = random.choice(lst)
                                notallowed = False
                        player['inventory'].append(x)

                if 'invoker' in player['skills']:
                    player['skills'] = ['invoker']
                    player['weapon'] = weaponlist.Staff()
                    player['energy'] = 3
                    player['maxenergy'] = 3
                if 'dvuzhil' in player['skills'] or 'dvuzhil_classic' in player['skills']:
                    if player['is_dark_rat']:
                        pass
                    else:
                        player['hp'] += 1
                    player['maxhp'] += 1
                if 'cherep' in player['skills'] or 'cherep_classic' in player['skills']:
                    player['dmglimit'] += 3
                    player['maxdmglimit'] += 3
                    player['chereparmor'] += 3
                if 'cherep?1' in player['skills']:
                    player['dmglimit'] += 1
                    player['maxdmglimit'] += 1
                if 'cherep?2' in player['skills']:
                    player['dmglimit'] += 3
                    player['maxdmglimit'] += 3
                if 'cherep?3' in player['skills']:
                    player['dmglimit'] += 5
                    player['maxdmglimit'] += 5
                if ('medic' in player['skills'] or 'medic?1' in player['skills'] or 'medic?2' in player[
                    'skills'] or 'medic?3' in player['skills']):
                    player['inventory'].append('stimulator')
                if 'berserk' in player['skills'] or 'berserk_classic' in player['skills']:
                    player['maxenergy'] = 3
                    player['energy'] = player['maxenergy']
                if 'elmo' in player['skills']:
                    player['hp'] -= 3
                    game['text'] += '⚡️|Разряд молнии бьет в ' + player['name'] + '.\n'
                    game['text'] += '♥️' * player['hp'] + '|' + player['name'] + ' теряет 3 жизни. Остается ' + str(
                        player['hp']) + ' хп.\n'
                    if 'berserk' in player['skills']:
                        hp = 3
                        maxen = 9
                        if 'protivogaz' in player['skills']:
                            maxen += 1
                        if player['maxenergy'] < maxen:
                            player['maxenergy'] += hp
                        if 'alex_berserk' in player['customtexts'] and player['customtexts']['alex_berserk']:
                            game['text'] += '👿|Разум Архидемона '+player['name']+' разрушается! Получает '+str(hp)+' энергии.\n'
                        elif 'tuman_berserk' in player['customtexts'] and player['customtexts']['tuman_berserk']:
                            game['text'] += '◼️|' +player['name']+ ' горит чёрным пламенем! Получает '+str(hp)+' энергии.\n'
                        else:
                            game['text'] += '😡|Берсерк '+player['name']+' получает '+str(hp)+' энергии.\n'
                        player['maxenergy'] += hp
                        player['energy'] += hp
                        if player['maxenergy'] > maxen:
                            player['maxenergy'] = maxen
                        if player['hp'] == 1:
                            if 'alex_berserk' in player['customtexts'] and player['customtexts']['alex_berserk']:
                                game['text'] += '👿|Разум Архидемона '+player['name']+' разрушен! Архидемон впадает в безумие!\n'
                            elif 'tuman_berserk' in player['customtexts'] and player['customtexts']['tuman_berserk']:
                                game['text'] += '🖤|' +player['name']+ ' вспыхивает черным огнем, и обретает Истинную форму!\n'
                            else:
                                game['text'] += '😡|Берсерк '+player['name']+' входит в боевой транс!\n'
                if 'protivogaz' in player['skills']:
                    player['maxenergy'] += 1
                    player['energy'] += 1
                if 'protivogaz?1' in player['skills']:
                    player['maxenergy'] += 0
                    player['energy'] += 0
                if 'protivogaz?2' in player['skills']:
                    player['maxenergy'] += 0
                    player['energy'] += 0
                if 'protivogaz?3' in player['skills']:
                    player['maxenergy'] += 1
                    player['energy'] += 1
                if 'pyrotech' in player['skills'] or 'pyrotech?1' in player['skills'] or 'pyrotech?2' in player[
                    'skills'] or 'pyrotech?3' in player['skills']:
                    player['inventory'].append('bomb')
                if ('alchemist' in player['skills'] or 'alchemist?1' in player['skills'] or 'alchemist?2' in player[
                    'skills'] or 'alchemist?3' in player['skills']):
                    player['inventory'].append('madpotion')
                if 'autist' in player['skills']:
                    player['hp'] += 2
                    player['maxhp'] += 2
                if player['boss']:
                    player['hp'] += 1
                    player['maxhp'] += 1
                if 'vampire' in player['skills']:
                    player['hp'] += 1
                    player['maxhp'] += 1
                if 'demonlord' in player['skills']:
                    player['hp'] -= 1
                    player['maxhp'] -= 1
                # if 'demon' in player['skills']:
                #    player['maxhp'] += 1000
                lst = items.copy()
                if player['controller'] == 'bot':
                    lst = npcitems.copy()
                if ('zapas' in player['skills'] or 'zapas_classic' in player['skills']) and len(player['inventory']) < len(lst):
                    for i in range(2):
                        notallowed = True
                        x = random.choice(lst)
                        while x in player['inventory'] or notallowed:
                            x = random.choice(lst)
                            notallowed = False
                            if x in ['bint'] and game['tournier']:
                                notallowed = True
                        player['inventory'].append(x)
                if 'narkoman' in player['skills'] or 'narkoman_classic' in player['skills']:
                    x = random.choice(['adrenaline', 'dzet', 'hitin'])
                    player['inventory'].append(x)
                if 'narkoman?2' in player['skills']:
                    x = random.choice(['adrenaline', 'dzet', 'hitin'])
                    player['inventory'].append(x)
                if 'narkoman?3' in player['skills']:
                    x = random.choice(['adrenaline', 'dzet', 'hitin'])
                    player['inventory'].append(x)
                if ('berserk' in player['skills'] or 'berserk_classic' in player['skills']) and ('sadist' in player['skills'] or 'sadist_classic' in player['skills']):
                    player['skills'].append('bloodlust')
                    if not game['castlefight']:
                        try:
                            sendm(bot, player['id'],
                                             'Вы активируете секретную способность - кровожадность! Шанс попасть по соперникам, у которых меньше половины ХП, увеличен.')
                        except:
                            pass
                if ('dvuzhil' in player['skills'] or 'dvuzhil_classic' in player['skills']) and ('cherep' in player['skills'] or 'cherep_classic' in player['skills']):
                    player['skills'].append('regeneration')
                    if not game['castlefight']:
                        try:
                            sendm(bot, player['id'],
                                             'Вы активируете секретную способность - регенерация! После потери ХП у вас есть шанс восстановить его.')
                        except:
                            pass
                if 'necromant' in player['skills'] and 'ritualist' in player['skills']:
                    player['skills'].append('warlock')
                    if not game['castlefight']:
                        try:
                            sendm(bot, player['id'],
                                             'Вы активируете секретную способность - чернокнижник! После того, как кто-то погибнет, вы можете взорвать его труп и нанести 2 урона всем соперникам.')
                        except:
                            pass
                for idss in player['getbuffs2']:
                    if idss == 'accuracy':
                        player['weapon'].accuracybonus += 2
                    if idss == 'hp':
                        player['maxhp'] += 1
                        player['hp'] += 1
                    if idss == 'armor':
                        player['selfarmor'] += 1
                        player['dmglimit'] += 1
                        player['selfarmorchance'] = 50
                    if idss == 'energy':
                        player['maxenergy'] += 1
                        player['energy'] += 1
                    if idss == '+3shields':
                        for i in range(2):
                            player['inventory'].append('shield')
                        for i in range(1):
                            player['inventory'].append('adrenaline')
                            player['inventory'].append('flash')
                            player['weapon'].accuracybonus += 1

                for idss in player['getbuffs3']:
                    if idss == 'hypnotist':
                        player['skills'].append('hypnotist')
                    if idss == 'armor++':
                        player['selfarmor'] += 2
                        player['dmglimit'] += 2
                        player['selfarmorchance'] = 60
                    if idss == 'energy++':
                        player['maxenergy'] += 2
                        player['energy'] += 2
                if not game['castlefight'] and not game['neuralfight']:
                    if 'Некромант' in player['name'] and player['controller'] == 'bot':
                        try:
                            time.sleep(2)
                            sendm(bot, game['id'],
                                             'Вы спускаетесь на самый последний этаж подземелья, и видите арку. Видимо, там и находится финальный босс.')
                            time.sleep(3)
                            sendm(bot, game['id'],
                                             'Войдя внутрь, вы обнаруживаете огромный, местами обрушившийся зал, вдоль которого стоят белые колонны из мрамора. ' +
                                             'В конце зала расположен трон, на котором восседает человекоподобное существо, лица которого не разглядеть.')
                            time.sleep(5)
                            sendm(bot, game['id'],
                                             'Вы решаете подойти ближе. Теперь вы видите два ярких огня, находящихся там, ' +
                                             'где должны быть глаза существа. В руках у него - ' +
                                             'посох, на конце которого висит потрескавшийся череп.')
                            time.sleep(5)
                            heroes = 0
                            for idss in game['players']:
                                if player['controller'] != 'bot':
                                    heroes += 1
                            if heroes > 1:
                                sendm(bot, game['id'],
                                                 '💬' + player['name'] + ': Зря вы пришли сюда, смертные. Но уже ' + \
                                                 'слишком поздно бежать - узрите же мощь моих скелетов-мутантов!')
                            else:
                                sendm(bot, game['id'],
                                                 '💬' + player['name'] + ': Зря ты пришел сюда, смертный. Но уже ' + \
                                                 'слишком поздно бежать - узри же мощь моих скелетов-мутантов!')
                        except:
                            sendm(bot, pasyuk_id, traceback.format_exc())

                    if player['is_radiodemon']:
                        try:
                            completedhell = True
                            for idss in game['players']:
                                target = game['players'][idss]
                                if target['controller'] == 'player':
                                    if not target['completed_hell']:
                                        completedhell = False
                            if game['simulate_first_run']:
                                completedhell = False
                            if not completedhell:
                                time.sleep(2)
                                sendm(bot, game['id'],
                                                 'Вы продолжаете свой поход по аду. В один момент перед вами возникает человек в красном одеянии, который не перестает улыбаться.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                                 '💬'+player['name'] + ': Добро пожаловать! Вот мы и встретились... Я вас не помню, да это уже и не важно.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                                 '💬'+player['name'] + ': Веселье начинается!')
                                time.sleep(3)
                            else:
                                game['completed_hell'] = True
                                time.sleep(2)
                                sendm(bot, game['id'],
                                                 'Вы продолжаете свой поход по аду. В один момент перед вами возникает человек в красном одеянии, который не перестает улыбаться.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                                 '💬' + player[
                                                     'name'] + ': Добро пожаловать! Вот мы и встретились... Погодите-ка, а вас я помню! Вам удалось выжить, сражаясь СО МНОЙ!')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                                 '💬' + player['name'] + ': Пожалуй, в этот раз я не буду использовать те приёмы, вроде затягивания ваших душ прямиком в глубины '+\
                                                 'ада и прочее... Покажите мне, на что способны, без ваших посохов, тёмных энергий и рывков!')
                                time.sleep(3)
                        except:
                            sendm(bot, pasyuk_id, traceback.format_exc())

                    if player['is_dark_boss']:
                        try:
                            time.sleep(2)
                            sendm(bot, game['id'],
                                             'Вы входите в следующую комнату подземелья. Из-за беспросветной тьмы вы не можете определить, ' + \
                                             'где находятся стены, и есть ли они вообще.')
                            time.sleep(3)
                            sendm(bot, game['id'],
                                             'Спустя некоторое время вы смогли различить глаз, который смотрит на вас из темноты.')
                            time.sleep(3)
                            sendm(bot, game['id'],
                                             'А затем - еще несколько. И еще. Вся комната в пределах вашей видимости наполнена висящими' + \
                                             ' в воздухе глазами. И взгляд каждого из них направлен в вашу сторону.')
                            time.sleep(4)
                            sendm(bot, game['id'],
                                             'Вы оборачиваетесь, и не обнаруживаете позади себя двери. Но была ли она там? Вы не уверены.')
                            time.sleep(3)
                            sendm(bot, game['id'],
                                             'Вы попытались атаковать один из парящих в воздухе глаз, но ваши дижения оказались ' + \
                                             'слишком замедленны. Глаз легко уходит от атаки и продолжает смотреть на вас... Страх наполняет вас.')
                            time.sleep(4)
                            sendm(bot, game['id'],
                                             'Тьма вокруг немного отступила, и вы увидели нечто, что очень сильно напугало вас. ' + \
                                             'Вы даже не можете понять, что это было, но вы понимаете, что надо бежать.')
                            time.sleep(4)
                            sendm(bot, game['id'],
                                             'Вы развернулись и побежали по пустому помещению, не видя ничего дальше собственной руки. ' + \
                                             'Вы слышите, как нечто бежит за вами. Кажется, оно пытается достать до вас своей конечностью...')
                            time.sleep(4)
                            for idss in game['players']:
                                target = game['players'][idss]
                                if target['controller'] == 'player' and target['team'] != player['team']:
                                    target['darkness_sleep'] = True

                        except:
                            sendm(bot, pasyuk_id, traceback.format_exc())
                    if player['is_knight'] and not knight_talk and game["dungeon"]:
                        knight_talk = True
                        try:
                            time.sleep(2)
                            sendm(bot, game['id'],
                                             'Вы выходите на просторную территорию замка.')
                            time.sleep(2)
                            sendm(bot, game['id'],
                                  'Вас окружают высокие башни и стены.')
                            time.sleep(3)
                            sendm(bot, game['id'],
                                             '...Но никто не пришел.')

                            time.sleep(2)
                            sendm(bot, game['id'],
                                  'Вы осматриваете окрестности пустого замка, как вдруг из предыдущей комнаты послышались металлические звуки.')

                            time.sleep(3)
                            sendm(bot, game['id'],
                                  'Спустя несколько секунд перед вами оказывается рыцарь в железных доспехах.')
                            time.sleep(2)
                            year = datetime.now().year
                            sendm(bot, game['id'],
                                  '💬' + player[
                                      "name"] + ': Ты прошел через моего мини-носорога... Неудивительно. Видел вообще цены на нормальных носорогов? '+str(year)+" на дворе...")
                            time.sleep(3)
                            sendm(bot, game['id'],
                                  '💬'+player["name"]+': Но не каждому под силу одолеть меня в форме дракона. Теперь сразись со мной в человеческом обличье!')
                            time.sleep(3)
                            if player["weapon"].name == "Посох Некроманта":
                                sendm(bot, game['id'],
                                      'Он достал свое оружие и покрутил в руках.')
                                time.sleep(2)
                                sendm(bot, game['id'],
                                      '💬' + player[
                                          "name"] + ': Я тут недавно прошел данж некроманта. Настало время испытать посох в бою...')
                                time.sleep(3)
                            if player["weapon"].name == "Электрошокер":
                                sendm(bot, game['id'],
                                      'Он достал свое оружие и покрутил в руках.')
                                time.sleep(2)
                                sendm(bot, game['id'],
                                      '💬' + player[
                                          "name"] + ': Бродил по давно забытым полям битв, и нашел вот такое оружие. Настало время испытать его возможности.')
                                time.sleep(3)
                            if player["weapon"].name == "Лук Асгард":
                                sendm(bot, game['id'],
                                      'Он достал свое оружие и покрутил в руках.')
                                time.sleep(2)
                                sendm(bot, game['id'],
                                      '💬' + player[
                                          "name"] + ': Интересная модификация лука, подсмотрел её у одного игрока. Если хорошо натянуть - бьет больно...')
                                time.sleep(3)
                            if player["weapon"].name == "Катана":
                                sendm(bot, game['id'],
                                      'Он достал свое оружие и покрутил в руках.')
                                time.sleep(2)
                                sendm(bot, game['id'],
                                      '💬' + player[
                                          "name"] + ': Попрактиковался на разбойниках с этой штукой. Они так и не поняли, почему щит их не спас.')
                                time.sleep(3)
                            if player["weapon"].name == "Копье Нарсил":
                                sendm(bot, game['id'],
                                      'Он достал свое оружие и покрутил в руках.')
                                time.sleep(2)
                                sendm(bot, game['id'],
                                      '💬' + player[
                                          "name"] + ': Ходят слухи, что раньше существовал материал, с помощью которого наконечник этого копья делали еще более смертоносным... Но нынешняя модификация тоже хороша.')
                                time.sleep(3)


                        except:
                            sendm(bot, pasyuk_id, traceback.format_exc())

            if game['dungeon'] and game['dungeon_type'] == 'hell' and game['dungeonlvl'] == 2:
                for ids in game['players']:
                    target = game['players'][ids]
                    setfire(game, target, target, 12)
                game['text'] += '📜|По аду эхом раздается голос, очень похожий на звук радио:\n'
                game['text'] += '💬❓❓: Приветствую новых гостей в аду! Холодновато здесь, не правда ли? Пора это исправить!\n'
                game['text'] += '📜|Огненный вихрь проносится по полю битвы, поджигая все, что встречает у себя на пути.\n'

        if game['gl']:
            gl = []
            for ids in game['players']:
                player = game['players'][ids]
                if 'gurren' in player['skills'] or 'lagann' in player['skills']:
                    gl.append(player)
            if len(gl) == 2:
                p1 = gl[0]
                p2 = gl[1]
                sendm(bot, game['id'], 'Мужское слияние, Гуррен-Лаганн ' + p1['name'] + ' и ' + p2[
                    'name'] + ' выходит на поле боя!')

        for ids in game['players']:
            player = game['players'][ids]
            if 'berserk' in player['skills'] or 'berserk?1' in player['skills'] or 'berserk?2' in player[
                'skills'] or 'berserk?3' in player['skills']:
                digit = 4 - player['maxhp']
                player['maxenergy'] = 3 + digit + (player['maxhp'] - player['hp'])
                if player['maxenergy'] < 1:
                    player['maxenergy'] = 1
                if 'protivogaz' in player['skills']:
                    player['maxenergy'] += 1
                player['maxenergy'] -= player['electrolostenergy']
                if player['energy'] > player['maxenergy']:
                    player['energy'] = player['maxenergy']
            if ('inzhener' in player['skills'] or 'inzhener?1' in player['skills'] or 'inzhener?2' in player[
                'skills'] or 'inzhener?3' in player['skills']):
                player['inzheneritems'] = []
                givei = 2
                if 'inzhener?2' in player['skills'] or 'inzhener?3' in player['skills'] or 'inzhener' in player[
                    'skills']:
                    givei = 3
                while len(player['inzheneritems']) < givei:
                    x = random.choice(items)
                    while x in player['inzheneritems']:
                        x = random.choice(items)
                    player['inzheneritems'].append(x)
            if not game['providets']:
                if player['dead'] or player['stun'] > 0:
                    player['ready'] = True
                    player['stage'] = None
                    player['bulavabonus'] = 0
                    player['lasttarget'] = None
            else:
                if player['dead'] or player['stun'] > 0 or not player['providets']:
                    player['ready'] = True
                    player['stage'] = None
        for ids in game['players']:
            player = game['players'][ids]
            if not game['providets']:
                if player['controllable_necrofighter'] != None:
                    player['act'] = ['control_necrofighter', 'self']
                    player['ready'] = True
                    player['stage'] = None
                    continue
                if not player['dead'] and player['stun'] <= 0 and player['meditation'] == None:
                    if player['attack_self']:
                        player['attack_self'] = False
                        player['ready'] = True
                        player['stage'] = None
                        player['act'] = ['attack', player['id']]
                    else:
                        if not player['suicide']:
                            player['ready'] = False
                            player['stage'] = 'turn'
                        if ('vor?3' in player['skills']) and random.randint(1, 100) <= 20:
                            player['passivevor'] = True
                        if player['controller'] == 'player' or player['master'] != None:
                            kb = getfightkb(game, player)
                            text = getplayertext(game, player)
                            try:
                                if player['master'] != None:
                                    if game['players'][player['master']]['stun'] <= 0:
                                        if game['players'][player['master']]["controller"] != "bot":
                                            msg = sendm(bot, player['master'], text, reply_markup=kb)
                                            player['msg'] = msg
                                        else:
                                            npcact(game, player)
                                            player['ready'] = True
                                            player['stage'] = None
                                    else:
                                        player['act'] = ['skip', 'self']
                                        player['ready'] = True
                                        player['stage'] = None
                                else:
                                    if player['controllable_necrofighter'] == None:
                                        if player['EXPLOSION'] == None:
                                            # print(player['id'])
                                            # print(bot)
                                            msg = sendm(bot, player['id'], text, reply_markup=kb)
                                            player['msg'] = msg
                                        else:
                                            player['act'] = ['EXPLOSION2', player['EXPLOSION']]
                                            player['ready'] = True
                                            player['stage'] = None
                                    else:
                                        player['act'] = ['control_necrofighter', 'self']
                                        player['ready'] = True
                                        player['stage'] = None
                            except:
                                sendm(bot, pasyuk_id, traceback.format_exc())

                        else:
                            if not game['castlefight']:
                                if player['is_necromant']:
                                    npcact_necromant(game, player)
                                    player['ready'] = True
                                    player['stage'] = None
                                elif player['is_dark_boss']:
                                    npcact_darkness(game, player)
                                    player['ready'] = True
                                    player['stage'] = None
                                elif player['is_radiodemon']:
                                    npcact_radiodemon(game, player)
                                    player['ready'] = True
                                    player['stage'] = None
                                else:
                                    if game['pureduel_rats']:
                                        if game['neuralfight']:
                                            npcact_fullneural(game, player)
                                        elif game['pureduel_rats_hard']:
                                            npcact_fullneural(game, player)
                                        else:
                                            npcact_duel(game, player)
                                    else:
                                        if player["EXPLOSION"] != None:
                                            player['act'] = ['EXPLOSION2', player['EXPLOSION']]
                                            player['ready'] = True
                                            player['stage'] = None
                                        else:
                                            if player['burrowtarget'] == None:
                                                npcact(game, player)
                                            else:
                                                player['act'] = ['burrow2', player['burrowtarget']]
                                                player['ready'] = True
                                                player['stage'] = None
                                    if player['master'] == None:
                                        player['ready'] = True
                                        player['stage'] = None
                            else:
                                if player['darkcastle_demon']:
                                    npcact_darkdemon(game, player)
                                else:
                                    npcact(game, player)
                                player['ready'] = True
                                player['stage'] = None
            else:
                if player['EXPLOSION'] != None:
                    player['EXPLOSION'] = None
                if not player['dead'] and player['stun'] <= 0 and player['providets']:
                    if not player['suicide']:
                        player['ready'] = False
                        player['stage'] = 'turn'
                    player['dopuseditems'] = []
                    player['createillusion'] = False
                    player['demonform'] = False
                    kb = getfightkb(game, player)
                    text = getplayertext(game, player)
                    msg = sendm(bot, player['id'], text, reply_markup=kb)
                    player['msg'] = msg
        if not game['providets']:
            secs = 120
        else:
            secs = 90
        game['stage'] = 'turn'
        if not game['castlefight'] and not game['neuralfight']:
            # t = threading.Timer(secs, end_turn, args = [game, bot])
            # t.start()
            # game['timer'] = t
            # game['alltimers'].append(t)
            game['turntimer'] = time.time()
        else:
            end_turn(game)
    except:
        sendm(bot, pasyuk_id, traceback.format_exc())


def fightact(call, bot=bot):
    game = int(call.data.split('?')[1])
    act = call.data.split('?')[2]
    if bot == cwbot:
        try:
            game = cwgames[game]
        except:
            return
    else:
        try:
            game = games[game]
        except:
            return
    if call.from_user.id not in game['players']:
        return
    player = game['players'][call.from_user.id]
    if player['controllable_necrofighter'] != None:
        player = game['players'][player['controllable_necrofighter']]
    if player["msg"] == None or player["msg"].message_id != call.message.message_id:
        return
    if player['stage'] != 'turn':
        return
    seetext = None
    if act == 'attackselect':
        sniper = False
        if player['weapon'].name == 'Снайперская винтовка':
            sniper = True
        kb = gettargetkb(game, player, 'attack', 'enemy', sniper)
        medit('Выберите цель для атаки:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'attack':
        target = int(call.data.split('?')[3])
        player['act'] = ['attack', target]
        targetname = game['players'][target]['name']
        seetext = 'Выбрано: атака ' + targetname
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'lastchance':
        player['act'] = ['lastchance', 'self']
        seetext = 'Выбрано: последний удар'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'die':
        player['act'] = ['die', 'self']
        seetext = 'Выбрано: умереть'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'perekat_right':
        player['act'] = ['perekat_right', 'self']
        seetext = 'Выбрано: увернуться вправо.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'perekat_left':
        player['act'] = ['perekat_left', 'self']
        seetext = 'Выбрано: увернуться влево.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'sokrush':
        target = int(call.data.split('?')[3])
        player['act'] = ['sokrush', target]
        targetname = game['players'][target]['name']
        seetext = 'Выбрано: сокрушение ' + targetname
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'chain':
        target = int(call.data.split('?')[3])
        player['act'] = ['chain', target]
        targetname = game['players'][target]['name']
        seetext = 'Выбрано: выбить оружие у ' + targetname
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'strongshot':
        target = int(call.data.split('?')[3])
        player['act'] = ['strongshot', target]
        targetname = game['players'][target]['name']
        seetext = 'Выбрано: мощный выстрел в ' + targetname
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'narsil':
        target = int(call.data.split('?')[3])
        player['act'] = ['narsil', target]
        targetname = game['players'][target]['name']
        seetext = 'Выбрано: метнуть копье в ' + targetname
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'counterattack':
        player['act'] = ['counterattack', 'self']
        seetext = 'Выбрано: контратака'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'wing_attack':
        player['act'] = ['wing_attack', 'self']
        seetext = 'Выбрано: взмах крыльями'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'pricel':
        target = int(call.data.split('?')[3])
        player['act'] = ['pricel', target]
        seetext = 'Выбрано: прицел на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'hide_in_door':
        player['act'] = ['hide_in_door', 'self']
        seetext = 'Выбрано: выбежать из комнаты'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'reload':
        player['act'] = ['reload', 'self']
        if 'robot' not in player['skills']:
            seetext = 'Выбрано: перезарядка.'
        else:
            seetext = 'Выбрано: охлаждение.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'perekat':
        if player['perekatcd'] > 0:
            bot.answer_callback_query(call.id, 'Перезарядка!')
            return
        player['act'] = ['perekat', 'self']
        seetext = 'Выбрано: перекат.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'grenadeselect':
        kb = getgrenadeselect(game, player)
        medit('Выберите гранату для гранатомета:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'shurikenamount':
        kb = getshurikenselect(game, player)
        medit('Выберите количество сюрикенов для броска:', call.message.chat.id, call.message.message_id,
              reply_markup=kb, bot=bot)
    elif act == 'multicastselect':
        kb = getmulticastselect(game, player)
        medit('Выберите множитель мультикаста:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'minetimerselect':
        kb = getminetimerselect(game, player)
        medit('Выберите, через сколько ходов произойдет взрыв:', call.message.chat.id, call.message.message_id,
              reply_markup=kb, bot=bot)
    elif act == 'inzhenerselect':
        kb = getinzhenerselect(game, player)
        medit('Выберите предмет для создания:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'EXPLOSIONselect':
        kb = gettargetkb(game, player, 'EXPLOSION', 'enemy')
        medit('Выберите цель для МАГИИ ВЗРЫВА:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'selectg':
        grenade = call.data.split('?')[3]
        player['grenade'] = grenade
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрана граната для гранатомета: ' + getname(grenade)+"\n\n"+text, call.message.chat.id, call.message.message_id,
              bot=bot, reply_markup=kb)
    elif act == 'tame_rat':
        player['used_rat_toy'] = True
        player['have_rat_toy'] = False
        medit('Использовано: игрушка для крыс. Если вы победите крысу - вы приручите её.', call.message.chat.id, call.message.message_id, bot=bot)
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        msg = sendm(bot, player['id'], text, reply_markup=kb)
        player['msg'] = msg

    elif act == 'inzhener':
        item = call.data.split('?')[3]
        player['act'] = ['inzhener', item]
        medit('Выбран предмет для создания: ' + getname(item), call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'setshurikenamount':
        amount = int(call.data.split('?')[3])
        player['shurikenstothrow'] = amount
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: ' + str(amount) + ' сюрикен(а)\n\n'+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup=kb)
    elif act == 'setmulticast':
        amount = int(call.data.split('?')[3])
        player['multicast'] = int(amount)
        #medit('Выбрано: мультикаст х' + str(amount), call.message.chat.id, call.message.message_id, bot=bot)
        player['multicastcd'] = 1
        game['text'] += '👁|' + player['name'] + ' концентрируется и пытается нанести ' + str(
            player['multicast']) + ' удар(а)!\n'
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: мультикаст х' + str(amount)+"\n\n"+text, call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
        #msg = sendm(bot, player['id'], text, reply_markup=kb)
        #player['msg'] = msg
    elif act == 'setminetimer':
        amount = call.data.split('?')[3]
        medit('Выбрано: мина на ' + str(amount) + ' ход(а)', call.message.chat.id, call.message.message_id, bot=bot)
        player['act'] = ['setmine', amount]
        player['ready'] = True
        player['stage'] = None
    elif act == 'skip':
        player['act'] = ['skip', 'self']
        seetext = 'Выбрано: пропуск хода.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'walk':
        player['act'] = ['walk', 'self']
        seetext = 'Выбрано: подойти.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'pickupweapon':
        player['act'] = ['pickupweapon', 'self']
        seetext = 'Выбрано: поднять оружие.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'chargebow':
        player['act'] = ['chargebow', 'self']
        seetext = 'Выбрано: натянуть тетиву.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'eugenwin':
        player['act'] = ['eugenwin', 'self']
        seetext = 'Выбрано: пивная победа.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'mainmenu':
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        player['selectedelements'] = []
        medit(text, call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'addition':
        kb = getadditionkb(game, player)
        text = 'Выберите предмет.'
        medit(text, call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'shieldgenselect':
        kb = gettargetkb(game, player, 'shieldgen', 'ally')
        medit('Выберите цель для щита (генератор):', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'navodselect':
        kb = gettargetkb(game, player, 'navod', 'ally')
        medit('Выберите цель для наводчика:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'vorselect':
        kb = gettargetkb(game, player, 'vor', 'enemy')
        medit('Выберите цель для кражи предмета:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'visorselect':
        kb = gettargetkb(game, player, 'visor', 'enemy')
        medit('Выберите цель для визора:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'parryselect':
        kb = gettargetkb(game, player, 'parry', 'enemy')
        medit('Выберите цель для парирования:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'ritualselect':
        kb = gettargetkb(game, player, 'ritual', 'all')
        medit('Выберите цель для ритуала:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'lightingselect':
        kb = gettargetkb(game, player, 'lighting', 'all')
        medit('Выберите цель для молнии:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'shieldselect':
        kb = gettargetkb(game, player, 'shield', 'ally')
        medit('Выберите цель для щита:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'hypnotistselect':
        kb = gettargetkb(game, player, 'hypnotist', 'enemy')
        medit('Выберите цель для гипноза:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'blowselect':
        kb = gettargetkb(game, player, 'blow', 'notblowndead')
        medit('Выберите труп для взрыва:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'flashselect':
        kb = gettargetkb(game, player, 'flash', 'enemy')
        medit('Выберите цель для световой гранаты:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'zombieupselect':
        kb = gettargetkb(game, player, 'zombieup', 'deadally')
        medit('Выберите цель для поднятия зомби:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'knifeselect':
        kb = gettargetkb(game, player, 'knife', 'enemy')
        medit('Выберите цель для метательного ножа:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'isaevselect':
        kb = gettargetkb(game, player, 'isaev', 'enemy')
        medit('Выберите цель для Исаева:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'stimulatorselect':
        kb = gettargetkb(game, player, 'stimulator', 'ally')
        medit('Выберите цель для стимулятора:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'madpotionselect':
        kb = gettargetkb(game, player, 'madpotion', 'all')
        medit('Выберите цель для сыворотки бешенсва:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'adrenalineselect':
        kb = gettargetkb(game, player, 'adrenaline', 'ally')
        medit('Выберите цель для адреналина:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'dzetselect':
        kb = gettargetkb(game, player, 'dzet', 'ally')
        medit('Выберите цель для джета:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'hitinselect':
        if game['classic_game']:
            kb = gettargetkb(game, player, 'hitin', 'ally')
        else:
            kb = gettargetkb(game, player, 'hitin', 'all')
        medit('Выберите цель для хитина:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'incvizitorselect':
        kb = gettargetkb(game, player, 'incvizitor', 'all')
        medit('Выберите цель для взора небес:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'pyrotechselect':
        kb = gettargetkb(game, player, 'pyrotech', 'enemy')
        medit('Выберите цель для бомбы:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'watershieldselect':
        kb = gettargetkb(game, player, 'watershield', 'ally')
        medit('Выберите цель для водяного щита:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'doomselect':
        kb = gettargetkb(game, player, 'doom', 'enemy')
        medit('Выберите цель для DOOM:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'meditationselect':
        kb = meditationselect(game, player)
        medit('Выберите тип медитации:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'skeletonfireselect':
        kb = gettargetkb(game, player, 'skeletonfire', 'enemy')
        medit('Выберите цель для адского огня:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'batselect':
        kb = gettargetkb(game, player, 'bat', 'enemy')
        medit('Выберите цель для летучей мыши:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'energydrainselect':
        kb = gettargetkb(game, player, 'energydrain', 'enemy')
        medit('Выберите цель, чтобы выпить энергию:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'chargeselect':
        kb = gettargetkb(game, player, 'charge', 'enemy')
        medit('Выберите цель для рывка:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'dragon_fireballselect':
        kb = gettargetkb(game, player, 'dragon_fireball', 'enemy', only_far=True)
        medit('Выберите цель для огненного шара:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'hitdownselect':
        kb = gettargetkb(game, player, 'hitdown', 'enemy')
        medit('Выберите цель для сбития с ног:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'priestselect':
        kb = gettargetkb(game, player, 'priest', 'ally')
        medit('Выберите цель для освящения оружия:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'bintselect':
        kb = gettargetkb(game, player, 'bint', 'ally')
        medit('Выберите цель для бинта:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'liramelodyselect':
        kb = getlirakb(game, player)
        medit('Выберите мелодию:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'dark_energyselect':
        kb = gettargetkb(game, player, 'dark_energy', 'all')
        medit('Выберите цель для энергии тьмы:', call.message.chat.id, call.message.message_id, reply_markup=kb,
              bot=bot)
    elif act == 'demonselect':
        kb = gettargetkb(game, player, 'demon', 'enemy')
        medit('Выберите цель для кражи жизни:', call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
    elif act == 'elementmenu':
        kb = getspellselect(game, player)
        medit(
            'В̴̞̟̇̐͜͡ӹ̶̡̙̰̟́͠б҉̗̱͚́̕͜е̴̢̠͗̕р̴̢̱̬̱҇̆и҉̨̛̠̩̃̋т̸̨̛̫̱̮̆е̶̜͐̓̕͢ э̷̢̛̳͎̦͆̔л̶͉͔͇̉͢͠е̶̡̪̉̍͠м̷̡͉͛͠е҈̢̞͚͆̓͠н҉̡̳̝̿͝т̶̧̘҇̀̚ы̸̢̠͉̍͞:̴̜̃͗͜͝',
            call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)

    elif act == 'meditationstoikost':
        # player['act'] = ['meditation', 'self']
        player['domeditation'] = True
        seetext = 'Выбрано: медитация - стойкость'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        if player['master'] == None:
            msg = sendm(bot, player['id'], text, reply_markup=kb)
        else:
            msg = sendm(bot, player['master'], text, reply_markup=kb)
        player['msg'] = msg
    elif act == 'meditationconcselect':
        kb = gettargetkb(game, player, 'meditationconc', 'enemy')
        medit('Выберите цель для медитации - концентрация:', call.message.chat.id, call.message.message_id,
              reply_markup=kb, bot=bot)
    elif act == 'energydrain':
        target = int(call.data.split('?')[3])
        player['act'] = ['energydrain', target]
        seetext = 'Выбрано: выпить энергию из ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'EXPLOSION':
        target = int(call.data.split('?')[3])
        player['act'] = ['EXPLOSION', target]
        seetext = 'Выбрано: ВЗРЫВ на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'doom':
        target = int(call.data.split('?')[3])
        player['act'] = ['doom', target]
        seetext = 'Выбрано: DOOM на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'charge':
        target = int(call.data.split('?')[3])
        player['act'] = ['charge', target]
        seetext = 'Выбрано: рывок в ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'dragon_fireball':
        target = int(call.data.split('?')[3])
        player['act'] = ['dragon_fireball', target]
        seetext = 'Выбрано: огненный шар в ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'hellfire':
        player['act'] = ['hellfire', 'self']
        seetext = 'Выбрано: адское пламя'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'meditationconc':
        target = int(call.data.split('?')[3])
        # player['act'] = ['meditation', target]
        player['domeditation'] = True
        player['meditationtarget'] = target
        seetext = 'Выбрано: медитация - концентрация на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        if player['master'] == None:
            msg = sendm(bot, player['id'], text, reply_markup=kb)
        else:
            msg = sendm(bot, player['master'], text, reply_markup=kb)
        player['msg'] = msg
    elif act == 'bicepc':
        player['bicepc'] = True
        seetext = 'Выбрано: бицепс'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        if player['master'] == None:
            msg = sendm(bot, player['id'], text, reply_markup=kb)
        else:
            msg = sendm(bot, player['master'], text, reply_markup=kb)
        player['msg'] = msg
    elif act == 'shieldgen':
        target = int(call.data.split('?')[3])
        player['act'] = ['shieldgen', target]
        seetext = 'Выбрано: щит|генератор на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'skeletonfire':
        target = int(call.data.split('?')[3])
        player['act'] = ['skeletonfire', target]
        seetext = 'Выбрано: адский огонь на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'bat':
        target = int(call.data.split('?')[3])
        player['bat'] = target
        seetext = 'Выбрано: летучая мышь на ' + game['players'][target]['name']
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit(seetext+"\n\n"+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup=kb)
        #if player['master'] == None:
        #    msg = sendm(bot, player['id'], text, reply_markup=kb)
        #else:
        #    msg = sendm(bot, player['master'], text, reply_markup=kb)
        #player['msg'] = msg
    elif act == 'vor':
        target = int(call.data.split('?')[3])
        player['act'] = ['vor', target]
        seetext = 'Выбрано: украсть предмет у ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'ritual':
        target = int(call.data.split('?')[3])
        player['act'] = ['ritual', target]
        seetext = 'Выбрано: ритуал на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'blow':
        target = int(call.data.split('?')[3])
        player['act'] = ['blow', target]
        seetext = 'Выбрано: взрыв трупа ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'lighting':
        target = int(call.data.split('?')[3])
        player['act'] = ['lighting', target]
        seetext = 'Выбрано: молния на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'isaev':
        target = int(call.data.split('?')[3])
        player['act'] = ['isaev', target]
        seetext = 'Выбрано: Исаев на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'shield':
        target = int(call.data.split('?')[3])
        player['act'] = ['shield', target]
        seetext = 'Выбрано: щит на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'navod':
        target = int(call.data.split('?')[3])
        player['act'] = ['navod', target]
        seetext = 'Выбрано: наводчик на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'hypnotist':
        target = int(call.data.split('?')[3])
        player['act'] = ['hypnotist', target]
        seetext = 'Выбрано: гипноз на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'flash':
        target = int(call.data.split('?')[3])
        player['act'] = ['flash', target]
        seetext = 'Выбрано: световая граната в ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'knife':
        target = int(call.data.split('?')[3])
        player['act'] = ['knife', target]
        seetext = 'Выбрано: метательный нож в ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'stimulator':
        target = int(call.data.split('?')[3])
        player['act'] = ['stimulator', target]
        seetext = 'Выбрано: стимулятор на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'grenade':
        player['act'] = ['grenade', 'self']
        seetext = 'Выбрано: граната'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'molotov':
        player['act'] = ['molotov', 'self']
        seetext = 'Выбрано: коктейль Молотова'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'adrenaline':
        player['adrenaline'] = True
        target = game['players'][int(call.data.split('?')[3])]
        player['dopuseditems'].append(['adrenaline', target['id']])
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: адреналин на ' + target['name']+"\n\n"+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup = kb)
        #if player['master'] == None:
        #    msg = sendm(bot, player['id'], text, reply_markup=kb)
        #else:
        #    msg = sendm(bot, player['master'], text, reply_markup=kb)
        #player['msg'] = msg
    elif act == 'illusion':
        player['createillusion'] = True
        medit('Выбрано: создать иллюзию', call.message.chat.id, call.message.message_id, bot=bot)
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        if player['master'] == None:
            msg = sendm(bot, player['id'], text, reply_markup=kb)
        else:
            msg = sendm(bot, player['master'], text, reply_markup=kb)
        player['msg'] = msg
    elif act == 'changeweapon':
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: смена оружия на ' + player['secondweapon'].name+"\n\n"+text, call.message.chat.id, call.message.message_id,
              bot=bot, reply_markup = kb)
        game['text'] += '😏|' + player['name'] + ' достаёт ' + player['secondweapon'].name + '!\n'
        x = player['secondweapon']
        player['secondweapon'] = player['weapon']
        player['weapon'] = x
        player['changeweaponcd'] = 1
       
    elif act == 'clawson':
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: выдвинуть когти\n\n'+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup=kb)
        game['text'] += '⚙️|' + player['name'] + ' выдвигает когти!\n'
        player['clawscd'] = 1
        player['claws'] = True
        try:
            if player['weapon'].lvl == 1:
                player['weapon'].cubes = 3
                player['weapon'].dmgbonus = 1
                player['weapon'].energycost = 3
                player['weapon'].accuracybonus = 2
            if player['weapon'].lvl == 2:
                player['weapon'].cubes = 4
                player['weapon'].dmgbonus = 1
                player['weapon'].energycost = 3
                player['weapon'].accuracybonus = 1
            if player['weapon'].lvl == 3:
                player['weapon'].cubes = 3
                player['weapon'].dmgbonus = 2
                player['weapon'].energycost = 3
                player['weapon'].accuracybonus = 2
            if player['weapon'].lvl == 4:
                player['weapon'].cubes = 3
                player['weapon'].dmgbonus = 2
                player['weapon'].energycost = 3
                player['weapon'].accuracybonus = 2
                if player['weapon'].modification == 2:
                    player['weapon'].cubes = 5
                    player['weapon'].accuracybonus = 1

        except:
            pass
        if player['weapon'].lvl == 0:
            player['weapon'].cubes = 4
            player['weapon'].dmgbonus = 1
            player['weapon'].energycost = 3
            player['weapon'].accuracybonus = 1
        
    elif act == 'clawsoff':
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: спрятать когти\n\n'+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup=kb)
        game['text'] += '⚙️|' + player['name'] + ' прячет когти!\n'
        player['clawscd'] = 1
        player['claws'] = False
        player['weapon'].cubes = 3
        player['weapon'].dmgbonus = 0
        player['weapon'].energycost = 2
        if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
            player['weapon'].dmgbonus = 1
        try:
            if player['weapon'].lvl == 1:
                player['weapon'].accuracybonus = 1
            if player['weapon'].lvl == 2:
                player['weapon'].accuracybonus = 2
            if player['weapon'].lvl == 3:
                player['weapon'].accuracybonus = 2
            if player['weapon'].lvl == 4:
                player['weapon'].accuracybonus = 2
        except:
            pass
        if player['weapon'].lvl == 0:
            player['weapon'].accuracybonus = 2
        
    elif act == 'dzet':
        target = game['players'][int(call.data.split('?')[3])]
        player['dopuseditems'].append(['dzet', target['id']])
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: джет на ' + target['name']+"\n\n"+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup=kb)
        
    elif act == 'priest':
        target = game['players'][int(call.data.split('?')[3])]
        player['dopriest'] = target['id']
        medit('Выбрано: освящение оружия ' + target['name'], call.message.chat.id, call.message.message_id, bot=bot)
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        if player['master'] == None:
            msg = sendm(bot, player['id'], text, reply_markup=kb)
        else:
            msg = sendm(bot, player['master'], text, reply_markup=kb)
        player['msg'] = msg
    elif act == 'hitin':
        target = game['players'][int(call.data.split('?')[3])]
        player['dopuseditems'].append(['hitin', target['id']])
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: хитин на ' + target['name']+"\n\n"+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup=kb)

    elif act == 'madpotion':
        target = game['players'][int(call.data.split('?')[3])]
        player['dopuseditems'].append(['madpotion', target['id']])
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        medit('Выбрано: сыворотка бешенства на ' + target['name']+"\n\n"+text, call.message.chat.id, call.message.message_id,
              bot=bot, reply_markup=kb)

    elif act == 'zombieup':
        target = int(call.data.split('?')[3])
        player['act'] = ['zombieup', target]
        seetext = 'Выбрано: поднять зомби ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'execution':
        target = int(call.data.split('?')[3])
        player['act'] = ['execution', target]
        seetext = 'Выбрано: казнь ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'incvizitor':
        target = int(call.data.split('?')[3])
        player['act'] = ['incvizitor', target]
        seetext = 'Выбрано: послать гнев небес на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'parry':
        target = int(call.data.split('?')[3])
        player['act'] = ['parry', target]
        seetext = 'Выбрано: парирование атак ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'firearrow':
        target = int(call.data.split('?')[3])
        player['act'] = ['firearrow', target]
        seetext = 'Выбрано: огненная стрела в ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'hitdown':
        target = int(call.data.split('?')[3])
        player['act'] = ['hitdown', target]
        seetext = 'Выбрано: сбить с ног ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'truestrike':
        target = int(call.data.split('?')[3])
        player['act'] = ['truestrike', target]
        seetext = 'Выбрано: точный удар по ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'demon':
        target = int(call.data.split('?')[3])
        # player['demonform'] = True
        player['act'] = ['demon_steal', target]
        seetext = 'Выбрано: кража жизни у ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
        # kb = getfightkb(game, player)
        # text = getplayertext(game, player)
        # if player['master'] == None:
        #    msg = sendm(bot, player['id'], text, reply_markup = kb)
        # else:
        #    msg = sendm(bot, player['master'], text, reply_markup = kb)
        # player['msg'] = msg
    elif act == 'pyrotechcharge':
        player['act'] = ['pyrotechcharge', 'self']
        seetext = 'Выбрано: улучшение бомбы'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'pyrotech':
        target = int(call.data.split('?')[3])
        player['act'] = ['pyrotech', target]
        player['dopuseditems'].append(['bomb', target])
        seetext = 'Выбрано: бросить бомбу в ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'watershield':
        target = int(call.data.split('?')[3])
        player['act'] = ['watershield', target]
        # player['dopuseditems'].append(['bomb', target])
        seetext = 'Выбрано: водяной щит на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'blockshieldweapon':
        player['act'] = ['blockshield', 'self']
        # player['dopuseditems'].append(['bomb', target])
        seetext = 'Выбрано: блок щитом'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'standup':
        player['act'] = ['standup', 'self']
        # player['dopuseditems'].append(['bomb', target])
        seetext = 'Выбрано: подняться'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None
    elif act == 'machinegun_charge':
        player['act'] = ['machinegun_charge', 'self']
        seetext = 'Выбрано: зарядить пулемет'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'blow_flamethrower':
        player['act'] = ['blow_flamethrower', 'self']
        seetext = 'Выбрано: взорвать огнемет'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'necrostaffability':
        player['act'] = ['necrostaffability', 'self']
        # player['dopuseditems'].append(['bomb', target])
        seetext = 'Выбрано: поднять мертвеца'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'bint':
        target = int(call.data.split('?')[3])
        player['act'] = ['bint', target]
        seetext = 'Выбрано: бинт на ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'invoker_charge':
        player['act'] = ['invoker_charge', 'self']
        seetext = 'Выбрано: восстановить ману'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'run':
        player['act'] = ['run', 'self']
        seetext = 'Выбрано: сбежать'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'info' and game['dungeon'] and game['dungeon_type'] == 'dark' and game['dungeonlvl'] == 2:
        player['act'] = ['amalgama_info', 'self']
        seetext = 'Выбрано: анализ амальгамы.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'info' and game['dungeon'] and game['dungeon_type'] == 'dark' and game['dungeonlvl'] == 3:
        player['act'] = ['get_calm', 'self']
        seetext = 'Выбрано: избавиться от страха.'
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'info' and (not game['dungeon'] or (game['dungeon'] and game["dungeon_type"] == "dragon")):
        if not game['classic_game']:
            player['act'] = ['get_calm_pvp', 'self']
            seetext = 'Выбрано: избавиться от страха.'
            medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
            player['ready'] = True
            player['stage'] = None
        else:
            infotext = getplayerpodrobno(game, player)
            kb = getfightkb(game, player)
            text = getplayertext(game, player)
            medit(infotext+"\n\n"+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup = kb)
            

    elif act == 'dark_energy':
        target = int(call.data.split('?')[3])
        player['act'] = ['dark_energy', target]
        seetext = 'Выбрано: энергия тьмы в ' + game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'break_weapons':
        target = int(call.data.split('?')[3])
        player['act'] = ['break_weapons', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'blood_to_enemy':
        target = int(call.data.split('?')[3])
        player['act'] = ['blood_to_enemy', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'roots':
        target = int(call.data.split('?')[3])
        player['act'] = ['roots', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'target_lighting':
        target = int(call.data.split('?')[3])
        player['act'] = ['target_lighting', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'light_sword':
        target = int(call.data.split('?')[3])
        player['act'] = ['light_sword', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'sunstrike':
        target = int(call.data.split('?')[3])
        player['act'] = ['sunstrike', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'drink_energy':
        target = int(call.data.split('?')[3])
        player['act'] = ['drink_energy', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'infection':
        target = int(call.data.split('?')[3])
        player['act'] = ['infection', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'infect_weapon':
        target = int(call.data.split('?')[3])
        player['act'] = ['infect_weapon', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'inc_energy':
        target = int(call.data.split('?')[3])
        player['act'] = ['inc_energy', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'invoker_water_shield':
        target = int(call.data.split('?')[3])
        player['act'] = ['invoker_water_shield', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'iceheart':
        target = int(call.data.split('?')[3])
        player['act'] = ['iceheart', target]
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ') н̷̧͚̗҇̏̔а҈̧͔͚҇͑͂ ' + \
                  game['players'][target]['name']
        medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
        player['ready'] = True
        player['stage'] = None

    elif act == 'selectelement':
        element = call.data.split('?')[3]
        if len(player['selectedelements']) >= 3:
            return
        player['selectedelements'].append(element)
        elemtext = ''
        for ids in player['selectedelements']:
            elemtext += elem_to_emoji(ids)
        if len(player['selectedelements']) == 3:
            spell = spell_exists(player['selectedelements'])
            if spell:
                if spell == 'freeze_energy':
                    player['act'] = ['freeze_energy', 'self']
                if spell == 'random_lighting':
                    player['act'] = ['random_lighting', 'self']
                if spell == 'summon_treant':
                    player['act'] = ['summon_treant', 'self']
                if spell == 'blood_to_all':
                    player['act'] = ['blood_to_all', 'self']
                if spell == 'change_skill':
                    player['act'] = ['change_skill', 'self']
                if spell == 'big_light_strike':
                    player['act'] = ['big_light_strike', 'self']
                if spell == 'big_virus_mutant':
                    player['act'] = ['big_virus_mutant', 'self']
                if spell == 'fire_all':
                    player['act'] = ['fire_all', 'self']
                if spell == 'roots':
                    kb = gettargetkb(game, player, 'roots', 'enemy')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'target_lighting':
                    kb = gettargetkb(game, player, 'target_lighting', 'enemy')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'blood_to_enemy':
                    kb = gettargetkb(game, player, 'blood_to_enemy', 'enemy')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'break_weapons':
                    kb = gettargetkb(game, player, 'break_weapons', 'enemy')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'light_sword':
                    kb = gettargetkb(game, player, 'light_sword', 'ally')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'sunstrike':
                    kb = gettargetkb(game, player, 'sunstrike', 'enemy')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'drink_energy':
                    kb = gettargetkb(game, player, 'drink_energy', 'enemy')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'infection':
                    kb = gettargetkb(game, player, 'infection', 'enemy')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'infect_weapon':
                    kb = gettargetkb(game, player, 'infect_weapon', 'enemy')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'inc_energy':
                    kb = gettargetkb(game, player, 'inc_energy', 'ally')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'invoker_water_shield':
                    kb = gettargetkb(game, player, 'invoker_water_shield', 'ally')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'iceheart':
                    kb = gettargetkb(game, player, 'iceheart', 'ally')
                    medit(
                        'В̸̧̫̠̍́͞ы҈̛̩̞̾̃͢б҉̡͖͎̖҇̓̒́ӗ̴̢̛̩̱̂р҉̨̛̜͎̩̿̊̃и̸̮̪̿̈̕͜т̵̢̛͕̂е̸̣͙̱͌̕͜ ц̴̡̝̗͚҇̀е̴̨̛̭͈̪̌л̵̨͉̏̏͡ь҉̢̝͆͡ д҈̨̙͖̔̀͝л҉̛͔̠́͢ͅя̵̦͖͌͌͜͡ з̶̢̣͈͐͒͠ӓ̴̧͍̪́͠ќ̶̢̣̱̓̕ͅл̸̨͓҇̚и҈̡͎̌̚͡н̵̡̪҇̎̓͗ͅа̵̧̛͕͌н҈̢̮̞̊͑͞и̸̮͍̗̍̎̊͜͠я̷̟͛̿͑̕͢:̸̧̛͈̞̲̐͆',
                        call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)
                    return
                if spell == 'suicide':
                    player['act'] = ['invoker_suicide', 'self']
            else:
                player['act'] = ['falsespell', 'self']
            seetext = 'В҈͉̟̑̕͜ͅы̸̢̖̞͋̆̾͝б҈̢̦̍͝р̶̥̣̋̓͊͢͡а҈̨̛͍̟̆̈́̓н҉̧̀͆̕ͅо̶̡͉͚̂̄̌͠:̸̢̘̃̔̋̕ з҉̡̩̝͔͗͞а̵̧͓҇̍̎̂к̶̨͇̦̜҇̈л̴̧̩̆̕и̵͍͎̱̾̉͢͞н҈̧̛̗̰̟͛а̶͇̫̽͢͝н̸̧҇̇̀̏ͅи̶̧̯̜҇̊е̸̬̭͊͋̎͢͠ (' + elemtext + ')'
            medit(seetext, call.message.chat.id, call.message.message_id, bot=bot)
            player['ready'] = True
            player['stage'] = None
        else:
            bot.answer_callback_query(call.id, 'Выбран элемент: ' + elem_to_emoji(element))
            kb = getspellselect(game, player)
            elemtext = ''
            for ids in player['selectedelements']:
                elemtext += elem_to_emoji(ids)
            medit(
                'В̴̞̟̇̐͜͡ӹ̶̡̙̰̟́͠б҉̗̱͚́̕͜е̴̢̠͗̕р̴̢̱̬̱҇̆и҉̨̛̠̩̃̋т̸̨̛̫̱̮̆е̶̜͐̓̕͢ э̷̢̛̳͎̦͆̔л̶͉͔͇̉͢͠е̶̡̪̉̍͠м̷̡͉͛͠е҈̢̞͚͆̓͠н҉̡̳̝̿͝т̶̧̘҇̀̚ы̸̢̠͉̍͞:̴̜̃͗͜͝\n' + elemtext,
                call.message.chat.id, call.message.message_id, reply_markup=kb, bot=bot)

    elif act == 'visor':
        target = game['players'][int(call.data.split('?')[3])]
        kb = getfightkb(game, player)
        text = getplayertext(game, player)
        if player['visorcd'] <= 0:
            targetinfo = getplayerpodrobno(game, target)
            medit('Выбрано: визор на ' + target['name']+"\n\n"+targetinfo+"\n\n"+text, call.message.chat.id, call.message.message_id, bot=bot, reply_markup = kb)
            player['visorcd'] = 3
        
        
    if seetext != None:
        player['seetext'] = seetext


@bot.callback_query_handler(func=lambda call: call.data[:8] == 'fightact')
def fightacttttt(call):
    fightact(call, bot=bot)


@bot.callback_query_handler(func=lambda call: call.data[:14] == 'customtextinfo')
def ctextinfoss(call):
    gameid = int(call.data.split('?')[1])
    try:
        game = games[gameid]
    except:
        bot.answer_callback_query(call.id, 'Игры не существует!')
        return
    text = ''
    for ids in game['customtextlist']:
        textinfo = getcustomtext(ids)
        text += textinfo+'\n\n'
    try:
        sendm(bot, call.from_user.id, text)
    except:
        pass


@cwbot.callback_query_handler(func=lambda call: call.data[:8] == 'fightact')
def fightacttttt(call):
    fightact(call, bot=cwbot)


def readycheck_end_turn(game):
    return
    ready = 0
    for ids in game['players']:
        player = game['players'][ids]
        if player['ready']:
            ready += 1
    if len(game['players']) == ready:
        game['timer'].cancel()
        end_turn(game)


def setfire(game, player, target, strength=1, duration=3):
    firetext = ''
    target['fireticks'] = duration
    target['who_fired'] = player['id']
    target['who_fireds'].append(player['id'])
    if ('protivogaz' in target['skills'] or 'protivogaz?1' in target['skills'] or 'protivogaz?2' in target[
        'skills'] or 'protivogaz?3' in target['skills'] or 'protivogaz_classic' in target['skills']) \
            or target['is_rhino'] or target['is_mad_skele'] or \
            target['is_vurdalak'] or is_dark_boss(target) or target["is_dragon"]:
        target['fireticks'] = 2
    if target['firestrength'] > 0:
        firetext += '🔥'*strength+'|Огонь усиливается! ('+str(target['fireticks']-1)+'🕑)'
    else:
        firetext += '🔥'*strength+'|' + target['name'] + ' загорелся! ('+str(target['fireticks']-1)+'🕑)'
    target['firestrength'] += strength
    return firetext


def get_target_dvuzhil(target):
    x = 0
    if 'dvuzhil?1' in target['skills']:
        x = 0
    if 'dvuzhil?2' in target['skills']:
        x = 1
    if 'dvuzhil?3' in target['skills']:
        x = 1
    return x


def generate_cube_hit_damage(game, player, target, sokrush=False, chain=False, narsil=False, counterattack=False, execution=False,
              granatomet=False, cubes=None, accuracy=None):
        damage = 0
        weapon = player['weapon']
        chance = player['energy']
        if cubes != None:
            weaponcubes = cubes
        else:
            weaponcubes = weapon.cubes
        if accuracy != None:
            weaponaccuracy = accuracy
        else:
            weaponaccuracy = weapon.accuracybonus
        if player['weapon'].name == 'Демоническая сила':
            player['energy'] = player['maxenergy']
        if player['weapon'].name == "Пасть собаки":
            player['dark_dog_attacks'] += 1
            if player['dark_dog_attacks'] == 2:
                player['amalgama_must_mutate'] = True
        elif player['weapon'].name == 'Теневая пушка':
            player['amalgama_must_mutate'] = True
        elif player['weapon'].name == 'Огромный тесак':
            player['amalgama_must_mutate'] = True
        if 'robot' in player['skills']:
            chance = player['hp']
        chance += weaponaccuracy
        if 'sniper' in player['skills']:
            chance += 2
        if 'sniper_classic' in player['skills']:
            chance += 2
        if 'pricel?1' in player['skills']:
            chance -= 2
        if 'pricel?2' in player['skills']:
            chance -= 1
        if 'pricel?3' in player['skills']:
            chance -= 1
        if 'visor' in player['skills'] and player['weapon'].ranged:
            chance += 1
        if 'visor_classic' in player['skills'] and player['weapon'].ranged:
            chance += 1
        if ('vor' in player['skills'] or 'vor?2' in player['skills'] or 'vor?3' in player['skills']) and player[
            'weapon'].ranged:
            chance += 1
        if 'vor_classic' in player['skills'] and player['weapon'].ranged:
            chance += 1
        if 'multicast' in player['skills'] and player['multicast'] == 2:
            chance -= 2
        if 'multicast' in player['skills'] and player['multicast'] == 3:
            chance -= 2
        if 'multicast' in player['skills'] and player['multicast'] == 4:
            chance -= 3
        chance -= player['hypnodebuff']
        # if player['weapon'].name == 'Молот' and player['energy'] == 1:
        #    chance += 1
        # chance += target['cuts']
        chaintext = False
        sokrushtext = False
        narsiltext = False
        if player['weapon'].name == 'Кувалда' and player['sokrushenie']:
            ecostt = 4
            try:
                if player['weapon'].lvl == 1:
                    ecostt = 5
                if player['weapon'].lvl == 2:
                    ecostt = 4
                if player['weapon'].lvl == 3:
                    ecostt = 3
                if player['weapon'].lvl == 4:
                    ecostt = 3
            except:
                pass
            chance += ecostt
            sokrushtext = True
        if player['weapon'].name == 'Цепь' and player['chain']:
            chance += 2
            chaintext = True

        half = target['maxhp'] / 2
        if 'bloodlust' in player['skills'] and target['hp'] < half:
            chance += 1
        if player['truestrike']:
            chance += 15
            try:
                if player['weapon'].lvl == 1 or player['weapon'].lvl == 2 or player['weapon'].lvl == 3 or player['weapon'].lvl == 4:
                    chance += 1500
            except:
                pass
        # if player['demonheal'] > 0:
        #    chance += 1
        if player['weapon'].name == 'Копье Нарсил' and player['narsil']:
            narsiltext = True
        if 'narkoman' in player['skills'] or 'narkoman?1' in player['skills'] or 'narkoman?2' in player[
            'skills'] or 'narkoman?3' in player['skills']:
            chance -= 1
            if 'narkoman?1' in player['skills']:
                chance -= 1
            if not player['attackedthisturn']:
                for ids in game['players']:
                    target2 = game['players'][ids]
                    for idss in target2['dopuseditems']:
                        itemtarget = game['players'][idss[1]]
                        if itemtarget['id'] == player['id']:
                            chance += 2
                    if target2['act'] != None and target2['act'][0] in ['stimulator'] and target2['act'][1] == player[
                        'id']:
                        chance += 2
        if 'narkoman_classic' in player['skills']:
            chance -= 1
            for ids in game['players']:
                target2 = game['players'][ids]
                for idss in target2['dopuseditems']:
                    itemtarget = game['players'][idss[1]]
                    if itemtarget['id'] == player['id']:
                        chance += 2
                if target2['act'] != None and target2['act'][0] in ['stimulator'] and target2['act'][1] == player['id']:
                    chance += 2
        if not player['weapon'].classic:
            snipermult = 6
        else:
            snipermult = 5
        if player['maintarget'] != None and player['maintarget']['target'] == target['id'] and player['weapon'].name == 'Снайперская винтовка':
            chance += (player['maintarget']['power'] * snipermult)
        if player['weapon'].name == 'Снайперская винтовка' and player['weapon'].lvl == 4 and player['weapon'].modification == 1 and random.randint(1, 100) <= 60:
            chance += (1 * snipermult)
            game['text'] += '🎲🎯|'+player['name']+' целится.\n'
        if target['act'] != None:
            if target['act'][0] == 'perekat':
                chance -= 5
                if ('ninja' in target['skills'] or 'ninja?1' in target['skills'] or 'ninja?2' in target[
                    'skills'] or 'ninja?3' in target['skills']):
                    chance -= 95
        if 'ninja?3' in target['skills']:
            chance -= 1
        if player['bowcharge'] > 0 and player['weapon'].name == 'Лук Асгард':
            chance += (player['bowcharge'])
        if 'robot' not in player['skills']:
            if player['weapon'].name != 'Кувалда' and player['weapon'].name != 'Цепь':
                if player['energy'] <= 0:
                    chance = 0
            else:
                if player['sokrushenie'] or player['chain']:
                    if player['waszero']:
                        chance = 0
                else:
                    if player['energy'] <= 0:
                        chance = 0

        if player['weapon'].name == 'Укус зомби':
            chance = 7
            chance -= (player['necrozombie'] * 2)
            if player['maxnecrozombie'] == 2:
                chance = 3
            if target['act'] != None:
                if target['act'][0] == 'perekat':
                    chance -= 5

        # if weapon.name in ['Цепь', 'Кувалда']:
        #    sendm(bot, pasyuk_id, player['name']+' бьёт цепью/кувалдой с шансом '+str(chance))
        if player['weapon'].name == 'Снайперская винтовка' and player['multicast'] > 1:
            maxchance = 999999
            if player['multicast'] == 2:
                maxchance = 5
            elif player['multicast'] == 3:
                maxchance = 4
            elif player['multicast'] == 4:
                maxchance = 3
            if chance > maxchance:
                chance = maxchance
        if 'ghoul_bloodlust' in player['skills'] and player['master'] != None:
            losthp = target['maxhp'] - target['hp']
            chance += losthp
        if player['weapon'].name in ['Копье', 'Копье Нарсил'] and counterattack:
            try:
                if player['weapon'].lvl == 3:
                    chance += 1
            except:
                pass
        if player['weapon'].name == 'Частица тьмы':
            chance = 10
        for i in range(weaponcubes):
            x = random.randint(1, 10)
            if x <= chance:
                damage += 1
        drobovik_hasnocharges = False
        # if player['weapon'].name == 'Дробовик' and player['drobovik_charges'] <= 0:
        #    damage = 0
        #    drobovik_hasnocharges = True
        # if player['weapon'].name == 'Дробовик':
        #    if player['drobovik_charges'] > 0:
        #        player['drobovik_charges'] -= 1
        if player['weapon'].name == 'Дуэльная рапира':
            en = player['energy']
            rapierdmg = 0
            while en >= 2:
                rapierdmg += 1
                en -= 2
            if en > 0:
                rapierdmg += 1
            if target['act'] != None:
                if target['act'][0] == 'perekat':
                    if player['energy'] <= 4:
                        rapierdmg = 0
                    else:
                        rapierdmg -= 2
            damage = rapierdmg
        #if player['burrowstrike']:
        #    if target['act'] != None and target['act'][0] == 'perekat':
        #        damage = 0
        lastsnipertarget = None
        if player['weapon'].name == 'Снайперская винтовка' and player['weapon'].lvl == 4 and player['weapon'].modification == 2 and damage <= 0:
            dopt = None
            enemylist = []
            for idss in game['players']:
                if game['players'][idss]['team'] != player['team'] and not game['players'][idss]['dead'] and game['players'][idss]['id'] != target['id']:
                    enemylist.append(game['players'][idss])
            if len(enemylist) > 0:
                newenemy = random.choice(enemylist)
                lastsnipertarget = target
                target = newenemy
                damage = 1
        if player['weapon'].name == "Тесак" and not player['first_hit'] and player['weapon'].lvl == 4 and player['weapon'].modification == 2:
            damage = random.randint(1, 3)
            player['set_first_hit'] = True
        return damage, chaintext, sokrushtext, narsiltext, drobovik_hasnocharges, lastsnipertarget


def attackact(game, player, target, sokrush=False, chain=False, narsil=False, counterattack=False, execution=False,
              granatomet=False):
    if player['id'] not in target['who_attacked']:
        target['who_attacked'].append(player['id'])
    if not sokrush and not chain:
        damage, chaintext, sokrushtext, narsiltext, drobovik_hasnocharges, lastsnipertarget = generate_cube_hit_damage(game, player, target, sokrush, chain, narsil, counterattack, execution, granatomet)
        weapon = player['weapon']
        if damage > 0:
            basegdmg = 0
            player['demon'] = True
            if weapon.name == 'Гранатомет':
                if player['grenade'] == 'grenade':
                    # damage = random.randint(2, 3)
                    basegdmg = damage
                else:
                    damage = 0
            if weapon.name in ['Огнемет', 'Огнемет Нарсил']:  #:, 'Пиломет']:
                damage = 1
                if weapon.lvl == 4 and weapon.modification == 2:
                    damage = 0
            if weapon.name == 'Револьвер':
                damage = 3
            if weapon.name == 'Лук Асгард':
                damage = 1
            if weapon.name == 'Сюрикены':
                damage = 2
            if weapon.name == 'Меч дряхлого скелета':
                damage = 1
            if weapon.name == 'Клыки червя':
                damage = 3
            if weapon.name == "Электрошокер":
                damage = player["energy"]
            #if weapon.name == 'Трезубец':
            #    damage = 3
            if weapon.name == 'One punch':
                damage = random.randint(999999999, 9999999999999)
            # if 'pricel?3' in player['skills']:
            #    damage += 1
            damage += player['nextturndamage']
            damage += int(player['luciferpower']*1.5)
            if player['loosedamage'] > 0:
                damage += player['loosedamage']
            if weapon.name == 'Тесак':
                # damage = 1
                damage += player['tesak_bonus']
            if 'fire_power' in player['skills']:
                for idss in game['players']:
                    if game['players'][idss]['fireticks'] > 0:
                        damage += 1
            if 'dark_energy' in player['skills']:
                bdmg = 0
                for idss in game['players']:
                    if game['players'][idss]['dark_counter'] > 0:
                        bdmg += 1
                damage += bdmg
            # if player['weapon'].name == 'Посох Некроманта':
            #    damage = 1
            tbbase = 4
            try:
                if player['weapon'].lvl == 1:
                    tbbase = 3
                if player['weapon'].lvl == 2:
                    tbbase = 4
                if player['weapon'].lvl == 3:
                    tbbase = 5
                if player['weapon'].lvl == 4:
                    tbbase = 5
                    if player['weapon'].modification == 1:
                        tbbase = 10
            except:
                pass
            if player['weapon'].name == 'Тесак':
                if player['tesak_bonus'] > 0:
                    if player['tesak_bonus'] == tbbase:
                        if tbbase == 10:
                            player['tesak_bonus'] = 4
                        else:
                            player['tesak_bonus'] -= 2
                    else:
                        player['tesak_bonus'] -= 1
                    if player['tesak_bonus'] < 0:
                        player['tesak_bonus'] = 0
            damage += target['cuts']
            strongshot = False
            if player['strongshot']:
                strongshot = True
                try:
                    if player['weapon'].lvl == 1:
                        damage += 1
                    if player['weapon'].lvl == 2:
                        damage += 1
                    if player['weapon'].lvl == 3:
                        damage += 2
                    if player['weapon'].lvl == 4:
                        damage += 2
                except:
                    pass
            if player['weapon'].name == 'Молот':
                dopd = 1
                try:
                    if player['weapon'].lvl == 3:
                        dopd = 2
                    if player['weapon'].lvl == 4 and player['weapon'].modification == 1:
                        dopd = 3
                except:
                    pass
                cenergy = player['maxenergy'] - player['energy']
                while cenergy >= 2:
                    cenergy -= 2
                    damage += dopd
            if 'ghoul_bloodlust' in player['skills'] or player['weapon'].name == 'Зубы вурдалака':
                losthp = target['maxhp'] - target['hp']
                damage += losthp
            if player['charge']:
                damage += 1
            if player['demonheal'] > 0:
                damage += 1
            if target['stun'] > 0 and 'носорог' in player['name'].lower() and player['controller'] == 'bot':
                damage += 2
            if 'autist' in player['skills']:
                damage += 1
            sokrushtext = False
            if player['weapon'].name == 'Кувалда' and player['sokrushenie']:
                if player['weapon'].classic:
                    damage = 1
                else:
                    damage = 2
                try:
                    if player['weapon'].lvl == 1:
                        damage = 1
                    if player['weapon'].lvl == 2:
                        damage = 1
                    if player['weapon'].lvl == 3:
                        damage = 2
                    if player['weapon'].lvl == 4:
                        damage = 2
                except:
                    pass
                if player['weapon'].lvl == 4 and player['weapon'].modification == 1:
                    damage += (target['maxenergy'] - target['energy'])*2
                else:
                    damage += (target['maxenergy'] - target['energy'])
                sokrushtext = True
            if 'berserk' in player['skills'] and player['hp'] == 1:
                damage += 2
            if 'berserk?1' in player['skills'] and player['hp'] == 1:
                damage += 1
            if 'berserk?2' in player['skills'] and player['hp'] == 1:
                damage += 2
            if 'berserk?3' in player['skills'] and player['hp'] == 1:
                damage += 3
            if player['weapon'].name in ['Копье', 'Копье Нарсил'] and counterattack:
                if not game['classic_game']:
                    damage += 1
                try:
                    if player['weapon'].lvl == 2:
                        damage += 1
                    if player['weapon'].lvl == 3:
                        damage += 2
                    if player['weapon'].lvl == 4 and player['weapon'].modification == 1:
                        damage += 3
                    if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                        damage += 3

                except:
                    pass
            if player['weapon'].name == 'Булава':
                if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                    damage += player['bulavabonus']*4
                else:
                    damage += player['bulavabonus']
            if player['weapon'].name == 'Глаз демона':
                damage += player['maxhp'] - player['hp']
            if player['watershield'] > 0:
                damage += 1
            if weapon.name == "Частица тьмы":
                damage = 0
            executiontext = False
            if player['weapon'].name == 'Катана':
                if target['hp'] == 1:
                    target['hp'] -= 1
                    executiontext = True

            #if player['weapon'].name == 'Пылающий клинок' and random.randint(1, 100) <= 20:
            #    if target['hp'] > 1:
            #        target['hp'] -= 1
            #        execution2text = True
            if player['weapon'].name == 'Копье Нарсил' and player['narsil']:
                damage += 1
                if player['weapon'].classic:
                    stunchance = 20 * player['energy']
                else:
                    stunchance = 20 * player['energy']
                if random.randint(1, 100) <= stunchance:
                    if target['stun'] > 0:
                        target['stun'] += 1
                    else:
                        target['stun'] = 2
                    game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
            if player['bowcharge'] > 0 and player['weapon'].name == 'Лук Асгард':
                damage += (player['bowcharge'] * 2)
            if player['weapon'].name == 'Лук Асгард':
                xx = random.randint(1, 10)
                if xx < (player['bowcharge']+3):
                    if target['blood'] <= 0:
                        target['blood'] = 4

                        if 'dvuzhil' in target['skills']:
                            target['blood'] += 2
                        target['blood'] += get_target_dvuzhil(target)
                        game['text'] += '❣️|' + target['name'] + ' истекает кровью!\n'
                    else:
                        if target['blood'] > 1:
                            target['blood'] -= 1
                        game['text'] += '❣️|' + target['name'] + ' Кровотечение усиливается!\n'

            if player['weapon'].name == 'Лук Асгард':
                xx = random.randint(1, 10)
                if xx < ((player['bowcharge']-1)*6):
                    if target['stun'] > 0:
                        target['stun'] += 1
                    else:
                        target['stun'] = 2
                    game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'

            narkomantext = False
            if 'narkoman' in player['skills'] or 'narkoman?1' in player['skills'] or 'narkoman?2' in player[
                'skills'] or 'narkoman?3' in player['skills']:
                if not player['attackedthisturn']:
                    for ids in game['players']:
                        target2 = game['players'][ids]
                        for idss in target2['dopuseditems']:
                            itemtarget = game['players'][idss[1]]
                            if itemtarget['id'] == player['id'] and idss[0] not in ['bomb']:
                                damage += 1
                                if 'narkoman?3' in player['skills']:
                                    damage += 1
                                narkomantext = True
                        if target2['act'] != None and target2['act'][0] in ['stimulator'] and target2['act'][1] == \
                                player['id']:
                            damage += 1
                            if 'narkoman?3' in player['skills']:
                                damage += 1
                            narkomantext = True

            if 'narkoman_classic' in player['skills']:
                for ids in game['players']:
                    target2 = game['players'][ids]
                    for idss in target2['dopuseditems']:
                        itemtarget = game['players'][idss[1]]
                        if itemtarget['id'] == player['id'] and idss[0] not in ['bomb']:
                            damage += 1
                            narkomantext = True
                    if target2['act'] != None and target2['act'][0] in ['stimulator'] and target2['act'][1] == \
                            player['id']:
                        damage += 1
                        narkomantext = True

            if narkomantext:
                game['effecttext'] += '🙃|' + player['name'] + ' получает бонусную точность и урон!\n'

            chaintext = False
            if player['weapon'].name == 'Цепь' and player['chain']:
                chaintext = True
                if not game['classic_game']:
                    wthrowchance = 10
                    dopwthchance = ((target['maxenergy'] - target['energy']) * 10)
                    try:
                        if player['weapon'].lvl == 1:
                            wthrowchance = 10
                            dopwthchance = ((target['maxenergy'] - target['energy']) * 10)
                        if player['weapon'].lvl == 2:
                            wthrowchance = 20
                            dopwthchance = ((target['maxenergy'] - target['energy']) * 15)
                        if player['weapon'].lvl == 3:
                            wthrowchance = 30
                            dopwthchance = ((target['maxenergy'] - target['energy']) * 20)
                        if player['weapon'].lvl == 4:
                            wthrowchance = 30
                            dopwthchance = ((target['maxenergy'] - target['energy']) * 20)
                            if player['weapon'].modification == 1:
                                wthrowchance = 100
                            elif player["weapon"].modification == 2:
                                pass
                    except:
                        pass
                else:
                    wthrowchance = 30
                if target['act'] != None and target['act'][0] == 'reload':
                    wthrowchance = 100
                if game['classic_game']:
                    if target['act'] != None and target['act'][0] == 'attack':
                        wthrowchance = 100
                if target['weapon'].name in ['Кулаки', 'Укус зомби', 'Рог', 'Рука трента', 'Конечность вируса',
                                             'Зубы вурдалака', 'Посох некроманта', 'One punch', "Щупальца", "Демоническая сила"]:
                    wthrowchance = 0
                if target['team'] == 'dark' and target['controller'] == 'bot' and (
                        'Амальгама' in target['name'] or 'Тень крысы' in target['name'] or 'Тьма' in target['name']) \
                        and game['dungeon']:
                    wthrowchance = 0
                if random.randint(1, 100) <= wthrowchance:
                    game['effecttext'] += '👐|' + target['name'] + ' теряет свое оружие!\n'
                    target['lostweapon'] = True

            if player['weapon'].name == 'Цепь' and player['weapon'].lvl == 4 and player['weapon'].modification == 1 and not player['chain']:
                wthrowchance = 40
                if target['weapon'].name in ['Кулаки', 'Укус зомби', 'Рог', 'Рука трента', 'Конечность вируса',
                                             'Зубы вурдалака', 'Посох некроманта', 'One punch']:
                    wthrowchance = 0
                if target['team'] == 'dark' and target['controller'] == 'bot' and (
                        'Амальгама' in target['name'] or 'Тень крысы' in target['name'] or 'Тьма' in target['name']) \
                        and game['dungeon']:
                    wthrowchance = 0
                if random.randint(1, 100) <= wthrowchance:
                    game['effecttext'] += '👐|' + target['name'] + ' теряет свое оружие!\n'
                    target['lostweapon'] = True

            if player["weapon"].name == "Ятаган":
                armordecchance = 50
                if random.randint(1, 100) <= armordecchance:
                    game['effecttext'] += '⛓️‍💥|Эффективность брони ' + target['name'] + ' снижена! (🕑3)\n'
                    code = 0
                    while code in target["armor_debuff_set"]:
                        code += 1
                    target["armor_debuff_set"][code] = {"duration":3, "power":1}

            hitdowntext = False
            if player['weapon'].name == 'Шест' and (player['hitdown'] or (player['weapon'].lvl == 4 and player['weapon'].modification == 1 and random.randint(1, 100) <= 40)):
                can_fell = True
                try:
                    if player['weapon'].lvl == 1:
                        if target['shield'] or (target['act'] != None and target['act'][0] == 'perekat'):
                            can_fell = False
                    if player['weapon'].lvl == 2:
                        if target['shield']:
                            can_fell = False
                except:
                    pass
                hitdowntext = True
                if not target['shield']:
                    if (target['is_rhino'] or target['is_necromant']) and target['controller'] == 'bot':
                        pass
                    else:
                        if (target['act'] == None or (target['act'] != None and target['act'][0] != 'perekat')):
                            if not target['fell']:
                                game['effecttext'] += '🚷|' + target['name'] + ' теряет равновесие и падает!\n'
                                target['fell'] = True
                                if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                                    if target['stun'] > 0:
                                        target['stun'] += 1
                                    else:
                                        target['stun'] = 2
                                    game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'

                if not target['fell']:
                    if can_fell:
                        game['effecttext'] += '🚷|' + target['name'] + ' теряет равновесие и падает!\n'
                        target['fell'] = True
                        if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                            if target['stun'] > 0:
                                target['stun'] += 1
                            else:
                                target['stun'] = 2
                            game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
            firearrow = False
            if player['weapon'].name == 'Лук' and player['firearrow']:
                damage = 0
                firearrow = True
            bicepc = False
            multicast = False
            damage += weapon.dmgbonus
            if player['weapon'].name == 'Обрез' or player['weapon'].name == 'Дробовик':
                if target['id'] in player['nearplayers']:
                    damage += 1
                    try:
                        if player['weapon'].lvl == 3 and player['weapon'].name == 'Обрез':
                            damage += 1
                    except:
                        pass
                    if player['weapon'].name == 'Обрез' and player['weapon'].lvl == 4 and player['weapon'].modification == 2 and random.randint(1, 100) <= 75:
                        if target['blood'] <= 0:
                            target['blood'] = 4
                            if 'dvuzhil' in target['skills']:
                                target['blood'] += 2
                            target['blood'] += get_target_dvuzhil(target)
                            game['text'] += '❣️|' + target['name'] + ' истекает кровью!\n'
                        else:
                            if target['blood'] > 1:
                                target['blood'] -= 1
                            game['text'] += '❣️|Кровотечение ' + target['name'] + ' усиливается!\n'
            if player['weapon'].name == 'Кастет' and target['act'] != None and target['act'][0] == 'reload':
                if target['is_vurdalak']:
                    game['effecttext'] += '⚡️' + target['name'] + ' игнорирует удар кастетом.\n'
                    # target['energy'] = target['maxenergy']
                else:
                    en = 4
                    try:
                        if player['weapon'].lvl == 1:
                            en = 3
                        if player['weapon'].lvl == 2:
                            en = 4
                        if player['weapon'].lvl == 3:
                            en = 5
                        if player['weapon'].lvl == 4:
                            en = 5
                    except:
                        pass
                    game['effecttext'] += '⚡️' + target['name'] + ' теряет ' + str(en) + ' энергии.\n'
                    target['lostenergy'] += en
            if player['weapon'].name == 'Полицейская дубинка' and random.randint(1, 100) <= 100:
                losten = 1
                try:
                    if player['weapon'].lvl == 3 or player['weapon'].lvl == 4:
                        losten = 2
                except:
                    pass
                target['lostenergy'] += losten
                if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                    target['policestun'] = True
                game['effecttext'] += '⚡️' + target['name'] + ' теряет ' + str(losten) + ' энергии.\n'
            if player['weapon'].name == 'Кастет' and player['weapon'].lvl == 4 and player['weapon'].modification == 1:
                target['lostenergy'] += 1
                game['effecttext'] += '⚡️' + target['name'] + ' теряет ' + str(1) + ' энергии.\n'
            if player['weapon'].name == 'Рука трента':
                target['roots'].append([player['id'], 2])

            bchance = 30
            if game['classic_game']:
                bchance = 25
            if 'bicepc?1' in player['skills']:
                bchance = 15
            if 'bicepc?2' in player['skills']:
                bchance = 25
            if 'bicepc?3' in player['skills']:
                bchance = 40
            if ('bicepc' in player['skills'] or 'bicepc?1' in player['skills'] or 'bicepc?2' in player[
                'skills'] or 'bicepc?3' in player['skills'] or 'bicepc_classic' in player['skills']) \
                    and not player['weapon'].ranged and random.randint(1, 100) <= bchance:
                damage = damage * 2
                bicepc = True
                # player['bicepc'] = False
            if 'multicast' in player['skills'] and player['multicast'] == 2 and random.randint(1, 100) <= 75:
                damage = damage * 2
                multicast = True
            if 'multicast' in player['skills'] and player['multicast'] == 3 and random.randint(1, 100) <= 50:
                damage = damage * 3
                multicast = True
            if 'multicast' in player['skills'] and player['multicast'] == 4 and random.randint(1, 100) <= 25:
                damage = damage * 4
                multicast = True
            claws_biceps = False
            if player['weapon'].name == 'Стальные когти' and player['weapon'].lvl == 4 and player['weapon'].modification == 1 and random.randint(1, 100) <= 25:
                claws_biceps = True
                damage = damage*2
            parry = False
            if target['act'] != None and target['act'][0] == 'parry' and target['act'][1] == player[
                'id'] and damage > 0:
                damage -= 1000
                parry = True
                if target['weapon'].lvl == 4 and target['weapon'].modification == 2:
                    set_energy(game, target, target['maxenergy'])
                    game['effecttext'] += '😤|Энергия ' + target['name'] + ' полностью восстановлена!\n'
                minusen = player['energy']
                try:
                    if target['weapon'].lvl == 1:
                        minusen = 4
                    if target['weapon'].lvl == 2:
                        minusen = player['energy']
                    if target['weapon'].lvl == 3:
                        minusen = player['energy']
                        if player['stun'] > 0:
                            player['stun'] += 1
                        else:
                            player['stun'] = 2
                        game['effecttext'] += '🌀|' + player['name'] + ' оглушен!\n'

                except:
                    pass
                player['energy'] -= minusen
                if damage < 0:
                    target['saberblock'] = [player['id'], abs(damage)]
            pdamage = True
            vampiretext = ''
            firetext = ''
            if player['weapon'].name == 'Клыки вампира':
                if random.randint(1, 100) <= 50:
                    # if player['vampirebites'] >= 1:
                    target['hp'] -= 1
                    player['hp'] += 1
                    # if player['hp'] > player['maxhp']:
                    #    player['hp'] = player['maxhp']
                    vampiretext = '🩸|' + player['name'] + ' высасывает жизнь из ' + target['name'] + '!\n'
                    vampiretext += '♥' * target['hp'] + '|' + target['name'] + ' теряет 1 жизнь. Остаётся ' + str(
                        target['hp']) + ' хп.\n'
                    vampiretext += '♥' * player['hp'] + '|' + player['name'] + ' получает 1 жизнь. Остаётся ' + str(
                        player['hp']) + ' хп.'
            frozenaddtext = ''
            if player['weapon'].name == 'Морозный лук':
                if random.randint(1, 100) <= 100:
                    all_buttons = ["attack", "reload", "perekat", "addition"]
                    frozen_button = random.choice(all_buttons)
                    target['frozen_buttons'].append([frozen_button, 2])
                    frozentext = "Неизвестно"
                    if frozen_button == "attack":
                        frozentext = "Атака"
                    if frozen_button == "reload":
                        frozentext = "Перезарядка"
                    if frozen_button == "skip":
                        frozentext = "Пропуск хода (потушиться)"
                    if frozen_button == "perekat":
                        frozentext = "Перекат"
                    if frozen_button == "addition":
                        frozentext = "Дополнительно"
                    if target['controller'] == 'bot':
                        frozenaddtext += "🔥❄️" + target[
                            'name'] + ' сопротивляется заморозке.\n'
                    else:
                        frozenaddtext += "❄️" + target[
                        'name'] + ' замерзает! До следующего хода заблокировано действие: "(🔒)' + frozentext + '".\n'
                    # player['vampirebites'] = 0
                # else:
                #    player['vampirebites'] += 1
            lightsword = False
            lightaspect = False
            if player['weapon'].name == 'Меч Света':
                if random.randint(1, 100) <= 51:
                    damage += 3
                    lightsword = True
                    target['recoverydebuff'].append([2, 3])  # [0] - сила дебаффа, [1] - длительность

            if player['light_aspect'] > 0:
                can_aspect = True
                # if 'Крыса' in target['name'] and target['controller'] == 'bot':
                #     can_aspect = False
                if target['is_rhino']:
                    can_aspect = False
                if can_aspect:
                    target['recoverydebuff'].append([1, 2])  # [0] - сила дебаффа, [1] - длительность
                    lightaspect = True

            if player['weapon'].name in ['Факел', 'Огнемет', 'Огнемет Нарсил', 'Щупальца']:
                firechance = 0
                fstrength = 1
                if player['weapon'].name == 'Факел':
                    if player['weapon'].classic:
                        firechance = 70
                    else:
                        firechance = 50
                    try:
                        if player['weapon'].lvl == 1:
                            firechance = 25
                        if player['weapon'].lvl == 2:
                            firechance = 40
                        if player['weapon'].lvl == 3:
                            firechance = 60
                            if random.randint(1, 100) <= 15:
                                fstrength += 1
                        if player['weapon'].lvl == 4:
                            firechance = 60
                            if player['weapon'].modification == 1:
                                fstrength = 3
                            if player['weapon'].modification == 2:
                                fstrength = 5
                    except:
                        pass
                if player['weapon'].name in ['Щупальца']:
                    firechance = 100
                if player['weapon'].name in ['Огнемет', 'Огнемет Нарсил']:
                    firechance = 100
                    try:
                        if player['weapon'].lvl == 1:
                            firechance = 75
                        if player['weapon'].lvl == 2:
                            firechance = 100
                        if player['weapon'].lvl == 3:
                            firechance = 100
                            # if random.randint(1, 100) <= 15:
                            #    fstrength += 1
                        if player['weapon'].lvl == 4:
                            firechance = 100
                            if player['weapon'].modification == 2:
                                fstrength += 1
                    except:
                        pass
                if player['weapon'].name == 'Огнемет' and player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                    damage = 0
                if random.randint(1, 100) <= firechance:
                    firetext += setfire(game, player, target, strength=fstrength, duration=3)
                    if player['weapon'].name == 'Факел' and player['weapon'].modification == 2:
                        firetext += setfire(game, player, player, strength=2, duration=3)

            if firearrow:
                fires = 2
                try:
                    if player['weapon'].lvl == 1:
                        fires = 1
                    if player['weapon'].lvl == 2:
                        fires = 2
                    if player['weapon'].lvl == 3:
                        fires = 3
                    if player['weapon'].lvl == 4 and player['weapon'].modification == 1:
                        fires = 6
                except:
                    pass
                firetext += setfire(game, player, target, strength=fires, duration=3)
                pdamage = False

            if player['weapon'].name == 'Лук' and player['weapon'].lvl == 4 and player['weapon'].modification == 2 and not firearrow and random.randint(1, 100) <= 40:
                firetext += setfire(game, player, target, strength=3, duration=3)

            if not parry:
                showdmg = damage
            else:
                showdmg = damage + 1000
            if lightsword:
                showdmg -= 3
            if player['weapon'].name == 'Гранатомет':
                grenade = player['grenade']
            else:
                grenade = None
            addtarget = None
            doptargets = []
            if grenade != None:
                for ids in game['players']:
                    target2 = game['players'][ids]
                    if target['team'] == player['team']:
                        if target2['team'] == target['team'] and target2['id'] != target['id'] and not target2['dead']:
                            doptargets.append(target2['id'])
                    else:
                        if target2['team'] != player['team'] and target2['id'] != target['id'] and not target2['dead']:
                            doptargets.append(target2['id'])
            if len(doptargets) > 0:
                addtarget = game['players'][random.choice(doptargets)]

            if weapon.name == 'Камень':
                showdmg = 0
                damage = -1000
            burrowstrike = False
            if player['burrowstrike']:
                burrowstrike = True
            luciferblade = False
            if player['weapon'].name == 'Пылающий клинок' and player['luciferbladecd'] <= 0:
                luciferblade = True
                damage = 0
                player['luciferbladecd'] = 6
            if lastsnipertarget != None:
                game['text'] += '💨❗️|'+player['name']+' стреляет в '+lastsnipertarget['name']+' из снайперской винтовки, но не попадает. Пуля прилетает в другую цель!\n'
            attacktext = getattacktext(game, player, target, showdmg, bicepc, firetext, sokrushtext, chaintext,
                                       narsiltext,
                                       counterattack, execution, executiontext, grenade, addtarget, firearrow,
                                       vampiretext, multicast, lightsword, hitdowntext,
                                       lightaspect, strongshot, burrowstrike, luciferblade, claws_biceps)
            game['text'] += attacktext
            game['text'] += frozenaddtext
            if player["is_knight"] and not player["knight_rifle_talk"] and player["weapon"].name == "Снайперская винтовка" and game["dungeon"]:
                player["knight_rifle_talk"] = True
                game['text'] += "💬"+player["name"]+": Стандартная комплектация винтовки не слишком сильна, поэтому я немного модернизировал её.\n"
            if luciferblade:
                game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
                if target['stun'] > 0:
                    target['stun'] += 1
                else:
                    target['stun'] = 2
                setfire(game, player, target, 4+(player['luciferpower']*2))
            if burrowstrike:
                if not target['fell']:
                    game['effecttext'] += '🚷|' + target['name'] + ' теряет равновесие и падает!\n'
                    target['fell'] = True
            if player['weapon'].name == "Теневая пушка":
                target['hp'] -= 1
                game['text'] += '♥' * target['hp'] + '|' + target['name'] + ' теряет 1 хп. Остаётся ' + str(
                    target['hp']) + ' хп.\n'
                if target['stun'] <= 0:
                    target['stun'] = 2
                else:
                    target['stun'] += 1
                game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
            if player['weapon'].name == 'Гранатомет огра' and random.randint(1, 100) <= 35:
                ogretarget = None
                ogretargets = []
                if player['weapon'].name == 'Гранатомет огра':
                    for ids in game['players']:
                        target2 = game['players'][ids]
                        if not target2['dead']:
                            ogretargets.append(target2['id'])
                if len(ogretargets) > 0:
                    ogretarget = game['players'][random.choice(ogretargets)]
                    ogredmg = random.randint(2, 4)
                    game['text'] += '💣|Гранатомет огра случайно выстреливает в ' + ogretarget[
                        'name'] + '! Цель получает ' + str(ogredmg) + ' урона.\n'
                    ogreshowdmg, ogrearmortext = takedamage(game, player, ogretarget, ogredmg)
                    game['text'] += ogrearmortext
            if parry:
                game['text'] += '🗡|' + target['name'] + ' парирует атаку ' + player['name'] + '! Урон заблокирован, ' + \
                                player['name'] + ' теряет всю энергию!\n'
            if player['weapon'].name == 'Пиломет':
                # if player['sawhits'] >= 1:
                sawchance = 60
                addcuts = 1
                try:
                    if player['weapon'].lvl == 1:
                        sawchance = 50
                    if player['weapon'].lvl == 2:
                        sawchance = 60
                    if player['weapon'].lvl == 3:
                        sawchance = 70
                        addcuts = 2
                    if player['weapon'].lvl == 4:
                        sawchance = 70
                        addcuts = 2
                        if player['weapon'].modification == 1:
                            addcuts = random.randint(2, 4)
                except:
                    pass
                if random.randint(1, 100) <= sawchance:
                    target['addcuts'] += addcuts
                    game['text'] += '🩸|' + target['name'] + ' ранен! (' + str(
                        target['cuts'] + target['addcuts']) + ')\n'
                    player['sawhits'] = 0
                # else:
                #    player['sawhits'] += 1
            if 'robot' in player['skills']:
                player['addperegrev'] += (damage * 7)
            if player['weapon'].name in ['Нож', 'Катана', "Когти дракона"]:
                if player['weapon'].name == 'Нож':
                    bloodchance = 75
                    if player['weapon'].classic:
                        bloodchance = 50

                if player['weapon'].name == 'Катана':
                    bloodchance = 99
                    if player['weapon'].classic:
                        bloodchance = 20
                    # player['knifehits'] = 0
                    # else:
                    #   player['knifehits'] += 1
                if player["weapon"].name == "Когти дракона":
                    bloodchance = 50
                if random.randint(1, 100) <= bloodchance:
                    if target['blood'] <= 0:
                        target['blood'] = 4
                        if 'dvuzhil' in target['skills']:
                            target['blood'] += 2
                        target['blood'] += get_target_dvuzhil(target)
                        game['text'] += '❣️|' + target['name'] + ' истекает кровью!\n'
                    else:
                        if target['blood'] > 1:
                            target['blood'] -= 1
                        game['text'] += '❣️|Кровотечение ' + target['name'] + ' усиливается!\n'
                    try:
                        if player['weapon'].lvl == 4 and player['weapon'].modification == 1:
                            target['blood'] = 1
                            target['blood'] += get_target_dvuzhil(target)

                    except:
                        pass

            if player['weapon'].name == 'Мраморная колонна':
                if target['blood'] <= 0:
                    target['blood'] = 4

                    if 'dvuzhil' in target['skills']:
                        target['blood'] += 2
                    target['blood'] += get_target_dvuzhil(target)
                    game['text'] += '❣️|' + target['name'] + ' истекает кровью!\n'
                else:
                    if target['blood'] > 1:
                        target['blood'] -= 1
                    game['text'] += '❣️|Кровотечение ' + target['name'] + ' усиливается!\n'
                if random.randint(1, 100) <= 100:
                    if target['stun'] <= 0:
                        target['stun'] = 2
                    else:
                        target['stun'] += 1
                    game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
                if not target['fell']:
                    game['effecttext'] += '🚷|' + target['name'] + ' теряет равновесие и падает!\n'
                    target['fell'] = True

            if player['weapon'].name == 'Бита':
                stunchance = 30
                if player['weapon'].classic:
                    stunchance = 20
                try:
                    if player['weapon'].lvl == 1:
                        stunchance = 10
                    if player['weapon'].lvl == 2:
                        stunchance = 20
                    if player['weapon'].lvl == 3:
                        stunchance = 35
                    if player['weapon'].lvl == 4:
                        if player['weapon'].modification == 1:
                            stunchance = 50
                        elif player['weapon'].modification == 2:
                            stunchance = 35
                except:
                    pass
                if random.randint(1, 100) <= stunchance:
                    # if player['baseballhits'] >= 3:
                    if target['stun'] <= 0:
                        target['stun'] = 2
                    else:
                        target['stun'] += 1
                    dt = ''
                    if player['weapon'].modification == 2:
                        target['stun'] += 1
                        dt = ' (2)'
                    game['effecttext'] += '🌀|' + target['name'] + ' оглушен!'+dt+'\n'
                    player['baseballhits'] = 0

            if player['charge']:
                if player['weapon'].name == 'Рог' and random.randint(1, 100) <= 70:
                    if target['stun'] <= 0:
                        target['stun'] = 2
                    else:
                        target['stun'] += 1
                    game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
            if player['weapon'].name == 'Камень':
                if random.randint(1, 100) <= 100:
                    if target['stun'] <= 0:
                        target['stun'] = 2
                    else:
                        target['stun'] += 1
                    game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
            # if player['weapon'].name == 'Электрошокер':
            #    if target['act'] != None and target['act'][0] == 'skip':
            #       if target['stun'] <= 0:
            #            target['stun'] = 2
            #        else:
            #            target['stun'] += 1
            #       game['effecttext'] += '🌀|'+target['name']+' оглушен!\n'
            if player['weapon'].name == 'Электрошокер' and random.randint(1, 100) <= 75:
                # target['energy'] -= 1
                target['maxenergy'] -= 1
                target['electrolostenergy'] += 1
                game['effecttext'] += '⚡️|' + target['name'] + ' теряет 1 максимальной энергии.\n'
            if player['weapon'].name == 'Топор':
                # if player['axehits'] >= 1:
                cchance = 70
                if player['weapon'].classic:
                    cchance = 70
                am = 1
                try:
                    am = 1
                    if player['weapon'].lvl == 1:
                        cchance = 40
                    if player['weapon'].lvl == 2:
                        cchance = 60
                    if player['weapon'].lvl == 3:
                        cchance = 80
                        am = 2
                    if player['weapon'].lvl == 4:
                        am = 2
                        cchance = 80
                        if player['weapon'].modification == 1:
                            am = 4
                except:
                    pass
                if random.randint(1, 100) <= cchance:
                    if 'Вурдалак' in target['name'] and target['controller'] == 'bot' and game['dungeon']:
                        maxdlimit = 3
                    else:
                        maxdlimit = 2
                    if target['dmglimit'] > maxdlimit:
                        target['dmglimit'] -= am
                        if target['dmglimit'] < maxdlimit:
                            target['dmglimit'] = maxdlimit
                        game['effecttext'] += '🤕|' + target['name'] + ' покалечен! (' + str(am) + ')\n'
                        player['axehits'] = 0
                # else:
                #    player['axehits'] += 1
            if addtarget != None:
                if grenade == 'grenade':
                    adddmg = damage
                    if parry:
                        adddmg += 1000
                    armor, text = getarmor(game, addtarget, damage)
                    adddmg -= armor
                    game['text'] += text
                    if addtarget['shield']:
                        adddmg = 0
                    if adddmg > 0:
                        addtarget['incomingdmgs'].append([player['id'], adddmg])
                        player['outgoingdmgs'].append([addtarget['id'], adddmg])
                elif grenade == 'molotov':
                    setfire(game, player, addtarget, strength=1, duration=3)
                if 'pyromancer' in player['skills']:
                    # if grenade != "molotov":
                    player['pyrodamage'] = True
            if grenade != 'molotov':
                if player['weapon'].name == "Тесак" and not player['first_hit'] and player['weapon'].lvl == 4 and \
                        player['weapon'].modification == 2:
                    pass
                else:
                    armor, text = getarmor(game, target, damage)
                    damage -= armor
                    game['text'] += text
                if target['shield']:
                    if player['weapon'].name == "Тесак" and not player['first_hit'] and player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                        pass
                    else:
                        damage = 0
                if damage > 0:
                    target['incomingdmgs'].append([player['id'], damage])
                    player['outgoingdmgs'].append([target['id'], damage])
                    if player['weapon'].name == 'One punch':
                        target['punchdead'] = True
            else:
                setfire(game, player, target, strength=1, duration=3)
                pdamage = True
            if 'pyromancer' in player['skills'] and pdamage:
                player['pyrodamage'] = True


        else:
            burrowstrike = False
            if player['burrowstrike']:
                burrowstrike = True
            luciferblade = False
            if player['weapon'].name == 'Пылающий клинок' and player['luciferbladecd'] <= 0:
                luciferblade = True
                player['luciferbladecd'] = 6
            if granatomet:
                parry = False
                return damage, parry
            if drobovik_hasnocharges:
                game['text'] += '💨|' + player[
                    'name'] + ' пытается выстрелить из дробовика, но в обойме отсутствуют патроны.\n'
            else:
                misstext = getmisstext(game, player, target, sokrushtext, chaintext, narsiltext, burrowstrike=burrowstrike, luciferblade = luciferblade)
                game['text'] += misstext
        player['attackedthisturn'] = True
        for ids in player['infected_weapon']:
            player['energy'] -= 1
            if player['energy'] < 0:
                player['energy'] = 0
        if player['weapon'].name == 'Копье Нарсил' and player['narsil']:
            game['effecttext'] += '👐|' + player['name'] + ' теряет свое оружие!\n'
            player['lostweapon'] = True
        if 'robot' in player['skills']:
            if random.randint(1, 100) <= player['peregrev']:
                player['hp'] -= 1
                game['text'] += '♨️|Из-за перегрева ' + player['name'] + ' теряет жизнь!\n'
                game['text'] += '♥️' * player['hp'] + '|' + player['name'] + ' теряет ' + str(
                    1) + ' жизнь(ей). Остается ' + str(player['hp']) + ' хп.\n'

    if player['energy'] <= 0:
        player['waszero'] = True
    if not sokrush and not chain:
        if not player['sokrushenie'] and not player['chain']:
            if not counterattack:
                ecost = weapon.energycost
                if player['weapon'].name == 'Лук Асгард':
                    ecost += (player['bowcharge'])
                    if ecost > 5:
                        ecost = 5
                if player['weapon'].name == 'Катана' and execution:
                    ecost += 3
                if player['weapon'].name == 'Обрез' and player['strongshot']:
                    ecost += 100
                    player['obrezcd'] = 4
                if player['truestrike']:
                    dopecost = 2
                    try:
                        if player['weapon'].lvl == 1:
                            dopecost = 3
                    except:
                        pass
                    ecost += dopecost
                player['energy'] -= ecost
                if player['weapon'].name == 'Копье Нарсил' and player['narsil']:
                    player['energy'] -= 1
                    player['narsilcd'] = 6
    else:
        if player['sokrushenie']:
            ecost = 4
            try:
                if player['weapon'].lvl == 1:
                    ecost = 5
                if player['weapon'].lvl == 2:
                    ecost = 4
                if player['weapon'].lvl == 3:
                    ecost = 3
            except:
                pass
            player['energy'] -= ecost
            player['sokrusheniecd'] = sokrushcd
            if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                player['sokrusheniecd'] = 0
        elif player['chain']:
            player['energy'] -= 2
            player['chaincd'] = chaincd
            if player['weapon'].lvl == 4 and player['weapon'].modification == 1:
                player['chaincd'] -= 1
    player['maintarget'] = None
    player['lasttarget'] = target['id']


def getarmor(game, player, damage, ignore_armor = False):
    armor = 0
    if not ignore_armor:
        if 'armor' in player['skills'] and random.randint(1, 100) <= 40 and not player['wasarmor_from_armorskill']:
            armor += 1
            player['wasarmor_from_armorskill'] = True
        if 'armor?1' in player['skills'] and random.randint(1, 100) <= 10 and not player['wasarmor_from_armorskill']:
            armor += 1
            player['wasarmor_from_armorskill'] = True
        if 'armor?2' in player['skills'] and random.randint(1, 100) <= 15 and not player['wasarmor_from_armorskill']:
            armor += 1
            player['wasarmor_from_armorskill'] = True
        if 'armor?3' in player['skills'] and random.randint(1, 100) <= 20 and not player['wasarmor_from_armorskill']:
            armor += random.randint(1, 2)
            player['wasarmor_from_armorskill'] = True
        if 'armor_classic' in player['skills'] and random.randint(1, 100) <= 25 and not player['wasarmor_from_armorskill']:
            armor += 1
            player['wasarmor_from_armorskill'] = True
        if player['selfarmor'] > 0 and random.randint(1, 100) <= player['selfarmorchance'] and not player[
            'wasarmor_from_selfarmor']:
            armor += player['selfarmor']
            player['wasarmor_from_selfarmor'] = True
    if not ignore_armor:
        if not game['classic_game']:
            for idss in player['hitins']:
                armor += 2
        else:
            if not player['wasarmor_from_hitin']:
                for idss in player['hitins']:
                    armor += 2
                player['wasarmor_from_hitin'] = True
    if not ignore_armor:
        if 'cherep' in player['skills'] and random.randint(1, 100) <= 50 and not player['wasarmor_from_cherep']:
            armor += 1
            player['wasarmor_from_cherep'] = True
        if ('cherep?1' in player['skills'] or 'cherep?2' in player['skills'] or 'cherep?3' in player['skills']):
            chance = 20
            blk = 1
            if 'cherep?2' in player['skills']:
                chance = 30
            if 'cherep?3' in player['skills']:
                chance = 40
                blk = random.randint(1, 2)
            if random.randint(1, 100) <= chance:
                armor += blk
                player['wasarmor_from_cherep'] = True
    for ids in player["armor_debuff"]:
        armor -= player["armor_debuff"][ids]["power"]
    if armor > damage:
        doparmor = armor - damage
        if doparmor > 0:
            player['dopblock'] += doparmor
        armor = damage
    #print('armor1=' + str(armor))
    shieldarmor = 0
    iceheartarmor = 0
    brokenshield = False
    if damage > armor:
        dblock = damage - armor
        if dblock > player['dopblock']:
            dblock = player['dopblock']
        player['dopblock'] -= dblock
        armor += dblock
    if damage > armor and player['shieldarmor'] > 0 and player['weaponshield']:
        shieldarmor = damage - armor
        if shieldarmor > player['shieldarmor']:
            shieldarmor = player['shieldarmor']
        player['shieldarmor'] -= shieldarmor
        if player['shieldarmor'] <= 0:
            brokenshield = True
    armor += shieldarmor
    brokenheart = False
    if damage > armor and player['iceheart'] > 0 and not player['shield']:
        iceheartarmor = damage - armor
        if iceheartarmor > player['iceheart']:
            iceheartarmor = player['iceheart']
        player['iceheart'] -= iceheartarmor
        if player['iceheart'] <= 0:
            brokenheart = True
    armor += iceheartarmor
    if armor > 0:
        if 'semw_armor' in player['customtexts'] and player['customtexts']['semw_armor']:
            text = '🪖|' + player['name'] + ' в своей броне выглядит непоколебимым, снимая всего ' + str(armor) + ' урона и продолжая побеждать врагов!\n'
        else:
            text = '🛡| Броня ' + player['name'] + ' снимает ' + str(armor) + ' урона!\n'
        if brokenshield:
            text += '🔴|Щит ' + player['name'] + ' сломался!\n'
            player['weapon'] = weaponlist.Fist()
        if brokenheart:
            text += '💔|Ледяное сердце ' + player['name'] + ' треснуло! Боец теряет 1♥️.\n'
            player['iceheart'] = 0
            player['hp'] -= 1
        # player['washitin'] = True
    else:
        text = ''
    #print('armor2=' + str(armor))
    return armor, text


def takedamage(game, player, target, dmg, ignoreshield = False):
    showdmg = dmg
    if dmg > 0:
        player['demon'] = True
    if not target['washitin']:
        ignore_armor = False
        if player['weapon'].name == 'Арбалет':
            ignore_armor = True
        armor, text = getarmor(game, target, dmg, ignore_armor)
    else:
        print('СЮДА НЕ ДОЛЖНО БЫЛО ДОЙТИ НАХУЙ, def takedamage(), ДОДЕЛЫВАЙ ФУНКЦИЮ')
        armor = target['dopblock']
        if armor < 0:
            armor = 0
        if dmg < armor:
            armor = dmg
        shieldarmor = 0
        iceheartarmor = 0
        brokenshield = False
        if dmg > armor and player['shieldarmor'] > 0 and player['weaponshield']:
            shieldarmor = dmg - armor
            if shieldarmor > player['shieldarmor']:
                shieldarmor = player['shieldarmor']
            player['shieldarmor'] -= shieldarmor
            if player['shieldarmor'] <= 0:
                brokenshield = True
        armor += shieldarmor
        brokenheart = False
        if dmg > armor and player['iceheart'] > 0 and not player['shield']:
            iceheartarmor = dmg - armor
            if iceheartarmor > player['iceheart']:
                iceheartarmor = player['iceheart']
            player['iceheart'] -= iceheartarmor
            if player['iceheart'] <= 0:
                brokenheart = True
        armor += iceheartarmor
        text = ''
        if armor > 0:
            if 'semw_armor' in player['customtexts'] and player['customtexts']['semw_armor']:
                text = '🪖|' + target['name'] + ' в своей броне выглядит непоколебимым, снимая всего ' + str(armor) + ' урона и продолжая побеждать врагов!\n'
            else:
                text = '🛡| Броня ' + target['name'] + ' снимает ' + str(armor) + ' урона!\n'
        if brokenshield:
            text += '🔴|Щит ' + player['name'] + ' сломался!\n'
            player['weapon'] = weaponlist.Fist()
        if brokenheart:
            text += '💔|Ледяное сердце ' + player['name'] + ' треснуло! Боец теряет 1♥️.\n'
            player['iceheart'] = 0
            player['hp'] -= 1
    dmg -= armor
    # target['dopblock'] -= armor
    if (not target['shield']) or ignoreshield:
        if dmg > 0:
            # print('dmg to '+target['name']+': '+str(dmg))
            player['outgoingdmgs'].append([target['id'], dmg])
            target['incomingdmgs'].append([player['id'], dmg])
    return showdmg, text

def get_remain_dm_deaths(game):
    deaths_left = game["sum_dm_deaths"]
    for ids in game["players"]:
        player = game["players"][ids]
        if player["count_as_dm"]:
            deaths_left -= player["dm_deaths"]
    return deaths_left

def reborn_player(game, player):
    player["dm_deaths"] += 1
    player["hp"] = player["maxhp"]
    player["energy"] = player["maxenergy"]
    player["blood"] = 0
    player["stun"] = 0
    deaths_left = get_remain_dm_deaths(game)
    game["text"] += "👻"+player["name"]+ " возрождается с полным здоровьем! Осталось смертей до конца матча: "+str(deaths_left)+"\n"

def deadplayer(game, player, enemys_sadist, skeletons):
    if player['team'] == 'dummys':
        player['hp'] = 6
        return
    if game["dm"]:
        reborn_player(game, player)
        return
    if player['team'] == 'dark' and 'Амальгама' in player['name'] and player['controller'] == 'bot':
        ttt = '😱|' + player['name'] + ' издает предсмертный вой.\n'
        game['text'] += ttt
        for idss in game['players']:
            target = game['players'][idss]
            if target['team'] != player['team']:
                if target['pressed_info']:
                    dc = 4
                    h = '💜'
                else:
                    dc = 10
                    h = '🖤'
                target['dark_counter'] = dc
                darktext = h + '|̸̝͈̀͢͡' + player[
                    'name'] + ' п̷̛̣̯̂͒͜о̷̩̥̊̌̊͜͠г̷̱͚҇͛͢р̶̤̙̗͛̉͜͝ӳ̸̖͛͜͞ж̸̬̂̽͜͠а̵̡͚̳͛͝е҈̡͎̭̙҇́͊т̷̡̮͈҇̈́̇̾ р̸̧̮̗͗̐͠а̷̡̬́͞з̸̨̛̣̦́̅у̸̧̫̠̳́̇͠м҈͉̩͎͒͜͡ ' + \
                           target['name'] + ' в̷̢͍̦҇̾ͅо҈̢̛͙͛ т̶̨͕͋̅͗͠ь̴̧̬͑͠м̵̮̤̭́̎͜͡у̸̡̛͔͉̯̒.̷̡͈̆̍̉͡ ' + target[
                               'name'] + \
                           ' ч҉̛͉̜͈̃̀͢у̵̧̖̭͂͞в҉͇̣̰͂͜͝с̸̨͚͚͋̍͂͝т҈̢̘̄̎̈́͞в̵̱҇̔̏͜ӱ̶̝́͢͡ӗ̵̨̘́̕т҉̨͕͎̥҇͆̚ с̷̛̫̈͗͜т҉̧̫̓̋͠р҉̡̜͚̤̿̍̚͞а̶͉̗҇́̀̚͢х̶̨͙̞̀̍̌͠ (' + str(
                    target['dark_counter']) + \
                           ').\n'
                game['text'] += darktext
                if target['dark_counter'] >= 5:
                    if not target['dead']:
                        game['text'] += '💀|' + target[
                            'name'] + ' слишком напуган, чтобы продолжать поход. Он кончает жизнь самоубийством.\n'
                        target['dead'] = True
    if player['team'] == 'dark' and player['controller'] == 'bot' and player['cant_die'] and 'Тень крысы' in player[
        'name']:
        return
    if player['team'] == 'dark' and player['controller'] == 'bot' and 'Тьма' in player['name']:
        if player['dark_die_stage'] > 0:
            return
        else:
            player['dark_die_stage'] = 3
            game['text'] += '📜|У ' + player['name'] + ' остается единственный глаз посередине, а из тех мест, где ' + \
                            'раньше были глаза поменьше, струится темный дым. Нечто замедлилось, как будто это вытекают его силы.\n' + \
                            '📜Вы собрали последние силы и нанесли удар по предполагаемому туловищу существа.\n' + \
                            'Существо вздрогнуло, и его единственный оставшийся глаз начал испускать черный свет. Именно свет - ' + \
                            'все, чего касались "лучи" этого света, погружалось во мрак, и вы не видели абсолютно ничего в этих местах.' + \
                            ' Нечто начало подозрительно трястись, испуская все больше темных лучей во все стороны, явно предвещая нечто нехорошее. ' + \
                            'Вы решаете, что надо что-то предпринять.\n'
            game['can_hide_dark'] = True
            return
    if 'demonlord' in player['skills'] and player['demonlordform'] == False:
        player['demonlordform'] = True
        game['text'] += '❤️‍🔥|' + player['name'] + ' обретает истинную форму!\n'
        player['dmglimit'] = 10000
        player['maxdmglimit'] = 10000
        player['hp'] = 4
        player['maxhp'] = 6
        player['energy'] = player['maxenergy']

    else:
        player['dead'] = True
        if 'Дряхлый скелет' in player['name'] and player['controller'] == 'bot':
            game['dead_skeletons'] += 1
        if 'Вурдалак' in player['name'] and player['controller'] == 'bot' and player['team'] == 'necromant':
            alive_ghouls = False
            for idss in game['players']:
                target = game['players'][idss]
                if 'Вурдалак' in target['name'] and target['controller'] == 'bot' and target[
                    'team'] == 'necromant' and not target['dead']:
                    alive_ghouls = True
                    break
            if not alive_ghouls:
                for idss in game['players']:
                    target = game['players'][idss]
                    # if target['controller'] != 'bot':
                    #    target['can_regen_hp_by_reload'] = 1

        for idss in player['ritualists']:
            game['players'][idss[0]]['ritual_ability'] = True
        player['ritualists'] = []

        if 'alex_death' in player['customtexts'] and player['customtexts']['alex_death']:
            game['text'] += '🌑|' + player['name'] + ' отправился во тьму, чтобы обрести покой и свет в душе разжечь свой вновь, преодолев темноту и боль.\n'
        elif 'valera_death' in player['customtexts'] and player['customtexts']['valera_death']:
            game['text'] += '🔋| У системы ' + player['name'] + ' кончился заряд. Отключение...\n'
        elif 'kirill_death' in player['customtexts'] and player['customtexts']['kirill_death']:
            game['text'] += '🔮lВокруг ' + player['name'] + ' появляется непробиваемый барьер. Спустя пару секунд барьер пропадает. ' + player['name'] + ' не находят под ним I💀\n'
        elif "death_hellfire" in player["skills"]:
            game['text'] += '☠️🔥|Время ' + player['name'] + ' вышло, и он зарывается рогом обратно в ад, а из образовавшейся пропасти на поле боя выливаются потоки адского пламени.\n'
            for idss in game["players"]:
                target = game["players"][idss]
                setfire(game, player, target, strength=2, duration=3)
        else:
            game['text'] += '☠️|' + player['name'] + ' теряет сознание.\n'
        pretendents = []
        for idss in player['incomingdmgs']:
            target = game['players'][idss[0]]
            if (target['weapon'].lvl == 4 or target['collecting_souls']):
                pretendents.append(target)
        if len(pretendents) > 0:
            try:
                soulowner = random.choice(pretendents)
                soulowner['kills'] += 1
                if soulowner['weapon'].lvl == 4:
                    game['text'] += '🌐|Оружие ' + soulowner['name'] + ' забирает душу ' + player['name'] + '.\n'
                else:
                    game['text'] += '🌐|Артефакт в инвентаре ' + soulowner['name'] + ' забирает душу ' + player['name'] + '.\n'
            except:
                pass
        if player['is_imp']:
            if player['maxhp'] > 1:
                imps = 0
                for idss in game['players']:
                    if game['players'][idss]['is_imp']:
                        imps += 1
                imp = summon_imp(game, imps, hp=player['maxhp']-1, nps = player['nearplayers'])
                for idsss in imp:
                    x = idsss
                    break
                game['text'] += '❗️На помощь приходит '+imp[x]['name']+'!\n'
                game['summon_imps'].append(imp)
        if game['necromant_reborn_buff'] > 0 and not player['was_castlenecromant_skele']:
            skele = summon_castlefight_skeleton(game, player)
            game['summon_castlefight_skeles'].append(skele)
            game['text'] += '💀|'+player['name']+' стал скелетом!\n'
        if 'Зомби-крыса' in player['name'] and player['controller'] == 'bot' and player['team'] == 'necromant':
            alive_zombierats = False
            for idss in game['players']:
                target = game['players'][idss]
                if 'Зомби-крыса' in target['name'] and target['controller'] == 'bot' and target[
                    'team'] == 'necromant' and not target['dead']:
                    alive_zombierats = True
                    break
            if not alive_zombierats:
                game[
                    'text'] += '📜|Магический барьер вокруг некроманта рассеялся. Он не понимает, как вы победили его армию мертвецов, и взмахивает посохом, ' + \
                               'пытаясь призвать себе на помощь еще кого-нибудь.\n'
        if player['master'] != None:
            necromaster = game['players'][player['master']]
            necromaster['controllable_necrofighter'] = None
            game['text'] += '📜|Магический барьер вокруг ' + necromaster['name'] + ' рассеялся.\n'
        if 'Огромный злобный скелет' in player['name'] and player['controller'] == 'bot':
            game['text'] += '⁉️|' + 'Некромант сильно удивлен тем, что вы убили его скелета.\n'
        for idss in enemys_sadist:
            enemy = game['players'][idss]
            if enemy['weapon'].name == 'Меч короля' and not player['iamillusion'] and (
                    enemy['act'] != None and enemy['act'][0] == 'attack' and enemy['act'][1] == player['id']):
                skeleton = summon_skeleton(game, enemy, skeletons, write_text=False)
                skeletons.append(skeleton)
                game['text'] += '💀|' + enemy['name'] + ' призывает скелета из трупа ' + player['name'] + '!\n'


def summon_skeleton(game, player, skeletons, write_text=True):
    skeletonuser = newskeletonuser(game)
    skeleton = createplayer(skeletonuser, photo=None)
    for ids in skeleton:
        x = ids
        break
    number = 1
    for idss in game['players']:
        if 'Скелет' in game['players'][idss]['name'] and game['players'][idss]['controller'] == 'bot':
            number += 1
    number += len(skeletons)
    skeleton[x]['name'] = 'Скелет ' + str(number) + '|💀'
    skeleton[x]['team'] = player['team']
    skeleton[x]['controller'] = 'bot'
    skeleton[x]['weapon'] = weaponlist.Sword()
    skeleton[x]['hp'] = 1
    skeleton[x]['maxhp'] = 1
    for idss in game['players']:
        skeleton[x]['nearplayers'].append(game['players'][idss]['id'])
        game['players'][idss]['nearplayers'].append(skeleton[x]['id'])
    if write_text:
        game['text'] += '💀|' + player['name'] + ' призывает скелета!\n'
    return skeleton


def summon_dung_skeleton(game, skeletons, hp=4, team='rats', full_control=False, player=None):
    skeletonuser = newskeletonuser(game)
    skeleton = createplayer(skeletonuser, photo=None)
    for ids in skeleton:
        x = ids
        break
    number = 1
    # for idss in game['players']:
    #    if 'Скелет' in game['players'][idss]['name'] and game['players'][idss]['controller'] == 'bot':
    #        number += 1
    try:
        number += len(skeletons)
    except:
        number += skeletons
    skeleton[x]['name'] = 'Скелет ' + str(number) + '|💀'
    skeleton[x]['team'] = team
    skeleton[x]['controller'] = 'bot'
    skeleton[x]['weapon'] = weaponlist.Sword2()
    skeleton[x]['hp'] = hp
    skeleton[x]['maxhp'] = hp
    if full_control:
        skeleton[x]['zombie'] = 3
        if player != None:
            skeleton[x]['master'] = player['id']
            # skeleton[x]['id'] = player['id']
            # skeleton[x]['controller'] = 'player'
    return skeleton

def summon_hell_rhino(game, skeletons, hp=6, team='rats', full_control=False, player=None):
    skeletonuser = newskeletonuser(game)
    rhino = createplayer(skeletonuser, photo=None)
    for ids in rhino:
        x = ids
        break
    number = 1
    # for idss in game['players']:
    #    if 'Скелет' in game['players'][idss]['name'] and game['players'][idss]['controller'] == 'bot':
    #        number += 1
    try:
        number += len(skeletons)
    except:
        number += skeletons
    rhino[x]['name'] = 'Носорог ' + str(number) + '|🦏🔥'
    rhino[x]['team'] = team
    rhino[x]['controller'] = 'bot'
    rhino[x]['hp'] = hp
    rhino[x]['maxhp'] = hp
    rhino[x]['skills'] = ["charge", "death_hellfire"]
    rhino[x]["weapon"] = weaponlist.Horn()
    
    if full_control:
        rhino[x]['zombie'] = 3
        if player != None:
            rhino[x]['master'] = player['id']
            # skeleton[x]['id'] = player['id']
            # skeleton[x]['controller'] = 'player'
    rhino[x]['madness'] = True 
    rhino[x]['energy'] += len(game['players'])
    rhino[x]['maxenergy'] += len(game['players'])
    rhino[x]['weapon'].dmgbonus += len(game['players']) 
    game['text'] += '❗️|' + rhino[x]['name'] + ' в ярости!\n' 
    return rhino

def summon_dragon(game, skeletons, hp=6, team='dragon', full_control=False, player=None):
    skeletonuser = newskeletonuser(game)
    dragon = createplayer(skeletonuser, photo=None)
    for ids in dragon:
        x = ids
        break
    number = 1
    # for idss in game['players']:
    #    if 'Скелет' in game['players'][idss]['name'] and game['players'][idss]['controller'] == 'bot':
    #        number += 1
    try:
        number += len(skeletons)
    except:
        number += skeletons
    dragon[x]['name'] = 'Дракон ' + str(number) + '|🐦‍🔥'
    dragon[x]['team'] = team
    dragon[x]['controller'] = 'bot'
    dragon[x]['weapon'] = weaponlist.DragonClaws()
    dragon[x]['hp'] = hp
    dragon[x]['maxhp'] = hp
    dragon[x]["dmglimit"] = 7
    dragon[x]["maxdmglimit"] = 7
    dragon[x]["is_dragon"] = True
    dragon[x]["skills"] = ["dragon_fireball", "wing_attack"]
    if full_control:
        dragon[x]['zombie'] = 3
        if player != None:
            dragon[x]['master'] = player['id']
    return dragon

def summon_knight(game, skeletons, hp=6, team='knight', full_control=False, player=None, randomid=False):
    skeletonuser = newskeletonuser(game)
    knight = createplayer(skeletonuser, photo=knight_photo)
    for ids in knight:
        x = ids
        break
    number = 1
    # for idss in game['players']:
    #    if 'Скелет' in game['players'][idss]['name'] and game['players'][idss]['controller'] == 'bot':
    #        number += 1
    try:
        number += len(skeletons)
    except:
        number += skeletons
    if number == 1:
        knight[x]['name'] = 'Рыцарь|⚔️'
    else:
        knight[x]['name'] = 'Оруженосец рыцаря ' + str(number-1) + '|⚔️'
    knight[x]['team'] = team
    if randomid:
        knight[x]['team'] = knight[x]['id']
    knight[x]['controller'] = 'bot'
    knight[x]['hp'] = hp
    knight[x]['maxhp'] = hp
    knight[x]["dmglimit"] = 8
    knight[x]["maxdmglimit"] = 8
    knight[x]["is_knight"] = True
    knight[x]['selfarmorchance'] = 60
    knight[x]['selfarmor'] = 1
    #knight[x]["photo"] = knight_photo

    weights = []
    knightweapons = npcweapons.copy()
    knightweapons = []
    for ids in knightweapons:
        weights.append(100)
    knightweapons.append(weaponlist.Rifle)
    weights.append(600)
    knightweapons.append(weaponlist.NecromantStaff_players)
    weights.append(600)
    knightweapons.append(weaponlist.Electro)
    weights.append(600)
    knightweapons.append(weaponlist.BowAsgard)
    weights.append(600)
    knightweapons.append(weaponlist.Narsil)
    weights.append(600)
    knightweapons.append(weaponlist.Katana)
    weights.append(600)
    
    knight[x]['weapon'] = random.choices(knightweapons, weights, k=1)[0]()
    if knight[x]['weapon'].name == "Снайперская винтовка":
        knight[x]['weapon'].dmgbonus += 10
        knight[x]['weapon'].accuracybonus += 8
    skilllimit = 2
    inventorylimit = 3
    addskills = ["add_tentacles", "bomber", "demon", "miner", "doom", "charge", "hypnotist", "dark_energy"]
    if knight[x]['weapon'].name == "Катана":
        addskills.remove("bomber")
        addskills.remove("miner")
        if random.randint(1, 100) <= 50:
            addskills.remove("doom")
        if random.randint(1, 100) <= 50:
            addskills.remove("hypnotist")
    if full_control:
        ratskills = getnpcskills(game, knight[x], skilllimit=skilllimit, banned_skills=['medic'], dopskills=[])
    else:
        ratskills = getnpcskills(game, knight[x], skilllimit=skilllimit, dopskills = addskills, banned_skills=["berserk"])
    addskills.remove("charge")
    dskill = random.choice(addskills)
    while dskill in ratskills:
        dskill = random.choice(addskills)
    ratskills.append(dskill)
    if game["knight_need_dark_energy"]:
        ratskills.append("dark_energy")
    ratinventory = []
    which_list = npcitems.copy()
    for i in range(inventorylimit):
        item = random.choice(which_list)
        while item in ratinventory:
            item = random.choice(which_list)
        ratinventory.append(item)
    knight[x]['skills'] = ratskills
    knight[x]['inventory'] = ratinventory
    
    if full_control:
        knight[x]['zombie'] = 3
        if player != None:
            knight[x]['master'] = player['id']
    return knight



def summon_treant(game, player, treants, hp=1, team=None):
    treantuser = newtreantuser(game)
    treant = createplayer(treantuser, photo=None)
    for ids in treant:
        x = ids
        break
    number = 1
    for idss in game['players']:
        if 'Трент' in game['players'][idss]['name'] and game['players'][idss]['controller'] == 'bot':
            number += 1
    try:
        number += len(treants)
    except:
        number += treants
    treant[x]['name'] = 'Трент ' + str(number) + '|🌳'
    if player != None:
        treant[x]['team'] = player['team']
    treant[x]['controller'] = 'bot'
    treant[x]['weapon'] = weaponlist.Treant_hand()
    treant[x]['hp'] = hp
    treant[x]['maxhp'] = hp
    if team != None:
        treant[x]['team'] = team
    # for idss in game['players']:
    #    treant[x]['nearplayers'].append(game['players'][idss]['id'])
    #    game['players'][idss]['nearplayers'].append(skeleton[x]['id'])
    return treant


def summon_virus(game, player, viruses):
    virususer = newvirususer(game)
    virus = createplayer(virususer, photo=None)
    for ids in virus:
        x = ids
        break
    number = 1
    for idss in game['players']:
        if 'Вирус-мутант' in game['players'][idss]['name'] and game['players'][idss]['controller'] == 'bot':
            number += 1
    number += len(viruses)
    virus[x]['name'] = 'Вирус-мутант ' + str(number) + '|🦠'
    virus[x]['team'] = 'virus'
    virus[x]['controller'] = 'bot'
    virus[x]['weapon'] = weaponlist.VirusHit()
    virus[x]['hp'] = 6
    virus[x]['maxhp'] = 6
    virus[x]['energy'] = 5
    virus[x]['maxenergy'] = 5
    virus[x]['skills'] = ['protivogaz']
    # for idss in game['players']:
    #    treant[x]['nearplayers'].append(game['players'][idss]['id'])
    #    game['players'][idss]['nearplayers'].append(skeleton[x]['id'])
    return virus


def summon_rat(game, rats, team='rats'):
    newrat = newratuser(game)
    rat = createplayer(newrat, photo=ratphoto)
    for idsss in rat:
        x = idsss
        break
    rat[x]['name'] = 'Крыса ' + str(rats + 1) + '|🐭'
    rat[x]['team'] = team
    rat[x]['controller'] = 'bot'
    return rat


def summon_dummy(game, dummyamount):
    newdummy = newratuser(game)
    dummy = createplayer(newdummy, photo=None)
    for idsss in dummy:
        x = idsss
        break
    dummy[x]['name'] = 'Манекен ' + str(dummyamount + 1) + '|🎃'
    dummy[x]['team'] = 'dummys'
    dummy[x]['controller'] = 'bot'
    dummy[x]['hp'] = 6
    dummy[x]['maxhp'] = 6
    dummy[x]['weapon'] = random.choice(weapons)()
    return dummy

def summon_darkcastle_demon(game):
    strength = game['darkcastle_demon']
    newdarkdemon = newratuser(game)
    darkdemon = createplayer(newdarkdemon, photo=None)
    for idsss in darkdemon:
        x = idsss
        break
    darkdemon[x]['name'] = 'Демон тьмы|👁'
    darkdemon[x]['team'] = 'darkcastle'
    darkdemon[x]['full_npc'] = True
    darkdemon[x]['controller'] = 'bot'
    darkdemon[x]['hp'] = 1
    darkdemon[x]['maxhp'] = 1

    darkdemon[x]['darkcastle_demon'] = True

    darkdemon[x]['hp'] += round(strength/4)
    darkdemon[x]['maxhp'] += round(strength/4)

    darkdemon[x]['dmglimit'] = 6
    darkdemon[x]['maxdmglimit'] = 6

    darkdemon[x]['dmglimit'] += round(strength/5)
    darkdemon[x]['maxdmglimit'] += round(strength/5)

    darkdemon[x]['darkdemon_strenght'] = strength

    darkdemon[x]['energy'] = 4
    darkdemon[x]['maxenergy'] = 4

    darkdemon[x]['energy'] += round(strength/8)
    darkdemon[x]['maxenergy'] += round(strength/8)

    darkdemon[x]['skills'] = ['protivogaz?3']

    darkplayer = None
    for ids in game['players']:
        target = game['players'][ids]
        if target['team'] == 'darkcastle':
            darkplayer = target
            break
    darkdemon[x]['castlefightrole'] = darkplayer['castlefightrole']
    darkdemon[x]['castle'] = darkplayer['castle']
    darkdemon[x]['allies'] = darkplayer['allies']
    darkdemon[x]['weapon'] = cw_weaponlist.DarkDemonWeapon()

    return darkdemon

def summon_castlefight_skeleton(game, player):
    newweakskele = newratuser(game)
    weakskele = createplayer(newweakskele, photo=None)
    for idsss in weakskele:
        x = idsss
        break
    weakskele[x]['name'] = 'Проклятый скелет['+player['name']+']|💀'
    weakskele[x]['team'] = 'necromant'
    weakskele[x]['full_npc'] = True
    weakskele[x]['controller'] = 'bot'
    weakskele[x]['was_castlenecromant_skele'] = True
    weakskele[x]['hp'] = 1
    weakskele[x]['maxhp'] = 1
    weakskele[x]['zombie'] = 2+game['summoned_castlefight_skeletons']
    game['summoned_castlefight_skeletons'] += 1
    game['necromant_reborn_buff'] -= 1
    necroplayer = None
    for ids in game['players']:
        target = game['players'][ids]
        if target['team'] == 'necromant':
            necroplayer = target
            break
    weakskele[x]['castlefightrole'] = necroplayer['castlefightrole']
    weakskele[x]['castle'] = necroplayer['castle']
    weakskele[x]['allies'] = necroplayer['allies']
    weakskele[x]['weapon'] = player['weapon']#cw_weaponlist.SkeleSword()
    weakskele[x]['skills'] = player['skills']

    for ids in game['players']:
        target = game['players'][ids]
        if target['id'] not in weakskele[x]['nearplayers']:
            weakskele[x]['nearplayers'].append(target['id'])
        if weakskele[x]['id'] not in target['nearplayers']:
            target['nearplayers'].append(weakskele[x]['id'])

    return weakskele

def summon_weakskele(game, weakskeles, weakskeletype='normal'):
    newweakskele = newratuser(game)
    weakskele = createplayer(newweakskele, photo=None)
    for idsss in weakskele:
        x = idsss
        break
    weakskele[x]['name'] = 'Дряхлый скелет ' + str(weakskeles + 1) + '|🦴'
    weakskele[x]['team'] = 'ghoul'
    weakskele[x]['controller'] = 'bot'
    weakskele[x]['hp'] = 1
    weakskele[x]['maxhp'] = 1
    weakskele[x]['weapon'] = weaponlist.WeakSkeleSword()
    weakskele[x]['weakskeletype'] = weakskeletype
    if weakskeletype == 'afraid_of_loneliness':
        weakskele[x]['weapon'].accuracybonus -= 3
        weakskele[x]['weapon'].cubes -= 1
        weakskele[x]['maxenergy'] -= 2
        weakskele[x]['energy'] -= 2
    return weakskele

def summon_demon(game):
    newdemon = newratuser(game)
    demon = createplayer(newdemon, photo=None)
    for idsss in demon:
        x = idsss
        break
    demon[x]['name'] = 'Незнакомец|👤'
    demon[x]['team'] = 'demon'
    demon[x]['controller'] = 'bot'
    demon[x]['hp'] = 2
    demon[x]['maxhp'] = 2
    demon[x]['weapon'] = weaponlist.Buckshot()
    return demon


def summon_darkrat(game, darkrats):
    newdarkrat = newratuser(game)
    darkrat = createplayer(newdarkrat, photo=None)
    for idsss in darkrat:
        x = idsss
        break
    code = game['code1']
    darkrat[x]['name'] = 'Тень крысы ' + code + '|🐭🌑'
    darkrat[x]['team'] = 'dark'
    darkrat[x]['controller'] = 'bot'
    darkrat[x]['hp'] = 0
    darkrat[x]['maxhp'] = 4
    darkrat[x]['weapon'] = weaponlist.DarkRatWeapon()
    darkrat[x]['is_dark_rat'] = True
    return darkrat

def summon_eyedemon(game, eyedemons, hp=4):
    neweyedemon = newratuser(game)
    eyedemon = createplayer(neweyedemon, photo=None)
    for idsss in eyedemon:
        x = idsss
        break
    eyedemon[x]['name'] = 'Трехглазый демон ' + str(eyedemons+1) + '|👁👁👁'
    eyedemon[x]['team'] = 'hell'
    eyedemon[x]['controller'] = 'bot'
    eyedemon[x]['hp'] = 4
    eyedemon[x]['maxhp'] = 4
    eyedemon[x]['weapon'] = weaponlist.EyedemonWeapon()
    eyedemon[x]['is_eyedemon'] = True
    return eyedemon


def summon_amalgama(game, amalgamas):
    newamalgama = newratuser(game)
    amalgama = createplayer(newamalgama, photo=None)
    for idsss in amalgama:
        x = idsss
        break
    code = game['code2']
    amalgama[x]['name'] = 'Амальгама ' + code + '|🧿'
    amalgama[x]['team'] = 'dark'
    amalgama[x]['controller'] = 'bot'
    amalgama[x]['hp'] = 6
    amalgama[x]['maxhp'] = 6
    amalgama[x]['dmglimit'] = 38
    amalgama[x]['maxdmglimit'] = 38
    amalgama[x]['weapon'] = weaponlist.AmalgamaNoneWeapon()
    amalgama[x]['is_amalgama'] = True
    return amalgama

def summon_imp(game, imps, hp=2, nps = []):
    try:
        imps = len(imps)
    except:
        pass
    newimp = newratuser(game)
    imp = createplayer(newimp, photo=None)
    for idsss in imp:
        x = idsss
        break
    imp[x]['name'] = 'Имп ' + str(imps+1) + '|👿'
    imp[x]['team'] = 'hell'
    imp[x]['controller'] = 'bot'
    imp[x]['hp'] = hp
    imp[x]['maxhp'] = hp
    imp[x]['dmglimit'] = 6
    imp[x]['maxdmglimit'] = 6
    imp[x]['weapon'] = weaponlist.ImpSpear()
    imp[x]['is_imp'] = True
    imp[x]['nearplayers'] = nps
    imp[x]['skills'] = ['fire_regen', 'fire_power']
    for ids in nps:
        game['players'][ids]['nearplayers'].append(imp[x]['id'])
    #print('nearp=',imp[x]['nearplayers'])
    return imp


def summon_magmaworm(game, magmaworms, hp=3):
    try:
        magmaworms = len(magmaworms)
    except:
        pass
    newmagmaworm = newratuser(game)
    magmaworm = createplayer(newmagmaworm, photo=None)
    for idsss in magmaworm:
        x = idsss
        break
    magmaworm[x]['name'] = 'Магмовый червь ' + str(magmaworms+1) + '|🪱'
    magmaworm[x]['team'] = 'hell'
    magmaworm[x]['controller'] = 'bot'
    magmaworm[x]['hp'] = hp
    magmaworm[x]['maxhp'] = hp
    magmaworm[x]['dmglimit'] = 4
    magmaworm[x]['maxdmglimit'] = 4
    magmaworm[x]['weapon'] = weaponlist.MagmawormClaws()
    magmaworm[x]['is_magmaworm'] = True
    magmaworm[x]['skills'] = ['fire_resistance', 'burrow']
    return magmaworm

def summon_lucifer(game, hp=5):
    playeramount = len(game['players'])
    if playeramount == 1:
        playeramount += 1
    newlucifer = newratuser(game)
    lucifer = createplayer(newlucifer, photo=None)
    for idsss in lucifer:
        x = idsss
        break
    lucifer[x]['name'] = 'Люцифер' + '|❤️‍🔥'
    lucifer[x]['team'] = 'hell'
    lucifer[x]['controller'] = 'bot'
    lucifer[x]['hp'] = hp+(playeramount*4)
    lucifer[x]['maxhp'] = hp+(playeramount*4)
    lucifer[x]['luciferpower'] = playeramount-1
    lucifer[x]['dmglimit'] = 4 + playeramount*2
    lucifer[x]['maxdmglimit'] = 4 + playeramount*2
    lucifer[x]['weapon'] = weaponlist.LuciferBlade()
    lucifer[x]['is_lucifer'] = True
    return lucifer

def summon_radiodemon(game, hp=5):
    playeramount = len(game['players'])
    newradiodemon = newratuser(game)
    radiodemon = createplayer(newradiodemon, photo=None)
    for idsss in radiodemon:
        x = idsss
        break
    radiodemon[x]['name'] = 'Аластор' + '|❤️‍🔥'
    radiodemon[x]['team'] = 'hell'
    radiodemon[x]['controller'] = 'bot'
    radiodemon[x]['hp'] = hp+(playeramount*5)
    radiodemon[x]['maxhp'] = hp+(playeramount*5)
    radiodemon[x]['radiodemonpower'] = playeramount
    radiodemon[x]['dmglimit'] = 6 + playeramount*2
    radiodemon[x]['maxdmglimit'] = 6 + playeramount*2
    radiodemon[x]['weapon'] = weaponlist.AlastorRod()
    radiodemon[x]['weapon'].dmgbonus += (radiodemon[x]['radiodemonpower']-1)
    radiodemon[x]['is_radiodemon'] = True
    return radiodemon

def summon_darkness(game, darknesss):
    playeramount = len(game['players'])
    newdarkness = newratuser(game)
    darkness = createplayer(newdarkness, photo=None)
    for idsss in darkness:
        x = idsss
        break
    try:
        if len(darknesss) == 0 or len(darknesss) == 1:
            darkness[x]['name'] = 'Тьма|👁🌑🌑👁'
        else:
            darkness[x]['name'] = 'Тьма ' + str(len(darkness)) + '|👁🌑🌑👁'
    except:
        if darknesss == 0 or darknesss == 1:
            darkness[x]['name'] = 'Тьма|👁🌑🌑👁'
        else:
            darkness[x]['name'] = 'Тьма ' + str(darkness) + '|👁🌑🌑👁'
    darkness[x]['team'] = 'dark'
    darkness[x]['controller'] = 'bot'
    darkness[x]['hp'] = 5 + (playeramount * 5)
    darkness[x]['maxhp'] = 5 + (playeramount * 5)
    darkness[x]['darknessspelldmgbonus'] = playeramount - 1
    darkness[x]['weapon'] = weaponlist.DarknessWeapon()
    darkness[x]['dmglimit'] = 1000000
    darkness[x]['maxdmglimit'] = 1000000
    darkness[x]['is_dark_boss'] = True
    return darkness


def summon_mad_skeleton(game, player, madskeles):
    newmadskele = newratuser(game)
    madskele = createplayer(newmadskele, photo=None)
    for idsss in madskele:
        x = idsss
        break
    madskele[x]['name'] = 'Огромный злобный скелет ' + str(madskeles + 1) + '|💀'
    madskele[x]['team'] = player['team']
    madskele[x]['controller'] = 'bot'
    madskele[x]['hp'] = 12
    madskele[x]['maxhp'] = 12
    madskele[x]['weapon'] = weaponlist.MadSkeleWeapon()
    madskele[x]['dmglimit'] = 100
    madskele[x]['maxdmglimit'] = 100
    madskele[x]['energy'] = 5
    madskele[x]['maxenergy'] = 5
    madskele[x]['is_mad_skele'] = True
    madskele[x]['skills'] = ['bicepc']
    return madskele

def summon_angry_rhino(game, team, target):
    newrhino = newratuser(game)
    rhino = createplayer(newrhino, photo=None)
    for idsss in rhino:
        x = idsss
        break
    rhino[x]['name'] = 'Носорог|🦏'
    rhino[x]['team'] = team
    rhino[x]['controller'] = 'bot'
    rhino[x]['hp'] = 1
    rhino[x]['maxhp'] = 1
    rhino[x]['dmglimit'] = 10
    rhino[x]['maxdmglimit'] = 10
    rhino[x]['energy'] = 5
    rhino[x]['maxenergy'] = 5
    rhino[x]['weapon'] = weaponlist.Horn()
    rhino[x]['zombie'] = 1
    rhino[x]['lastattacktarget'] = target
    return rhino

def summon_ghoul(game, ghouls, hp=6, energy=5, team='ghoul', full_control=False, player=None, dmglimit=4):
    newghoul = newratuser(game)
    ghoul = createplayer(newghoul, photo=None)
    for idsss in ghoul:
        x = idsss
        break
    ghoul[x]['name'] = 'Вурдалак ' + str(ghouls + 1) + '|👹'
    ghoul[x]['team'] = team
    ghoul[x]['controller'] = 'bot'
    ghoul[x]['hp'] = hp
    ghoul[x]['maxhp'] = hp
    ghoul[x]['dmglimit'] = dmglimit
    ghoul[x]['maxdmglimit'] = dmglimit
    ghoul[x]['energy'] = energy
    ghoul[x]['maxenergy'] = energy
    ghoul[x]['is_ghoul'] = True
    ghoul[x]['weapon'] = weaponlist.GhoulTeeth()
    ghoul[x]['skills'] = ['ghoul_vampirism', 'ghoul_bloodlust']
    ghoul[x]['is_vurdalak'] = True
    if full_control:
        ghoul[x]['zombie'] = 3
        if player != None:
            ghoul[x]['master'] = player['id']
            # ghoul[x]['id'] = player['id']
            # ghoul[x]['controller'] = 'player'
    return ghoul


def summon_zombierat(game, zombierats, team='necromant', full_control=False, player=None):
    newzombierat = newratuser(game)
    zombierat = createplayer(newzombierat, photo=None)
    for idsss in zombierat:
        x = idsss
        break
    zombierat[x]['name'] = 'Зомби-крыса ' + str(zombierats + 1) + '|🐭'
    zombierat[x]['team'] = team
    zombierat[x]['controller'] = 'bot'
    zombierat[x]['hp'] = 4
    zombierat[x]['maxhp'] = 4
    zombierat[x]['dmglimit'] = 6
    zombierat[x]['maxdmglimit'] = 6
    zombierat[x]['energy'] = 5
    zombierat[x]['maxenergy'] = 5
    zombierat[x]['weapon'] = random.choice(npcweapons)()
    skilllimit = 3
    inventorylimit = 3
    if full_control:
        ratskills = getnpcskills(game, zombierat[x], skilllimit=skilllimit, banned_skills=['medic'], dopskills=[])
    else:
        ratskills = getnpcskills(game, zombierat[x], skilllimit=skilllimit)
    ratinventory = []
    which_list = npcitems.copy()
    for i in range(inventorylimit):
        item = random.choice(which_list)
        while item in ratinventory:
            item = random.choice(which_list)
        ratinventory.append(item)
    zombierat[x]['skills'] = ratskills
    for ids in zombierat[x]['skills']:
        if ids == 'cherep':
            zombierat[x]['dmglimit'] += 3
        if ids == 'dvuzhil':
            zombierat[x]['hp'] += 1
            zombierat[x]['maxhp'] += 1
        if ids == 'protivogaz':
            zombierat[x]['energy'] += 1
            zombierat[x]['maxenergy'] += 1
        if ids == 'medic':
            ratinventory.append('stimulator')
        if ids == 'berserk':
            zombierat[x]['maxenergy'] -= 2
            zombierat[x]['energy'] -= 2
    zombierat[x]['inventory'] = ratinventory
    if full_control:
        zombierat[x]['zombie'] = 3
        if player != None:
            zombierat[x]['master'] = player['id']
            # zombierat[x]['id'] = player['id']
            # zombierat[x]['controller'] = 'player'
    return zombierat


def summon_necromant(game, amount):
    newnecromant = newrhinouser(game)
    necromant = createplayer(newnecromant, photo=None)
    for idsss in necromant:
        x = idsss
        break
    if amount > 1:
        z = ' ' + str(amount)
    else:
        z = ''
    necromant[x]['name'] = 'Некромант' + z + '|🖤'
    necromant[x]['team'] = 'necromant'
    necromant[x]['controller'] = 'bot'
    necromant[x]['hp'] = 4
    necromant[x]['maxhp'] = 4
    necromant[x]['dmglimit'] = 1000
    necromant[x]['maxdmglimit'] = 1000
    necromant[x]['maxenergy'] = 4
    necromant[x]['energy'] = 4
    necromant[x]['is_necromant'] = True
    necromant[x]['weapon'] = weaponlist.NecromantStaff()
    # for ids in game['players']:
    #    necromant[x]['hp'] += 1
    #    necromant[x]['maxhp'] += 1
    en = 0
    for ids in game['players']:
        en += 1
    necromant[x]['energy'] += int(en)
    necromant[x]['maxenergy'] += int(en)
    necromant[x]['weapon'].dmgbonus += len(game['players'])
    necromant[x]['skills'] = ['necromant_up_mad_skeletons', 'necromant_summon_simple_skeletons',
                              'necromant_summon_ghouls', 'necromant_summon_zombie_rats']
    # necromant[x]['selfarmorchance'] = 60
    # necromant[x]['selfarmor'] = 1+len(game['players'])
    return necromant


def summon_rhino(game, amount, team='rhino'):
    newrhino = newrhinouser(game)
    amount += 1
    rhino = createplayer(newrhino, photo=None)
    for idsss in rhino:
        x = idsss
        break
    if amount > 1:
        z = ' ' + str(amount)
    else:
        z = ''
    rhino[x]['name'] = 'Носорог' + z + '|🦏'
    rhino[x]['team'] = team
    rhino[x]['controller'] = 'bot'
    rhino[x]['hp'] = 4
    rhino[x]['maxhp'] = 4
    rhino[x]['dmglimit'] = 9
    rhino[x]['maxdmglimit'] = 9
    rhino[x]['maxenergy'] = 3
    rhino[x]['energy'] = 3
    rhino[x]['is_rhino'] = True
    rhino[x]['weapon'] = weaponlist.Horn()
    for ids in game['players']:
        rhino[x]['hp'] += 1
        rhino[x]['maxhp'] += 1
    en = 0
    for ids in game['players']:
        en += 1
    if team == 'rhino':
        rhino[x]['energy'] += int(en / 2)
        rhino[x]['maxenergy'] += int(en / 2)
        rhino[x]['weapon'].dmgbonus += en
        rhino[x]['selfarmorchance'] = 60
        rhino[x]['selfarmor'] = 1 + en
    return rhino

def summon_small_rhino(game, amount, team='rhino'):
    amount += 1
    newrhino = newrhinouser(game)
    rhino = createplayer(newrhino, photo=None)
    for idsss in rhino:
        x = idsss
        break
    if amount > 1:
        z = ' ' + str(amount)
    else:
        z = ''
    rhino[x]['name'] = 'Мини-носорог' + z + '|🦏'
    rhino[x]['team'] = team
    rhino[x]['controller'] = 'bot'
    rhino[x]['hp'] = 3
    rhino[x]['maxhp'] = 3
    rhino[x]['dmglimit'] = 5
    rhino[x]['maxdmglimit'] = 5
    rhino[x]['maxenergy'] = 3
    rhino[x]['energy'] = 3
    rhino[x]['is_rhino'] = True
    rhino[x]['weapon'] = weaponlist.Horn()
    i = True
    for ids in game['players']:
        if i:
            rhino[x]['hp'] += 1
            rhino[x]['maxhp'] += 1
        i = not i
    en = 0
    for ids in game['players']:
        en += 1
    if team == 'rhino':
        rhino[x]['energy'] += int(en / 4)
        rhino[x]['maxenergy'] += int(en / 4)
        rhino[x]['weapon'].dmgbonus += int(en/3)
        rhino[x]['selfarmorchance'] = 50
        rhino[x]['selfarmor'] = 1+int(en/2)
    return rhino


def end_turn(game, bot=bot):
    try:
        game['stage'] = None
        #print("11858: neurodemon1", game['fullneuraldemon1'])
        # try:
        #    game['timer'].cancel()
        # except:
        #    pass
        # idstoremove = []
        # for ids in game['alltimers']:
        #    try:
        #        ids.cancel()
        # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
        #        idstoremove.append(ids)
        #    except:
        #        pass
        # for ids in idstoremove:
        #    game['alltimers'].remove(ids)
        prov = False
        provtext = ''
        for ids in game['players']:
            player = game['players'][ids]
            if game['pureduel_rats'] and not game['neuralfight'] and not game['pureduel_rats_hard']:
                if player['controller'] == 'bot':
                    for idss in game['players']:
                        if game['players'][idss]['controller'] == 'player':
                            target = game['players'][idss]
                            break
                    weights_table = get_act_weights(player, target)
                    try:
                        target_act = target['act'][0]
                    except:
                        target_act = 'skip'
                    has_adrenaline = False
                    for idss in target['dopuseditems']:
                        if idss[0] == "adrenaline":
                            has_adrenaline = True
                    if target_act == "attack" and has_adrenaline:
                        target_act = "adrenaline"
                    my_act = player['act'][0]
                    has_adrenaline = False
                    for idss in player['dopuseditems']:
                        if idss[0] == "adrenaline":
                            has_adrenaline = True
                    if my_act == "attack" and has_adrenaline:
                        my_act = "adrenaline"
                    if my_act == "shieldgen":
                        my_act = "shield"
                    if target_act == "shieldgen":
                        target_act = "shield"
                    choicen_acts = player['my_potential_acts']
                    if target_act not in player['target_potential_acts']:
                        print('target act not in possible: ',target_act)
                    else:
                        target_act = 'player_'+target_act
                        for idss in player['rat_demons']:
                            choicenact_weights = []
                            choicen_demon = player['rat_demons'][idss]
                            if idss == player['choicen_demon']:
                                currentact = my_act
                            else:
                                for idsss in choicen_acts:
                                    choicenact_weights.append(choicen_demon['pattern'][idsss.replace('rat_', '')])
                                currentact = random.choices(choicen_acts, weights=choicenact_weights)[0]
                                #currentact = currentact.replace('rat_', '')
                            if "player_" not in target_act:
                                target_act = "player_"+target_act
                            if 'shieldgen' in target_act:
                                target_act = target_act.replace("shieldgen", "shield")

                            if "rat_" not in currentact:
                                currentact = "rat_"+currentact
                            if 'shieldgen' in currentact:
                                currentact = currentact.replace("shieldgen", "shield")
                            turn_value = weights_table[target_act][currentact]
                            player['rat_demons'][idss]['score'] += turn_value





            if not game['castlefight']:
                if player['is_necromant']:
                    invulnerable = False
                    for idss in game['players']:
                        target = game['players'][idss]
                        if ('Вурдалак' in target['name'] or 'Скелет' in target['name'] or 'Огромный злобный скелет' in
                            target['name'] or \
                            'Зомби-крыса' in target['name']) and target['team'] == 'necromant' and not target['dead']:
                            invulnerable = True
                    if invulnerable:
                        player['shield'] = True
                        player['magic_strong_shield'] = True
            duitems = {}
            alreadycheck = []
            toremove = []
            for idss in player['dopuseditems']:
                if idss[0] not in duitems:
                    duitems.update({idss[0]: 1})
                else:
                    duitems[idss[0]] += 1
            for idss in duitems:
                if idss not in alreadycheck:
                    alreadycheck.append(idss)
                    itemamount = player['inventory'].count(idss)
                    # print('itemamount for '+idss+': '+str(itemamount))
                    how_many_remove = duitems[idss] - itemamount
                    # print('howmanyremove for ' + idss + ': ' + str(how_many_remove))
                    # print(player['dopuseditems'])
                    if how_many_remove > 0:
                        for i in range(how_many_remove):
                            for idsss in player['dopuseditems']:
                                if idsss[0] == idss:
                                    toremove.append(idsss)
                                    break
            for idss in toremove:
                try:
                    player['dopuseditems'].remove(idss)
                except:
                    print(traceback.format_exc())

            # for idss in duitems:
            #    idssamount = duitems.count(idss)
            # for idss in dellist:
            #    player['dopuseditems'].remove(idss)
            if 'autist' in player['skills']:
                if player['act'] == 'chain':
                    player['chaincd'] = chaincd
                if player['act'] == 'sokrush':
                    player['sokrusheniecd'] = sokrushcd
                if player['act'] == 'narsil':
                    player['narsilcd'] = narsilcd
                if player['act'] == 'firearrow':
                    player['firearrowcd'] = firearrowcd
                if player['act'] == 'watershield':
                    player['watershieldcd'] = watershieldcd

                lact = player['lastact']
                player['lastact'] = player['act']
                player['act'] = lact

                duseditems = player['lastdopuseditems']
                player['lastdopuseditems'] = player['dopuseditems']
                player['dopuseditems'] = duseditems

            seetext = ''
            if not game['providets'] and 'providets' in player['skills'] and not player['dead'] and player[
                'stun'] <= 0 and random.randint(1, 100) <= 20:
                prov = True
                player['providets'] = True
                player['changeweaponcd'] -= 1
                player['clawscd'] -= 1
                provtext += '👳‍♂|' + player['name'] + ' видит будущее и ходит сначала!\n'
                for idss in game['players']:
                    if game['players'][idss]['id'] != player['id'] and not game['players'][idss]['dead']:
                        seetext += game['players'][idss]['name'] + ':\n' + game['players'][idss]['seetext'] + '\n'
                        if len(game['players'][idss]['dopuseditems']) > 0:
                            seetext += 'Применённые предметы:\n'
                            for idsss in game['players'][idss]['dopuseditems']:
                                seetext += getname(idsss[0]) + ' на ' + game['players'][idsss[1]]['name'] + ', '
                            seetext = seetext[:len(seetext) - 2]
                            seetext += '\n'
                    seetext += '\n'
                sendm(bot, player['id'], seetext)

        if prov:
            game['providets'] = True
            tries = 0
            while True:
                try:
                    sendm(bot, game['id'], provtext)
                    break
                except:
                    tries += 1
                    if tries > 100:
                        del games[game['id']]
                        return
                    time.sleep(3)
            next_turn(game)
            return
        game['providets'] = False
        changewtext = game['text']
        if 'Ход ' + str(game['turn']) + ':' not in changewtext:
            game['text'] = 'Ход ' + str(game['turn']) + ':\n'
        else:
            game['text'] = ''
        if game['turn'] == 1 and game['necromant_reborn_buff'] > 0:
            game['text'] += '🖤|Некроманты наложили на поле боя проклятье '+str(game['necromant_reborn_buff'])+'го уровня.\n'
        game['text'] += changewtext
        game['turn'] += 1

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue

        for ids in game['players']:
            player = game['players'][ids]
            armor_debuff = 0
            for idss in player["armor_debuff"]:
                armor_debuff += player["armor_debuff"][idss]["power"]
            if armor_debuff > 0:
                game["effecttext"] += "⛓️‍💥|Броня "+player["name"]+" повреждена! ("+str(armor_debuff)+"💥)\n"
            if player['dopriest'] != None:
                target = game['players'][player['dopriest']]
                if target['light_aspect'] < 0:
                    target['light_aspect'] = 0
                target['light_aspect'] += 3
                if target['id'] == player['id']:
                    game['text'] += '☀️|' + player[
                        'name'] + ' освящает свое оружие! Оно получает аспект света (1) на 3 хода.\n'
                else:
                    game['text'] += '☀️|' + player['name'] + ' освящает оружие ' + target[
                        'name'] + '! Оно получает аспект света (1) на 3 хода.\n'
                player['dopriest'] = None
                player['priestcd'] = 6
            if player['createillusion']:
                game['text'] += '🎭|Иллюзионист ' + player['name'] + ' создаёт точную копию себя!\n'
            if player['demonform']:
                game['text'] += '👹|Bloodseeker ' + player[
                    'name'] + ' превращается в демона, теряет 1 жизнь и получает вампиризм!\n'
                player['hp'] -= 1
                player['can_summon_zombie'] = True
                game['text'] += '♥' * player['hp'] + '|' + player['name'] + ' теряет 1 хп. Остаётся ' + str(
                    player['hp']) + ' хп.\n'
                player['demonheal'] = 2
                player['demoncd'] = 7
            if player['bat'] != False:
                game['players'][player['bat']]['waitbats'].append([player['id'], 2])
                game['text'] += '🦇|' + player['name'] + ' выпускает летучую мышь!\n'
                player['batcd'] = 3
            if player['act'] == None:
                continue
            if player['act'][0] == 'blockshield':
                game['text'] += '🛡|' + player['name'] + ' блокирует урон щитом.\n'
                player['weaponshield'] = True
            if player['act'][0] == 'control_necrofighter':
                controllable_npc = game['players'][player['controllable_necrofighter']]
                game['text'] += '🧠|' + player['name'] + ' контролирует разум ' + controllable_npc['name'] + '.\n'
                player['shield'] = True
            if player['act'][0] == 'summon_dark_demon':
                interrupt = False
                for idss in game['players']:
                    target = game['players'][idss]
                    if target['act'] != None and target['act'][0] == 'castle_explosion' and target['act'][1] == player['id']:
                        interrupt = True
                        break
                if interrupt:
                    game['text'] += '👁⚫️⚫️👁|' + player[
                            'name'] + ' пытался воззвать к силам тьмы, но был прерван огромной волной огня.\n'
                else:
                    game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' взывает к силам тьмы, позволяя демону забрать свое тело...\n'
                    skillvalue = 0
                    for idsss in player['skills']:
                        try:
                            skillvalue += int(idsss.split('?')[1])
                        except:
                            skillvalue += 1
                    weaponvalue = player['weapon'].lvl * 3
                    lvlvalue = int(player['lvl']*0.5)
                    game['darkcastle_demon'] += skillvalue
                    game['darkcastle_demon'] += weaponvalue
                    game['darkcastle_demon'] += lvlvalue
                    player['dead_from_dark'] = True
            if player['act'][0] == 'hypnotist' or (player['act'][0] == 'demonattack' and player['demonbeam'] == 'violet'):
                game['hypnotists'].append(player['id'])
                player['hypnotistcd'] = 6
                player['energy'] -= 3
                target = game['players'][player['act'][1]]
                maint = False
                secondt = False
                if not game['classic_game']:
                    if (target['act'] != None and not isinstance(target['act'][1], str) and target['act'][0] not in [
                        'pricel', 'ritual', 'lighting', 'zombieup']) or len(target['dopuseditems']) > 0:
                        if target['act'] != None and not isinstance(target['act'][1], str) and target['act'][0] != 'pricel':
                            hypnotargets = []
                            target_target = game['players'][target['act'][1]]
                            for idss in game['players']:
                                if target['team'] == target_target['team']:
                                    if game['players'][idss]['team'] != target['team'] and not game['players'][idss][
                                        'dead']:
                                        hypnotargets.append(game['players'][idss])
                                else:
                                    if game['players'][idss]['team'] == target['team'] and not game['players'][idss][
                                        'dead']:
                                        hypnotargets.append(game['players'][idss])
                            newtarget = random.choice(hypnotargets)
                            maint = True
                            target['act'][1] = newtarget['id']
                        if len(target['dopuseditems']) > 0:
                            for idss in target['dopuseditems']:
                                target_target = game['players'][idss[1]]
                                hypnotargets = []
                                for idsss in game['players']:
                                    if target['team'] == target_target['team']:
                                        if game['players'][idsss]['team'] != target['team'] and not game['players'][idsss][
                                            'dead']:
                                            hypnotargets.append(game['players'][idsss])
                                    else:
                                        if game['players'][idsss]['team'] == target['team'] and not game['players'][idsss][
                                            'dead']:
                                            hypnotargets.append(game['players'][idsss])
                                newtarget = random.choice(hypnotargets)
                                secondt = True
                                idss[1] = newtarget['id']
                        if (player['act'][0] == 'demonattack' and player['demonbeam'] == 'violet'):
                            game['text'] += '🟣|Фиолетовый луч ' + player['name'] + ' сбивает прицел ' + target[
                                'name'] + '!\n'
                        else:
                            if maint and not secondt:
                                game['text'] += '🌚|Гипнотизёр ' + player['name'] + ' сбивает прицел ' + target[
                                    'name'] + '. Новая цель - ' + newtarget['name'] + '!\n'
                            if secondt and not maint:
                                game['text'] += '🌚|Гипнотизёр ' + player['name'] + ' сбивает прицел ' + target['name'] + '!\n'
                            if maint and secondt:
                                game['text'] += '🌚|Гипнотизёр ' + player['name'] + ' сбивает прицел ' + target['name'] + '!\n'

                    else:
                        if (player['act'][0] == 'demonattack' and player['demonbeam'] == 'violet'):
                            game['text'] += '💨|Фиолетовый луч ' + player['name'] + ' пытается сбить прицел ' + target[
                                'name'] + ', но безуспешно.\n'
                        else:
                            game['text'] += '🌝|Гипнотизёру ' + player['name'] + ' не удаётся сбить прицел ' + target[
                                'name'] + '.\n'
                else:
                    if (target['act'] != None and target['act'][0] in ['attack', 'chain', 'sokrush']):
                        target['act'][1] = target['id']
                        target['hypnodebuff'] = -2
                        game['text'] += '🌚|Гипнотизёр ' + player['name'] + ' сбивает прицел ' + target[
                            'name'] + '. Новая цель - ' + target['name'] + '!\n'
                    else:
                        game['text'] += '🌝|Гипнотизёру ' + player['name'] + ' не удаётся сбить прицел ' + target[
                            'name'] + '.\n'

            elif player['act'][0] == 'freeze_energy':
                game['text'] += '❄️|' + player[
                    'name'] + ' замораживает воздух на поле боя. Восстановление энергии всех персонажей заблокировано на 2 хода!\n'
                game['freeze_energy'] = 2
                player['invokercd'] = 3

            # elif player['act'][0] == 'sunstrike':
            #    target['recoverydebuff'].append([2, 2])    #[0] - сила дебаффа, [1] - длительность

        for ids in game['players']:
            player = game['players'][ids]

            if player["act"] == None:
                continue

            if player['act'][0] == 'drink_energy':
                player['invokercd'] = 4
                target = game['players'][player['act'][1]]
                target['energy'] -= 3
                actualenergy = regen_energy(game, player, 3)
                game['text'] += '🔋|' + player['name'] + ' высасывает 3⚡️ из ' + target['name'] + '!\n'

            elif player['act'][0] == 'doom':
                player['doomcd'] = 9
                target = game['players'][player['act'][1]]
                target['bigdooms'].append([player['id'], 3])
                if target['doomedskills'] != []:
                    pass
                else:
                    target['need_to_doom'] = True
                    target['doomedskills'] = target['skills']
                    #target['doomedinventory'] = target['inventory']
                    target['skills'] = []
                #target['inventory'] = []
                game['text'] += '🔥💀🔥|' +player['name']+' использует DOOM на '+ target['name'] + ', способности и предметы цели заблокированы на 3 хода!\n'
                player['energy'] -= 1

            elif player['act'][0] == 'lighting_to_heroes':
                for idss in game['players']:
                    targett = game['players'][idss]
                    if targett['team'] == 'necromant' and 'Некромант' in targett['name']:
                        pass
                    else:
                        targett['dead'] = True
                        targett['hp'] = -1000
                game['text'] += '💬|' + player[
                    'name'] + ': У меня закончился чай с конфетами, не желаю больше ждать. Умрите же!\n'
                game[
                    'effecttext'] += '💥⚡️|Зал содрогнулся. Весь потолок покрылся черными тучами, которые спустя секунду начали осыпать зал молниями. ' + \
                                     'Все герои мертвы, игра окончена.\n'

            elif player['act'][0] == 'infect_weapon':
                player['invokercd'] = 2
                target = game['players'][player['act'][1]]
                target['infected_weapon'].append([1, 3])  # [0] - сила дебаффа, [1] - длительность
                game['text'] += '🦠|' + player['name'] + ' отравляет оружие ' + target[
                    'name'] + ' на 2 хода! Цель будет терять 1⚡️ каждый раз, когда атакует.\n'

            elif player['act'][0] == 'big_light_strike':
                player['invokercd'] = 4
                game['light_strikes'].append([5, 3])  # [0] - сила удара, [1] - задержка
                game['text'] += '⚠️|' + player['name'] + ' электризует поле боя, через 3 хода произойдет взрыв!\n'

            elif player['act'][0] == 'iceheart':
                player['invokercd'] = 6
                target = game['players'][player['act'][1]]
                arm = 5
                target['iceheart'] = arm
                game['text'] += '💙|' + player['name'] + ' замораживает сердце ' + target[
                    'name'] + '! Он получает ' + str(arm) + ' брони.\n'

            elif player['act'][0] == 'use_doom':
                doomtext = ''
                for idss in game['players']:
                    target = game['players'][idss]
                    if not target['is_lucifer']:
                        if not target['dead']:
                            target['bigdooms'].append([player['id'], 666])
                            target['doomedskills'] = target['skills']
                            target['skills'] = []
                            doomtext += '🔥💀🔥|'+target['name']+' проклят на 666 ходов!\n'

                game['text'] += '💬'+player['name']+': Будьте же вы все ПРОКЛЯТЫ!!!\n'
                game['text'] += '📜|По полю боя эхом раздались слова Люцифера, от чего камень под ногами начал трескаться, а лавовые озера стали бурлить.\n'
                game['text'] += '📜|Каждый, кто еще оставался жив, пожалел об этом. Синее пламя охватило всех - и адских созданий, и людей, лишая дара речи и способностей.\n'
                game['text'] += '📜|Люцифер опирается на свой клинок, пытаясь восстановить силы после применения мощного заклинания.\n'
                player['rest_after_doom'] = 3
                game['effecttext'] += doomtext

            elif player['act'][0] == 'rest_after_doom':
                player['rest_after_doom'] -= 1
                if player['rest_after_doom'] > 0:
                    game['text'] += '😤|'+player['name']+' восстанавливает силы ('+str(player['rest_after_doom'])+')\n'
                else:
                    game['text'] += '❤️‍🔥|'+player['name']+' восстановил силы и готов уничтожить всех, кто вторгся на его территорию.\n'
                    player['luciferpower'] = player['luciferpower']*100

            elif player['act'][0] == 'inzhener':
                item = player['act'][1]
                player['inventory'].append(item)
                if 'inzhener?2' in player['skills']:
                    player['grenadedmgbonus'] += 1
                if 'inzhener?3' in player['skills']:
                    player['grenadedmgbonus'] += 2
                game['text'] += '🔧|' + player['name'] + ' создает ' + getname(item) + '!\n'
                player['inzhenercd'] = 6
                if 'inzhener?1' in player['skills']:
                    player['inzhenercd'] = 6
                if 'inzhener?2' in player['skills']:
                    player['inzhenercd'] = 5
                if 'inzhener?3' in player['skills']:
                    player['inzhenercd'] = 4

            if player['act'][0] == 'tentacles':
                target = game['players'][player['act'][1]]
                game['text'] += '♨️|' + player['name'] + ' щелкает пальцами. '+target['name']+' чувствует дрожание земли под ногами...\n'
                player['tentacles_turn'] =  True
                player['tentacles_target'] = player['act'][1]

            if player['act'][0] == 'tentacles2':
                player['tentaclescd'] = 4
                target = game['players'][player['act'][1]]
                if not game['completed_hell']:
                    if target['act'] != None and target['act'][0] == 'dark_energy':
                        game['text'] += '♨️|Из-под земли около ' + player[
                            'name'] + ' вылезают щупальца, готовые поглотить цель, но использованная им тёмная энергия дезориентировала их.\n'
                        target['act'] = ['noneact', 'self']
                    else:
                        game['text'] += '♨️|Из-под земли около ' + target[
                            'name'] + ' вылезают щупальца, которые утягивают цель в глубины преисподней.\n'
                        target['dead'] = True
                        target['eliminated'] = True
                else:
                    if target['act'] != None and target['act'][0] == 'dark_energy':
                        game['text'] += '♨️|Из-под земли около ' + player[
                            'name'] + ' вылезают щупальца, готовые поглотить цель, но использованная им тёмная энергия дезориентировала их.\n'
                        target['act'] = ['noneact', 'self']
                    else:
                        maxdmg = 6
                        maxdmg += player['radiodemonpower']*4
                        dmg = random.randint(3, maxdmg)
                        game['text'] += '♨️|Из-под земли около ' + target[
                            'name'] + ' вылезают щупальца, которые пронзают ту насквозь! Нанесено '+str(dmg)+' урона.\n'
                        takedamage(game, player, target, dmg)
                        if target['blood'] <= 0:
                            target['blood'] = 4
                            if 'dvuzhil' in target['skills']:
                                target['blood'] += 2
                            target['blood'] += get_target_dvuzhil(target)
                            game['text'] += '❣️|' + target['name'] + ' истекает кровью!\n'
                        else:
                            if target['blood'] > 1:
                                target['blood'] -= 1
                            game['text'] += '❣️|Кровотечение ' + target['name'] + ' усиливается!\n'

            elif player['act'][0] == 'virus_wait':
                game['text'] += '👁‍🗨|' + player['name'] + ' ищет цель с самым большим количеством энергии...\n'

            elif player['act'][0] == 'change_skill':
                randomskilllist = skills.copy()
                if 'invoker' in randomskilllist:
                    randomskilllist.remove('invoker')
                if not player['weapon'].ranged:
                    randomskilllist.remove('sniper')
                if player['weapon'].ranged:
                    randomskilllist.remove('bicepc')
                if 'ritualist' in randomskilllist:
                    randomskilllist.remove('ritualist')
                if 'navod' in randomskilllist:
                    randomskilllist.remove('navod')
                if 'oruzh' in randomskilllist:
                    randomskilllist.remove('oruzh')
                if 'necromant' in randomskilllist:
                    randomskilllist.remove('necromant')
                if 'invoker' in player['skills']:
                    player['skills'].remove('invoker')
                newskill = random.choice(randomskilllist)
                player['skills'].append(newskill)
                game['text'] += '😈|' + player['name'] + ' отрекается от магии, получая взамен способность "' + getname(
                    newskill) + '"!\n'
                if newskill == 'dvuzhil':
                    player['hp'] += 1
                    player['maxhp'] += 1
                if newskill == 'cherep':
                    player['dmglimit'] += 3
                    player['maxdmglimit'] += 3
                    player['chereparmor'] += 3
                if newskill == 'medic':
                    player['inventory'].append('stimulator')
                if newskill == 'berserk':
                    player['maxenergy'] = 3
                    player['energy'] = player['maxenergy']
                if newskill == 'protivogaz':
                    player['maxenergy'] += 1
                    player['energy'] += 1
                if newskill == 'pyrotech':
                    player['inventory'].append('bomb')
                if newskill == 'alchemist':
                    player['inventory'].append('madpotion')
                if newskill == 'zapas':
                    for i in range(2):
                        lst = items.copy()
                        if player['controller'] == 'bot':
                            lst = npcitems.copy()
                        x = random.choice(lst)
                        while x in player['inventory']:
                            x = random.choice(lst)
                        player['inventory'].append(x)
                if newskill == 'narkoman':
                    x = random.choice(['adrenaline', 'dzet', 'hitin'])
                    player['inventory'].append(x)

            elif player['act'][0] == 'madskele_prepare':
                game['text'] += '💈|' + player['name'] + ' поднимает над собой колонну.\n'
                player['madskele_attack'] = 1

            elif player['act'][0] == 'madskele_wait':
                game['text'] += '❓|' + player['name'] + ' стоит на месте с поднятой колонной.\n'

            elif player['act'][0] == 'drink_tea':
                if random.randint(1, 100) <= 75:
                    game['text'] += '☕️|' + player['name'] + ' пьет чай.\n'
                else:
                    game['text'] += '🍬|' + player['name'] + ' ест конфеты.\n'

            elif player['act'][0] == 'amalgama_info':
                game['text'] += '❤️‍🩹' + player[
                    'name'] + ' закрывает глаза и пытается успокоиться, размышляя об амальгаме. Страх отступает!\n'
                player['dark_counter'] = 0
                player['pressed_info'] = True

            elif player['act'][0] == 'get_calm':
                game['text'] += '❤️‍🩹' + player['name'] + ' закрывает глаза и пытается успокоиться. Страх отступает!\n'
                player['dark_counter'] = 0
                player['pressed_info'] = True

            elif player['act'][0] == 'perekat_right':
                game['text'] += '💨' + player['name'] + ' делает перекат вправо!\n'
                player['darkness_uvorot'] += 1
                if player['darkness_uvorot'] == 4:
                    player['dead'] = True
                    game['text'] += '☠️|' + player['name'] + ' теряет сознание.\n'

            elif player['act'][0] == 'perekat_left':
                game['text'] += '💨' + player['name'] + ' делает перекат влево!\n'
                player['darkness_uvorot'] += 1
                if player['darkness_uvorot'] == 4:
                    player['dead'] = True
                    game['text'] += '☠️|' + player['name'] + ' теряет сознание.\n'

            elif player['act'][0] == 'wake_up':
                wakeup_amount = 1
                for idss in game['players']:
                    target = game['players'][idss]
                    target['darkness_sleep'] = False
                w_up = wakeups.find_one({})['wakeups']
                if player['id'] not in w_up:
                    wakeups.update_one({}, {'$push': {'wakeups': player['id']}})
                    w_up.append(player['id'])
                wakeup_amount = len(w_up)
                game['text'] += '☠️' + player['name'] + ' совершает самоубийство.\n'
                if not game['dark_said']:
                    game[
                        'text'] += '📜|Вы открываете глаза и обнаруживаете, что лежите на полу. Вы живы и здоровы, хотя секунду назад пытались ' + \
                                   'убить себя, и у вас вроде как получилось. ' + \
                                   'Над собой вы видите сгусток мрака, похожий на постоянно движущийся туман, на котором держатся все те глаза, которые ' + \
                                   'вы видели ранее. Несколько отростков тумана как будто соединились с вашим телом, проникая в голову и в сердце.\n'
                    game[
                        'text'] += '⬆️|' + 'Вы вскочили и оборвали связь темного нечто с вами. Обернувшись, вы обнаруживаете ту самую дверь, в которую вошли ранее. ' + \
                                   'Вы слышите шепот, но не можете определить, откуда он раздается, как будто он в вашей голове:\n'
                    pos_text = 'первый'
                    if wakeup_amount == 1:
                        pos_text = 'первый'
                    if wakeup_amount == 2:
                        pos_text = 'второй'
                    if wakeup_amount == 3:
                        pos_text = 'третий'
                    if wakeup_amount == 4:
                        pos_text = 'четвертый'
                    if wakeup_amount == 5:
                        pos_text = 'пятый'
                    if wakeup_amount == 6:
                        pos_text = 'шестой'
                    if wakeup_amount == 7:
                        pos_text = 'седьмой'
                    if wakeup_amount == 8:
                        pos_text = 'восьмой'
                    if wakeup_amount == 9:
                        pos_text = 'девятый'
                    if wakeup_amount == 10:
                        pos_text = 'десятый'
                    if wakeup_amount > 10:
                        pos_text = 'далеко не первый'
                    game[
                        'text'] += '💬Тьма|👁🌑🌑👁: Ты ' + pos_text + ', кто смог прервать мою магию усыпления... Придется принять свою ' + \
                                   'истинную форму, чтобы поглотить твои жизненные силы.\n'
                    game[
                        'effecttext'] += 'Тьма выпускает несколько конечностей, на концах которых находятся глаза. Некоторые глаза становятся ярко-красными, ' + \
                                         'а некоторые - морозно-синими. Остальные глаза объединяются в центре "туловища" тьмы, образуя один огромный глаз.\n'
                    allys = []
                    for idss in game['players']:
                        target = game['players'][idss]
                        if target['team'] == player['team'] and target['id'] != player['id']:
                            target['darkness_sleep'] = False
                            allys.append(target['id'])
                    if len(allys) > 0:
                        game['text'] += '⬆️|До того, как тьма атаковала, вы успеваете разбудить своих союзников.\n'
                    for idss in game['players']:
                        target = game['players'][idss]
                        if 'Тьма' in target['name'] and target['team'] == 'dark' and target['controller'] == 'bot':
                            target['dark_true_form'] = True
                    game['dark_said'] = True

            elif player['act'][0] == 'run_to_player':
                if not player['dark_true_form']:
                    game['text'] += '❓|Нечто гонится за вами...\n'

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'vor':
                target = game['players'][player['act'][1]]
                target['who_steal'].append(player['id'])

        for ids in game['players']:
            player = game['players'][ids]
            if len(player['who_steal']) > 0:
                who = random.choice(player['who_steal'])
                player['who_steal'] = [who]

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'vor' or player['passivevor']:
                target = None
                if player['passivevor']:
                    player['passivevor'] = False
                    targets = []
                    for idss in game['players']:
                        tg = game['players'][idss]
                        if tg['team'] != player['team'] and not tg['dead'] and tg['stun'] <= 0:
                            targets.append(tg)
                    if len(targets) > 0:
                        target = random.choice(targets)
                        target['who_steal'] = [player['id']]
                else:
                    target = game['players'][player['act'][1]]
                if target != None:
                    player['vorcd'] = 3
                    vor = False
                    if player['id'] in target['who_steal']:
                        if target['act'] != None and target['act'][0] in ['stimulator', 'grenade', 'molotov', 'flash',
                                                                          'shield', 'knife', 'bint']:
                            player['inventory'].append(target['act'][0])
                            target['inventory'].remove(target['act'][0])
                            
                            if 'alex_vor' in player['customtexts'] and player['customtexts']['alex_vor']:
                                game['text'] += '🙂|' + target['name'] + ' пытается использовать ' + getname(target['act'][0])+ ' но, ' + player['name'] + ' изымает предмет из его рук и рассеивает в пыль! ' + '\n'
                            else:
                                game['text'] += '😏|' + target['name'] + ' пытается использовать ' + getname(target['act'][0]) + ', но предмет оказывается в руках у ' + player['name'] + '!\n'
                            
                            vor = True
                            target['act'] = ['notext', 'self']
                        for idss in target['dopuseditems']:
                            player['inventory'].append(idss[0])
                            try:
                                target['inventory'].remove(idss[0])
                            except:
                                pass
                            game['text'] += '😏|' + target['name'] + ' пытается использовать ' + getname(
                                idss[0]) + ', но предмет оказывается в руках у ' + player['name'] + '!\n'
                            vor = True
                        target['dopuseditems'] = []
                    if not vor:
                        if 'alex_vor' in player['customtexts'] and player['customtexts']['alex_vor']:
                            game['text'] += '🙃|Вору ' + player['name'] + ' нечего взять кроме души '+ target[
                            'name'] + '!\n'
                        else:
                            game['text'] += '😒|Вору ' + player['name'] + ' не удается ничего украсть у ' + target[
                            'name'] + '!\n'

            elif player['act'][0] == 'lighting':
                target = game['players'][player['act'][1]]
                if target['is_necromant']:
                    game['text'] += '👿|' + player[
                        'name'] + ' поднимает руки к небу. Разряд молнии бьет в ближайшую колонну.\n'
                    game['text'] += '💬|' + target['name'] + ': Использовать тёмную магию против МЕНЯ!? Глупо.\n'
                else:
                    target['hp'] -= 2
                    game['text'] += '👿|' + player['name'] + ' поднимает руки к небу. Разряд молнии бьет в ' + target[
                        'name'] + '!\n'
                    game['text'] += '♥️' * target['hp'] + '|' + target['name'] + ' теряет ' + str(
                        2) + ' жизнь(ей). Остается ' + str(target['hp']) + ' хп.\n'
                player['ritual_ability'] = False

            elif player['act'][0] == 'chargebow':
                player['lastcharge'] = True
                player['bowcharge'] += 1
                game['text'] += '🏹|' + player['name'] + ' натягивает тетиву Лука Асгард.\n'

            elif player['act'][0] == 'eugenwin':
                if random.randint(1, 100) <= 50:
                    for idss in game['players']:
                        target = game['players'][idss]
                        if target['id'] != player['id']:
                            target['dead'] = True
                    game['text'] += '🍺✅|' + ' пивная победа!\n'
                else:
                    game['text'] += '🍺❌|' + ' пивной луз.\n'
                    for idss in game['players']:
                        target = game['players'][idss]
                        if target['team'] == player['team']:
                            target['dead'] = True

            elif player['act'][0] == 'amalgama_mutate':
                player['dark_gun_charges'] = 0
                player['dark_dog_attacks'] = 0
                if player['fireticks'] > 1:
                    player['fireticks'] = 1
                    player['firestrength'] = 0
                player['amalgama_must_mutate'] = False
                player['energy'] = player['maxenergy']
                mutates = ['dark_dog', 'dark_gun', 'dark_man']
                currentmutate = ''
                if player['weapon'].name == "Огромный тесак":
                    currentmutate = 'dark_man'
                elif player['weapon'].name == "Теневая пушка":
                    currentmutate = 'dark_gun'
                elif player['weapon'].name == "Пасть собаки":
                    currentmutate = 'dark_dog'
                mutate = random.choice(mutates)
                while mutate == currentmutate:
                    mutate = random.choice(mutates)
                if mutate == 'dark_dog':
                    game['text'] += '🧬|Бесформенное тело ' + player[
                        'name'] + ' превращается в нечто, напоминающее огромную и очень злую собаку.\n'
                    player['weapon'] = weaponlist.AmalgamaThirdWeapon()
                elif mutate == 'dark_gun':
                    game['text'] += '🧬|Тело ' + player['name'] + ' изгибается, превращаясь в пушку.\n'
                    player['weapon'] = weaponlist.AmalgamaSecondWeapon()
                elif mutate == 'dark_man':
                    game['text'] += '🧬|' + player[
                        'name'] + ' приобретает человеческую форму. В руках она держит огромный тесак.\n'
                    player['weapon'] = weaponlist.AmalgamaFirstWeapon()
                targets = []
                for idss in game['players']:
                    target = game['players'][idss]
                    if target['team'] != player['team'] and not target['dead']:
                        targets.append(target)
                if len(targets) > 0:
                    target = random.choice(targets)
                    dark = 2
                    if target['pressed_info']:
                        dark = 1
                    target['dark_counter'] += dark
                    h = '🖤'
                    if target['dark_counter'] == 1:
                        h = '💚'
                    elif target['dark_counter'] == 2:
                        h = '🧡'
                    elif target['dark_counter'] == 3:
                        h = '💙'
                    elif target['dark_counter'] == 4:
                        h = '💜'
                    elif target['dark_counter'] == 5:
                        h = '🖤'
                    if target['dark_counter'] < 3:
                        darktext = h + '|' + player['name'] + ' погружает разум ' + target['name'] + ' во тьму. ' + \
                                   target['name'] + \
                                   ' чувствует страх (' + str(target['dark_counter']) + ').\n'
                    else:
                        darktext = h + '|̸̝͈̀͢͡' + player[
                            'name'] + ' п̷̛̣̯̂͒͜о̷̩̥̊̌̊͜͠г̷̱͚҇͛͢р̶̤̙̗͛̉͜͝ӳ̸̖͛͜͞ж̸̬̂̽͜͠а̵̡͚̳͛͝е҈̡͎̭̙҇́͊т̷̡̮͈҇̈́̇̾ р̸̧̮̗͗̐͠а̷̡̬́͞з̸̨̛̣̦́̅у̸̧̫̠̳́̇͠м҈͉̩͎͒͜͡ ' + \
                                   target['name'] + ' в̷̢͍̦҇̾ͅо҈̢̛͙͛ т̶̨͕͋̅͗͠ь̴̧̬͑͠м̵̮̤̭́̎͜͡у̸̡̛͔͉̯̒.̷̡͈̆̍̉͡ ' + target[
                                       'name'] + \
                                   ' ч҉̛͉̜͈̃̀͢у̵̧̖̭͂͞в҉͇̣̰͂͜͝с̸̨͚͚͋̍͂͝т҈̢̘̄̎̈́͞в̵̱҇̔̏͜ӱ̶̝́͢͡ӗ̵̨̘́̕т҉̨͕͎̥҇͆̚ с̷̛̫̈͗͜т҉̧̫̓̋͠р҉̡̜͚̤̿̍̚͞а̶͉̗҇́̀̚͢х̶̨͙̞̀̍̌͠ (' + str(
                            target['dark_counter']) + \
                                   ').\n'
                    game['text'] += darktext

            elif player['act'][0] == 'charge_dark_gun':
                player['dark_gun_charges'] += 1
                game['text'] += '🌑|' + player['name'] + ' "заряжает" в себя сгусток мрака.\n'

            elif player['act'][0] == 'parry':
                target = game['players'][player['act'][1]]
                player['parrycd'] = 5
                player['energy'] -= 0
                game['text'] += '🗡|' + player['name'] + ' готовится парировать ' + target['name'] + '.\n'
            elif player['act'][0] == 'pyrotechcharge':
                game['text'] += '⚒|Пиротехник ' + player['name'] + ' улучшает самодельную бомбу.\n'
                player['bombcharge'] += 1
                for idss in game['players']:
                    target = game['players'][idss]
                    if target['is_necromant']:
                        game[
                            'text'] += '⚫️|Некромант взмахивает посохом, стреляя черными искрами по самодельной бомбе. Та взрывается в руках ' + \
                                       player['name'] + ', ' + \
                                       'нанося 3 урона владельцу.\n'
                        takedamage(game, player, player, 3)
                        if 'bomb' in player['inventory']:
                            player['inventory'].remove('bomb')
            elif player['act'][0] == 'weakskele_surrender':
                game['text'] += '⚰️|' + player['name'] + ' устал сражаться и лег в гроб.\n'
                player['dead'] = True
            elif player['act'][0] == 'weakskele_lone_surrender':
                game['text'] += '⚰️|' + player['name'] + ' не хочет сражаться без вурдалаков и ложится в гроб.\n'
                player['dead'] = True

            elif player['act'][0] == 'hide_in_door':
                game['text'] += '🚪|' + player['name'] + ' выбегает из комнаты, прячась за дверью.\n'
                player['hide_in_door'] = True
                player['stun'] = 10

            if player['bicepc']:
                player['bicepccd'] = 4

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['weapon'].name == 'Булава' and (player['act'][0] == 'attack' or player['act'][0] == 'charge'):
                if player['act'][1] == player['lasttarget']:
                    player['bulavabonus'] += 1
                    try:
                        if player['weapon'].lvl == 3:
                            player['bulavabonus'] += 1
                    except:
                        pass
                else:
                    player['bulavabonus'] = 0
                    player['lasttarget'] = None
            else:
                player['bulavabonus'] = 0
                player['lasttarget'] = None

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'shield' or player['act'][0] == 'shieldgen':
                if player['act'][0] == 'shieldgen':
                    player['shieldgencd'] = 5
                    if 'shieldgen?1' in player['skills']:
                        player['shieldgencd'] = 7 + 1
                    if 'shieldgen?2' in player['skills']:
                        player['shieldgencd'] = 5 + 1
                    if 'shieldgen?3' in player['skills']:
                        player['shieldgencd'] = 3 + 1
                elif player['act'][0] == 'shield':
                    player['inventory'].remove('shield')
                target = game['players'][player['act'][1]]
                if target['id'] == player['id']:
                    if 'alex_shield' in player['customtexts'] and player['customtexts']['alex_shield']:
                        game['text'] += '🎇|' + player['name'] + ', продолжая наслаждаться кофем, махнул рукой и отправил атаку в пустоту.\n'
                        
                    elif 'probel_shield' in player['customtexts'] and player['customtexts']['probel_shield']:
                        game['text'] += '🏠|' + player['name'] + ' в домике.\n'
                        
                    elif 'tuman_shield' in player['customtexts'] and player['customtexts']['tuman_shield']:
                        game['text'] += '👁‍🗨|' + player['name'] + ' переписывает реальность, спасаясь в вечности времени. Урон отражен! \n'
                        
                    elif 'semw_shield' in player['customtexts'] and player['customtexts']['semw_shield']:
                        game['text'] += '⌛️|' + player['name'] + ' активирует способность "Временная петля", замедляющую время вокруг него. Враг, оказавшись внутри этой петли, становится замороженным во времени и не может совершать действия. \n'
                        
                    elif 'brun_shield' in player['customtexts'] and player['customtexts']['brun_shield']:
                        game['text'] += '🌿|' + player['name'] + ' прикрывается телом Es Tra Gon! Славон впитывает в себя весь дамаг (Бедный Славон)\n'

                    elif 'calimator_shield' in player['customtexts'] and player['customtexts']['calimator_shield']:
                        game['text'] += '🧬|Тело ' + player['name'] + ' меняется, становясь на время атаки врага сверхпрочным. Урон отражён.\n'

                    else:
                        game['text'] += '🔵|' + player['name'] + ' использует щит. Урон отражен!\n'
                else:
                    if 'alex_shield' in player['customtexts'] and player['customtexts']['alex_shield']:
                        game['text'] += '🎇|' + player['name'] + ', продолжая наслаждаться кофем, махнул рукой и махнул рукой и отправил предназначавшуюся атаку по ' + target['name'] + ' в пустоту.\n'
                        
                    elif 'probel_shield' in player['customtexts'] and player['customtexts']['probel_shield']:
                        game['text'] += '🏠|' + player['name'] + ' укрывает в домике '  + target['name'] + ', игрока не смогли найти и ушли\n'
                        
                    elif 'tuman_shield' in player['customtexts'] and player['customtexts']['tuman_shield']:
                        game['text'] += '👁‍🗨|' + player['name'] + ' переписывает реальность, ' + target['name'] + ' спасен вечностью времени. Урон отражен!\n'

                    elif 'brun_shield' in player['customtexts'] and player['customtexts']['brun_shield']:
                        game['text'] += '🌿|' + player['name'] + ' прикрывает ' + target['name'] + ' Es Tra Gon! Славон пострадал из-за чужой ошибки...\n'

                    elif 'calimator_shield' in player['customtexts'] and player['customtexts']['calimator_shield']:
                        game['text'] += '🧬|Тело ' + player['name'] + ' отделяет кусочек, который становиться на время атаки врага сверхпрочным и защищает ' + target['name'] + '. Урон отражён.\n'

                    else:
                        game['text'] += '🔵|' + player['name'] + ' использует щит на ' + target['name'] + '. Урон отражен!\n'
                target['shield'] = True

            if player['act'][0] == 'parry' and player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                player['shield'] = True
                game['text'] += '🔵|Сабля ' + player['name'] + ' блокирует все удары. Урон отражен!\n'

            if player['act'][0] == 'burrow':
                game['text'] += '🕳|' + player['name'] + ' зарывается в землю.\n'
                player['shield'] = True
                target = game['players'][player['act'][1]]
                player['burrowtarget'] = target['id']

            elif player['act'][0] == 'rhino_eliminate':
                player['rhino_eliminatecd'] = 4
                target = game['players'][player['act'][1]]
                game['text'] += '🦏|' + player['name'] + ' щелкает пальцами. Из глубин ада на поле боя выбирается разьяренный носорог и смотрит на '+target['name']+'.\n'
                if 'charge' in target['skills']:
                    rdtext = 'По красным глазам этого зверька видно, что вы знакомы. Теперь понятно, кто его сюда отправил!'
                else:
                    rdtext = 'Было приятно познакомиться, '+target['name']+'!'
                if not game['rhinotext1']:
                    if not game['completed_hell']:
                        game['text'] += '💬|' + player[
                            'name'] + ': '+rdtext+'\n'
                    else:
                        game['text'] += '💬|' + player[
                            'name'] + ': Вы уже знакомы с этим зверем, господа!\n'
                    game['rhinotext1'] = True

                player['summon_angry_rhino'] = True
                player['angry_rhino_target'] = target['id']

            elif player['act'][0] == 'demonshield':
                if player['darkdemon_strenght'] < 80:
                    game['text'] += '⚫️|' + player['name'] + ' поглощает весь входящий урон.\n'
                else:
                    game['text'] += '⚫️|' + player['name'] + ' поглощает весь входящий урон и готовится преобразовать его в луч смертоносной энергии.\n'
                player['demonshieldcd'] = 10-round(player['darkdemon_strenght']/20)
                if player['demonshieldcd'] < 2:
                    player['demonshieldcd'] = 2
                player['demonshield'] = True

            elif player['act'][0] == 'setmine':
                amount = int(player['act'][1])
                player['minetimer'] = int(amount) + 1
                player['minercd'] = 4
                player['energy'] -= 2
                game['text'] += '🧨|' + player['name'] + ' устанавливает мину.\n'

            elif player['act'][0] == 'necrostaffability':
                player['necrostaffabilitycd'] = 10
                zombietype = random.choice(['ghoul', 'rat', 'weakskele'])
                if player["id"] == novice_alex_id:
                    ws = [50, 50, 50, 100]
                    zombietype = random.choices(['ghoul', 'rat', 'weakskele', 'rhino'], ws, k=1)[0]
                if zombietype == 'ghoul':
                    zombiename = 'Вурдалак|👹'
                elif zombietype == 'rat':
                    zombiename = 'Зомби-крыса|🐭'
                elif zombietype == 'weakskele':
                    zombiename = 'Скелет|💀'
                elif zombietype == 'rhino':
                    zombiename = 'Носорог|🦏🔥'

                player['summon_necrofighter'] = zombietype
                player['shield'] = True
                # player['can_summon_zombie'] = False
                if zombietype != 'rhino':
                    game['text'] += '🔮|' + player[
                    'name'] + ' взмахивает посохом, окружая себя магическим барьером. Из-под земли на поле боя выбирается ' + zombiename + '!\n'
                else:
                    game['text'] += '🔮|' + player[
                    'name'] + ' взмахивает посохом, окружая себя магическим барьером. Из ада выбирается поверженный им ранее ' + zombiename + '!\n'

            elif player['act'][0] == 'wait_in_magic_barrier':
                # player['shield'] = True
                if not player['summoned_weak_skeletons']:
                    if random.randint(1, 100) <= 75:
                        game['text'] += '☕️|' + player['name'] + ' пьет чай.\n'
                    else:
                        game['text'] += '🍬|' + player['name'] + ' ест конфеты.\n'
                elif player['summoned_weak_skeletons'] and not player['summoned_weak_ghouls']:
                    if random.randint(1, 100) <= 75:
                        game['text'] += '☕️|' + player['name'] + ' пьет чай.\n'
                    else:
                        game['text'] += '🍬|' + player['name'] + ' ест конфеты.\n'

                elif player['summoned_weak_ghouls'] and not player['summoned_zombie_rats']:
                    if random.randint(1, 100) <= 75:
                        game['text'] += '☕️|' + player['name'] + ' напряженно пьет чай.\n'
                    else:
                        game['text'] += '🍬|' + player['name'] + ' напряженно ест конфеты.\n'

                elif player['summoned_zombie_rats']:
                    game['text'] += '👁|' + player['name'] + ' обеспокоенно следит за боем.\n'

            elif player['act'][0] == 'dark_die':
                player['dark_die_stage'] -= 1
                if player['dark_die_stage'] > 0:
                    game['text'] += '⚫️|' + player['name'] + ' извергает темный свет (' + str(
                        player['dark_die_stage']) + ')\n'
                else:
                    game['text'] += '⚫️|' + player['name'] + ' взрывается, погружая во тьму все помещение.\n'
                    for idss in game['players']:
                        target = game['players'][idss]
                        if not target['hide_in_door']:
                            target['dead'] = True

            elif player['act'][0] == 'flash':
                player['inventory'].remove('flash')
                target = game['players'][player['act'][1]]

                if ('protivogaz' not in target['skills'] and 'protivogaz?2' not in target[
                    'skills'] and 'protivogaz?3' not in target['skills'] and 'protivogaz_classic' not in target['skills']):
                    game['text'] += '😵|' + player['name'] + ' кидает световую гранату в ' + target[
                        'name'] + '. (-8 Энергии)\n'
                    target['energy'] -= 8
                else:
                    if target['is_rhino']:
                        game['text'] += '❌|' + player['name'] + ' кидает световую гранату в ' + target[
                            'name'] + ', но он игнорирует вспышку.\n'
                    elif target['is_dark_rat']:
                        game['text'] += '❌|' + player['name'] + ' кидает световую гранату в ' + target[
                            'name'] + '. У тени нет глаз.\n'
                    else:
                        game['text'] += '❌|' + player['name'] + ' кидает световую гранату в ' + target[
                            'name'] + ', но противогаз защищает его. (-1 Энергии)\n'
                        target['energy'] -= 1
            elif player['act'][0] == 'pickupweapon':
                weapon = player['droppedweapon']
                player['weapon'] = weapon
                player['droppedweapon'] = None
                player['shurikens'] = 4
                try:
                    if player['weapon'].lvl == 1:
                        player['shurikens'] = 2
                    if player['weapon'].lvl == 2:
                        player['shurikens'] = 4
                    if player['weapon'].lvl == 3:
                        player['shurikens'] = 6
                except:
                    pass
                game['text'] += '✋|' + player['name'] + ' подбирает потерянное оружие.\n'

            elif player['act'][0] == 'invoker_charge':
                player['invokercd'] -= 1
                player['energy'] -= 2
                game['text'] += '🖲|' + player['name'] + ' восстанавливает запасы маны.\n'

            elif player['act'][0] == 'ritual':
                target = game['players'][player['act'][1]]
                if target['zombie'] > 0:
                    player['ritual_ability'] = True
                else:
                    target['ritualists'].append([player['id'], 4])
                player['ritualistamount'] -= 1
                game['text'] += '👿|' + player['name'] + ' чертит странные символы на земле.\n'
            elif player['act'][0] == 'watershield':
                target = game['players'][player['act'][1]]
                target['watershield'] = 3
                player['watershieldcd'] = watershieldcd
                game['text'] += '💧|' + player['name'] + ' создаёт водяной щит вокруг ' + target['name'] + '.\n'
            elif player['act'][0] == 'invoker_water_shield':
                target = game['players'][player['act'][1]]
                target['watershield'] = 3
                player['invokercd'] = 4
                game['text'] += '💧|' + player['name'] + ' создаёт водяной щит вокруг ' + target[
                    'name'] + ' с помощью магии.\n'
            elif player['act'][0] == 'energydrain':
                player['energydraincd'] = 4
                target = game['players'][player['act'][1]]
                game['text'] += '⚡️|' + player['name'] + ' выпивает всю энергию из ' + target['name'] + '!\n'
                regen_energy(game, player, target['energy'])
                target['energy'] -= target['energy']
            elif player['act'][0] == 'demon_steal':
                player['demoncd'] = 11
                target = game['players'][player['act'][1]]
                damage, chaintext, sokrushtext, narsiltext, drobovik_hasnocharges, lastsnipertarget = generate_cube_hit_damage(game, player, target, cubes=3, accuracy=2)
                if damage > 0:
                    player['hp'] += 1
                    if player['hp'] > player['maxhp']:
                        player['hp'] = player['maxhp']
                    target['hp'] -= 1
                    game['text'] += '👹|Демон ' + player['name'] + ' создает канал энергии между собой и '+target["name"]+', высасывая жизненные силы цели!\n'
                    game['text'] += '♥️' * target['hp'] + '|' + target['name'] + ' теряет ' + str(
                        1) + ' жизнь(ей). Остается ' + str(target['hp']) + ' хп.\n'
                    game['text'] += '♥️' * player['hp'] + '|' + player['name'] + ' восстанавливает ' + str(
                        1) + ' жизнь(ей). Остается ' + str(player['hp']) + ' хп.\n'
                else:
                    game['text'] += '👹💨|Демон ' + player['name'] + ' пытается создать канал энергии между собой и '+target["name"]+', но не попадает.\n'
                player['energy'] -= 3
            elif player['act'][0] == 'charge':
                if player['is_rhino']:
                    player['chargecd'] = 6
                else:
                    player['chargecd'] = 4
                for ids in game['players']:
                    target = game['players'][ids]
                    if target['team'] != player['team']:
                        if target['id'] not in player['nearplayers']:
                            player['nearplayers'].append(target['id'])
                        if player['id'] not in target['nearplayers']:
                            target['nearplayers'].append(player['id'])

            elif player['act'][0] == 'blue_beam_prepare':
                target = game['players'][player['act'][1]]
                player['last_dark_acts'].append('blue_beam_prepare')
                game['text'] += '🔵|Синие глаза тьмы загорелись и нацелились на ' + target['name'] + '.\n'
                player['prepared_beam'] = ['blue_beam', player['act'][1]]

            elif player['act'][0] == 'red_beam_prepare':
                target = game['players'][player['act'][1]]
                player['last_dark_acts'].append('red_beam_prepare')
                game['text'] += '🔴|Красные глаза тьмы загорелись и нацелились на ' + target['name'] + '.\n'
                player['prepared_beam'] = ['red_beam', player['act'][1]]

            elif player['act'][0] == 'violet_beam_prepare':
                target = game['players'][player['act'][1]]
                player['last_dark_acts'].append('violet_beam_prepare')
                game['text'] += '🟣|Все глаза тьмы загорелись и нацелились на ' + target['name'] + '.\n'
                player['prepared_beam'] = ['violet_beam', player['act'][1]]

            elif player['act'][0] == 'lastchance':
                targets = 2
                enemys = []
                enemys_hitten = []
                alive = 0
                for idss in game['players']:
                    enemy = game['players'][idss]
                    if enemy['team'] != player['team'] and enemy['dead'] == False:
                        enemys.append(enemy)
                while True:
                    if len(enemys_hitten) < targets and len(enemys) > len(enemys_hitten):
                        target = random.choice(enemys)
                        while target in enemys_hitten:
                            target = random.choice(enemys)
                        enemys_hitten.append(target)
                    else:
                        break
                doptt = ''
                for idss in enemys_hitten:
                    target = idss
                    if target['zombie'] > 0:
                        target['zombie'] = 1
                    if target['necrozombie'] > 0:
                        target['necrozombie'] = 1
                        target['getlasthit'] = True
                    if target['is_necromant']:
                        doptt += '💬' + target[
                            'name'] + ': Впустую потраченная жизнь. На МЕНЯ такие способности не работают.\n'
                    else:
                        # doptt = ''
                        target['hp'] -= 1
                player['lasthit'] = 2

                targettext = ''
                for idss in enemys_hitten:
                    targettext += idss['name'] + ' и '
                targettext = targettext[:len(targettext) - 3]
                # targettext += '.'
                if len(enemys_hitten) > 1:
                    b = 'и'
                    e = 'ю'
                else:
                    b = 'ь'
                    e = 'е'
                game['text'] += '❤️‍🔥|' + player[
                    'name'] + ' достаёт клинок, собирает последние силы и делает невероятно мощную серию ударов по ' + targettext + ', ' + \
                                'получая серьезные травмы. Цел' + b + ' теря' + e + 'т 1♥️, а ' + player[
                                    'name'] + ' умрёт в следующем ходу.\n'
                game['text'] += doptt

            elif player['act'][0] == 'die':
                game['text'] += '❤️‍🔥|' + player['name'] + ' умирает.\n'

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'navod':
                player['navodcd'] = 4
                target = game['players'][player['act'][1]]
                target['energy'] = target['maxenergy']
                game['text'] += '🔧|' + player['name'] + ' перезаряжает оружие ' + target[
                    'name'] + '. Энергия восстановлена до максимальной! (' + str(target['energy']) + ')\n'
            elif player['act'][0] == 'demonreload':
                if random.randint(1, 100) <= player['darkdemon_strenght']:
                    enemys = []
                    for idss in game['players']:
                        target = game['players'][idss]
                        if target['team'] != player['team'] and not target['dead'] and target['team'] not in player['allies']:
                            enemys.append(target)
                    target = random.choice(enemys)
                    dark_counter = 3
                    target['dark_counter_set'] += dark_counter
                    game['text'] += '💜|' + player['name'] + ' восстанавливает запасы демонических сил до максимума, погружая '+\
                            'разум '+target['name']+' во тьму. '+target['name']+' чувствует страх ('+str(dark_counter)+').\n'
                else:
                    game['text'] += '🕑|' + player['name'] + ' восстанавливает запасы демонических сил до максимума.\n'
                actualenergy = set_energy(game, player, player['maxenergy'])

            elif player['act'][0] == 'reload':
                if 'robot' not in player['skills']:
                    actualenergy = set_energy(game, player, player['maxenergy'])
                    if actualenergy == player['maxenergy']:
                        reloadtext = ' до максимальной! (' + str(player['maxenergy']) + ')'
                        zilchtext = '(' + str(player['maxenergy']) + ')'
                        semw_zh_text = '(' + str(player['maxenergy']) + ')'
                        togzhan_text = '(' + str(player['maxenergy']) + ')'
                        alex_text = '(' + str(player['maxenergy']) + ')'
                        soonnatillo_text = '(' + str(player['maxenergy']) + ')'
                    else:
                        reloadtext = '! (' + str(player['energy']) + '/' + str(player['maxenergy']) + ')'
                        zilchtext = '(' + str(player['energy']) + '/' + str(player['maxenergy']) + ')'
                        semw_zh_text = '(' + str(player['energy']) + '/' + str(player['maxenergy']) + ')'
                        togzhan_text = '(' + str(player['energy']) + '/' + str(player['maxenergy']) + ')'
                        alex_text = '(' + str(player['energy']) + '/' + str(player['maxenergy']) + ')'
                        soonnatillo_text = '(' + str(player['energy']) + '/' + str(player['maxenergy']) + ')'
                    reloadtext2 = reloadtext
                    if 'zilch_reload' in player['customtexts'] and player['customtexts']['zilch_reload']:
                        game['text'] += '👾|' + player[
                            'name'] + ' ломает игру. Энергия восстановлена! ' + zilchtext + '\n'
                    elif 'semw_zh_reload' in player['customtexts'] and player['customtexts']['semw_zh_reload']:
                        game['text'] += '🚬|' + player[
                            'name'] + ' делает жёсткую тяжку. Энергия восстановлена! ' + semw_zh_text + '\n'
                    elif 'togzhan_reload' in player['customtexts'] and player['customtexts']['togzhan_reload']:
                        game['text'] += '🚬|' + player[
                            'name'] + ' отошла покурить. Энергия восстановлена! ' + togzhan_text + '\n'
                    elif 'alex_reload' in player['customtexts'] and player['customtexts']['alex_reload']:
                        game['text'] += '☕️|' + player['name'] + ' наслаждается кофем, игнорируя крики страдающих. Энергия восстановлена! ' + alex_text + '\n'
                    elif 'tuman_reload' in player['customtexts'] and player['customtexts']['tuman_reload']:
                        game['text'] += '♠️|' + player[
                            'name'] + ' восстанавливает мощь, погружаясь в бездну своих мыслей. Энергия восстановлена! ' + alex_text + '\n'
                    elif 'prorok_reload' in player['customtexts'] and player['customtexts']['prorok_reload']:
                        game['text'] += '😈|' + player['name'] + ' видя, как врага наполняет страх, злорадно ухмыляется.Энергия восстановлена! ' + alex_text +'\n'

                    elif 'soonnatillo_reload' in player['customtexts'] and player['customtexts']['soonnatillo_reload']:
                        game['text'] += '👨🏻‍🔬|' + ' Амфетамин был введён, мир начал вращаться быстрее, и каждое движение ощущается как вспышка! ' + soonnatillo_text +'\n'
                            
                    elif 'chokopie_reload' in player['customtexts'] and player['customtexts']['chokopie_reload']:
                        game['text'] += '💉|' +player['name'] + ' вколол дозу в вену. Энергия восстановлена! ' + alex_text + '\n'
                    else:
                        # if player['weapon'].name == 'Дробовик':
                        #    game['text'] += '🧰|' + player['name'] + ' заряжает 1 патрон в дробовик.\n'
                        # else:
                        if player['weapon'].ranged:
                            game['text'] += '🕓|' + player[
                                'name'] + ' перезаряжается. Энергия восстановлена' + reloadtext + '\n'
                        else:
                            if 'носорог' in player['name'].lower() and player['controller'] == 'bot':
                                game['text'] += '😤|' + player[
                                    'name'] + ' шумно раздувает ноздри, готовясь атаковать. Энергия полностью восстановлена.\n'
                            else:
                                game['text'] += '😤|' + player[
                                    'name'] + ' переводит дух. Энергия восстановлена' + reloadtext + '\n'
                    if player['infected']:
                        player['infected'] = False
                    player['maxenergy'] += player['electrolostenergy']
                    if player['weapon'].name == 'Дробовик':
                        if player['drobovik_charges'] < 2:
                            player['drobovik_charges'] += 1

                    player['electrolostenergy'] = 0
                    if player['can_regen_hp_by_reload'] > 0:
                        player['hp'] += player['can_regen_hp_by_reload']
                        if player['hp'] > player['maxhp']:
                            player['hp'] = player['maxhp']
                        game['text'] += '❗️|' + player['name'] + ' восстанавливает ' + '♥️' * player[
                            'can_regen_hp_by_reload'] + 'хп во время отдыха.\n'
                        player['can_regen_hp_by_reload'] = 0
                else:
                    game['text'] += '🤖|' + player['name'] + ' охлаждает себя.\n'
                    player['peregrev'] = 0

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'isaev':
                target = game['players'][player['act'][1]]
                if random.randint(1, 100) <= 8:
                    game['text'] += '🖕💔|' + player['name'] + ' посылает ' + target['name'] + ' нахуй. ' + target[
                        'name'] + ' теряет веру в себя!\n'
                    target['suicide'] = True
                else:
                    game['text'] += '🖕|' + player['name'] + ' посылает ' + target['name'] + ' нахуй.\n'
            if player['act'][0] == 'pricel':
                target = game['players'][player['act'][1]]
                game['text'] += '🎯|' + player['name'] + ' целится.\n'
                if player['maintarget'] == None or player['maintarget']['target'] != target['id']:
                    player['maintarget'] = {'target': target['id'], 'power': 1}
                else:
                    player['maintarget']['power'] += 1

            if player['act'][0] == 'lucifer_hellfire':
                game['text'] += '♨️|Люцифер произносит заклинание, после чего вокруг него образуется кольцо огня.\n'
                player['lucifer_hellfire'] = 3

            elif player['act'][0] == 'wing_attack':
                 if "дракон" not in player["name"].lower():
                     game["text"] += "🌪|" + player[
                         "name"] + " материализует крылья и создает волну воздуха, отталкивая от себя всех соперников!\n"
                 else:
                    game["text"] += "🌪|"+player["name"]+" крыльями создает волну воздуха, отталкивая от себя всех соперников!\n"
                 for idss in game["players"]:
                     target = game["players"][idss]
                     if target["team"] != player["team"]:
                         if player["id"] in target["nearplayers"]:
                             if target["is_knight"]:
                                 game["text"] += "🛡|Металлическая броня делает "+target["name"]+" слишком тяжелым для отталкивания.\n"
                             else:
                                 try:
                                     player["nearplayers"].remove(target["id"])
                                 except:
                                     pass
                                 target["nearplayers"].remove(player["id"])
                 player["wing_attackcd"] = 5
                 if "dragon_power" in player["skills"]:
                     player["wing_attackcd"] = 6
                     player["energy"] -= 2

            for idss in player['dopuseditems']:
                adrenaline_amount = 0
                target = game['players'][idss[1]]
                if idss[0] == 'adrenaline':
                    if 'adrenaline' in player['inventory']:
                        if game['pureduel_rats'] and adrenaline_amount > 0:
                            pass
                        else:
                            adrenaline_amount += 1
                            actualenergy = regen_energy(game, target, 3)
                            if 'semw_adrenaline' in player['customtexts'] and player['customtexts']['semw_adrenaline']:
                                if target['id'] != player['id']:
                                    game['text'] += '🍾|' + player['name'] + ' передает 1,5 литра Жигулевского игроку ' + target[
                                        'name'] + '! Его энергия увеличена на ' + str(actualenergy) + '.\n'
                                else:
                                    game['text'] += '🍾|' + player['name'] + ' выпивает 1.5ку Жигулевского! '+\
                                                    'Его энергия увеличена на ' + str(actualenergy) + '.\n'
                            else:
                                game['text'] += '💉|' + player['name'] + ' использует адреналин на ' + target[
                                    'name'] + '! Его энергия увеличена на ' + str(actualenergy) + '.\n'
                            player['inventory'].remove('adrenaline')

                elif idss[0] == 'dzet':
                    if 'dzet' in player['inventory']:
                        num = random.randint(1, 1000)
                        while num in target['dzets']:
                            num = random.randint(1, 1000)
                        target['dzets'].update({num: 3})

                        if 'semw_jet' in player['customtexts'] and player['customtexts']['semw_jet']:
                            game['text'] += '🧙‍♀️|' + player['name'] + ' произносит заклинание "Энергия Древних" над ' + target[
                                'name'] + '. Через два хода ' + player['name'] + ' будет полн магической силы и готов к подвигам!\n'
                        else:
                            game['text'] += '💉|' + player['name'] + ' использует джет на ' + target[
                            'name'] + '! Его энергия будет полностью восстановлена через 2 хода.\n'

                        player['inventory'].remove('dzet')

                elif idss[0] == 'hitin':
                    if 'hitin' in player['inventory']:
                        num = random.randint(1, 1000)
                        while num in target['hitins']:
                            num = random.randint(1, 1000)
                        target['hitins'].update({num: 3})
                        if 'semw_hitin' in player['customtexts'] and player['customtexts']['semw_hitin']:
                            game['text'] += '🌳|' + player['name'] + ' призывает хранителя леса, который наделяет ' + target['name'] + ' защитной аурой, укрывая его силой природы!\n'
                        else:
                            game['text'] += '💉|' + player['name'] + ' использует хитин на ' + target['name'] + '!\n'
                        player['inventory'].remove('hitin')
                elif idss[0] == 'madpotion':
                    if 'madpotion' in player['inventory']:
                        if 'brun_alchemist' in player['customtexts'] and player['customtexts']['brun_alchemist']:
                            game['text'] += '👻|' + player['name'] + ' призывает стенд ' + target[
                                'name'] + "'a который помогает совершить атаку. MUDA!\n"
                        else:
                            game['text'] += '💉|' + player['name'] + ' использует сыворотку бешенства на ' + target[
                                'name'] + '!\n'
                        player['inventory'].remove('madpotion')
                        target['madpotion'] = True
                        if 'alchemist?3' in player['skills']:
                            target['doublemadpotion'] = True

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            for idss in player['dopuseditems']:
                target = game['players'][idss[1]]
                if idss[0] == 'bomb':
                    if 'bomb' in player['inventory']:
                        dmg = 1 + (player['bombcharge'] * 2)
                        if 'pyrotech?1' in player['skills']:
                            dmg = 1 + (player['bombcharge'] * 1)
                        if 'pyrotech?2' in player['skills']:
                            dmg = 1 + (player['bombcharge'] * 2)
                        if 'pyrotech?3' in player['skills']:
                            dmg = 1 + (player['bombcharge'] * 3)
                        showdmg = dmg
                        if dmg > 0:
                            player['demon'] = True
                        if not target['washitin']:
                            armor, text = getarmor(game, target, dmg)
                        else:
                            armor = target['dopblock']
                            if dmg < armor:
                                armor = dmg
                            text = ''
                            if armor > 0:
                                if 'semw_armor' in player['customtexts'] and player['customtexts']['semw_armor']:
                                    text = '🪖|' + target['name'] + ' в своей броне выглядит непоколебимым, снимая всего ' + str(armor) + ' урона и продолжая побеждать врагов!\n'
                                else:
                                    text = '🛡| Броня ' + target['name'] + ' снимает ' + str(armor) + ' урона!\n'
                        dmg -= armor
                        target['dopblock'] -= armor
                        player['bombcharge'] = 0
                        if not target['shield']:
                            if dmg > 0:
                                player['outgoingdmgs'].append([target['id'], dmg])
                                target['incomingdmgs'].append([player['id'], dmg])
                        game['text'] += '☢|' + player['name'] + ' бросает самодельную бомбу в ' + target[
                            'name'] + '! Нанесено ' + str(showdmg) + ' урона.\n'
                        game['text'] += text
                        player['inventory'].remove('bomb')
                        player['energy'] -= 2

            if player['act'][0] == 'knife':
                player['inventory'].remove('knife')
                target = game['players'][player['act'][1]]
                if 'robot' in player['skills']:
                    chance = player['hp']
                damage = 0
                if game['classic_game']:
                    damage = 1
                if 'robot' not in player['skills'] and player['energy'] <= 0:
                    chance = 0
                chance = 40 + (player['energy'] * 10)
                if not game['classic_game']:
                    if 'sniper' in player['skills']:
                        chance += 20
                    if 'visor' in player['skills']:
                        chance += 10
                    if target['act'] != None and target['act'][0] == 'perekat':
                        chance -= 50
                        if 'ninja' in target['skills']:
                            chance -= 950
                    if 'ninja?3' in target['skills']:
                        chance -= 10
                    if 'vor' in player['skills'] or 'vor?2' in player['skills'] or 'vor?3' in player['skills']:
                        chance += 10
                narkomantext = False
                if not game['classic_game']:
                    if 'narkoman' in player['skills'] or 'narkoman?1' in player['skills'] or 'narkoman?2' in player[
                        'skills'] or 'narkoman?3' in player['skills']:
                        chance -= 10
                        if 'narkoman?1' in player['skills']:
                            chance -= 10
                        for idss in game['players']:
                            target2 = game['players'][idss]
                            for idsss in target2['dopuseditems']:
                                itemtarget = game['players'][idsss[1]]
                                if itemtarget['id'] == player['id']:
                                    chance += 20
                                    narkomantext = True
                            if target2['act'] != None and target2['act'][0] in ['stimulator'] and target2['act'][1] == \
                                    player['id']:
                                chance += 20
                                narkomantext = True
                    if narkomantext:
                        game['effecttext'] += '🙃|' + player['name'] + ' получает бонусную точность и урон!\n'
                if chance > 100:
                    chance = 100
                for i in range(1):
                    x = random.randint(1, 100)
                    if x <= chance:
                        damage += 1
                if damage > 0:
                    player['demon'] = True
                    damage = 0
                    if game['classic_game']:
                        damage = 1
                    if target['blood'] <= 0:
                        target['blood'] = 4
                        if 'dvuzhil' in target['skills']:
                            target['blood'] += 2
                        target['blood'] += get_target_dvuzhil(target)
                        if game['classic_game']:
                            game['text'] += '🔪|' + player['name'] + ' кидает метательный нож в ' + target[
                                'name'] + '! Нанесено 1 урона. ❣️|' + target['name'] + ' истекает кровью!\n'
                        else:
                            game['text'] += '🔪|' + player['name'] + ' кидает метательный нож в ' + target[
                                'name'] + '. ❣️|' + target['name'] + ' истекает кровью!\n'
                    else:
                        if target['blood'] > 1:
                            target['blood'] -= 1
                        if game['classic_game']:
                            game['text'] += '🔪|' + player['name'] + ' кидает метательный нож в ' + target[
                                'name'] + '! Нанесено 1 урона. ❣️|Кровотечение усиливается!\n'
                        else:
                            game['text'] += '🔪|' + player['name'] + ' кидает метательный нож в ' + target[
                                'name'] + '. ❣️|Кровотечение усиливается!\n'
                    takedamage(game, player, target, damage)
                    # if 'pyromancer' in player['skills']:
                    #    player['pyrodamage'] = True
                else:
                    game['text'] += '💨|' + player['name'] + ' кидает метательный нож в ' + target[
                        'name'] + ', но не попадает.\n'
                player['energy'] -= 1

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'sokrush':
                player['sokrushenie'] = True
                player['act'] = ['attack', player['act'][1]]

            if player['act'][0] == 'chain':
                player['chain'] = True
                player['act'] = ['attack', player['act'][1]]

            if player['act'][0] == 'strongshot':
                player['strongshot'] = True
                player['act'] = ['attack', player['act'][1]]

            if player['act'][0] == 'narsil':
                player['narsil'] = True
                player['act'] = ['attack', player['act'][1]]

            if player['act'][0] == 'firearrow':
                player['firearrow'] = True
                player['firearrowcd'] = firearrowcd
                player['act'] = ['attack', player['act'][1]]

            if player['act'][0] == 'charge':
                player['charge'] = True
                player['chargecd'] = 4
                player['act'] = ['attack', player['act'][1]]

            if player['act'][0] == 'truestrike':
                player['truestrike'] = True
                player['molotcd'] = 6
                if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                    player['molotcd'] = 0
                player['act'] = ['attack', player['act'][1]]

            if player['act'][0] == 'hitdown':
                player['hitdown'] = True
                player['shestcd'] = 6
                player['act'] = ['attack', player['act'][1]]

        for ids in game['players']:
            player = game['players'][ids]
            if 'miner' in player['skills']:
                player['minetimer'] -= 1
                if player['minetimer'] == 0:
                    enemylist = []
                    for idss in game['players']:
                        target = game['players'][idss]
                        if not target['dead'] and target['team'] != player['team']:
                            enemylist.append(target)
                    dmg = random.randint(2, 4)
                    if len(enemylist) == 0:
                        game['text'] += '🧨|Мина ' + player['name'] + ' взрывается, не нанося никому урона.\n'
                    else:
                        if len(enemylist) == 1:
                            enemy = enemylist[0]
                            target = enemy
                            showdmg, armortext = takedamage(game, player, target, dmg)
                            game['text'] += '🧨|Мина ' + player['name'] + ' взрывается, нанося ' + str(
                                dmg) + ' урона по ' + enemy['name'] + '!\n'
                            game['text'] += armortext
                        else:
                            enemyshit = []
                            while len(enemyshit) < 2:
                                x = random.choice(enemylist)
                                while x in enemyshit:
                                    x = random.choice(enemylist)
                                enemyshit.append(x)
                            armortexts = []
                            for idsss in enemyshit:
                                target = idsss
                                showdmg, armortext = takedamage(game, player, target, dmg)
                                armortexts.append(armortext)
                            game['text'] += '🧨|Мина ' + player['name'] + ' взрывается, нанося ' + str(
                                dmg) + ' урона следующим целям: ' + \
                                            enemyshit[0]['name'] + ', ' + enemyshit[1]['name'] + '!\n'
                            for idsss in armortexts:
                                game['text'] += idsss

            if player['lucifer_hellfire'] > 0:
                game['text'] += '♨️|Аура адского пламени Люцифера поджигает всех вокруг!\n'
                player['lucifer_hellfire'] -= 1
                for idss in game['players']:
                    target = game['players'][idss]
                    if not target['dead']:
                        setfire(game, player, target, 1+player['luciferpower'])

            if player['act'] == None:
                continue
            if player['act'][0] == 'molotov':
                player['inventory'].remove('molotov')
                player['energy'] -= 2
                targets = 2
                enemys = []
                enemys_hitten = []
                alive = 0
                for idss in game['players']:
                    enemy = game['players'][idss]
                    if enemy['team'] != player['team'] and enemy['dead'] == False and enemy['team'] not in player[
                        'allies']:
                        enemys.append(enemy)
                while True:
                    if len(enemys_hitten) < targets and len(enemys) > len(enemys_hitten):
                        target = random.choice(enemys)
                        while target in enemys_hitten:
                            target = random.choice(enemys)
                        enemys_hitten.append(target)
                    else:
                        break
                damage = random.randint(0, 0)
                for idss in enemys_hitten:
                    target = idss
                    setfire(game, player, target, strength=1, duration=3)
                targettext = ''
                for idss in enemys_hitten:
                    targettext += idss['name'] + ', '
                targettext = targettext[:len(targettext) - 2]
                targettext += '.'
                if 'semw_molotov' in player['customtexts'] and player['customtexts']['semw_molotov']:
                    game['text'] += '🎇|' + ' Фейерверк от ' +player['name'] + ' разрывает небо яркими вспышками и цветными огнями, наполняя все вокруг восторгом и радостью! ' + targettext + ' в огне!\n'
                else:
                    game['text'] += '🍸|' + player['name'] + ' кидает коктейль молотова! ' + targettext + ' в огне!\n'

            elif player['act'][0] == 'perekat':
                if 'semw_perekat' in player['customtexts'] and player['customtexts']['semw_perekat']:
                    game['text'] += '🧠|' + player['name'] + ' уклоняется силой мысли.\n'
                elif 'alex_perekat' in player['customtexts'] and player['customtexts']['alex_perekat']:
                    game['text'] += '🎆|' + player['name'] + ' телепортировался в бездну, исчезнув во мгле.\n'
                elif 'tuman_perekat' in player['customtexts'] and player['customtexts']['tuman_perekat']:
                    game['text'] += '🌑|' + player['name'] + ' скрылся под мраком ночи.\n'
                elif 'alan_perekat' in player['customtexts'] and player['customtexts']['alan_perekat']:
                    game['text'] += '🕘|' + player['name'] + ' пытается прокрутить коронку наручных часов, чтобы отмотать назад время вокруг себя.\n'
                elif 'xitruiListochek_perekat' in player['customtexts'] and player['customtexts']['xitruiListochek_perekat']:
                    game['text'] += '👞|' + ' Сделав один шаг в сторону, смог уклониться от атаки.\n'
                else:
                    game['text'] += '💨|' + player['name'] + ' перекатывается.\n'
                player['perekatcd'] = 5
                if 'ninja?2' in player['skills'] or 'ninja?3' in player['skills']:
                    player['perekatcd'] = 4
                # if 'ninja' in player['skills']:
                #    player['perekatcd'] -= 1

            elif player['act'][0] == 'walk':
                game['text'] += '👣|' + player['name'] + ' подходит к противнику вплотную.\n'
                for ids in game['players']:
                    target = game['players'][ids]
                    if target['team'] != player['team']:
                        if target["id"] not in player["nearplayers"]:
                            player['nearplayers'].append(target['id'])
                        if player["id"] not in target["nearplayers"]:
                            target['nearplayers'].append(player['id'])
                        
            elif player['act'][0] == 'stimulator':
                try:
                    player['inventory'].remove('stimulator')
                except:
                    pass
                target = game['players'][player['act'][1]]
                hpregen = 2
                if 'medic?1' in player['skills']:
                    hpregen = 1
                if 'medic?2' in player['skills']:
                    hpregen = 2
                if 'medic?3' in player['skills']:
                    hpregen = 3
                target['hp'] += hpregen
                if target['hp'] >= target['maxhp']:
                    target['hp'] = target['maxhp']
                if target["id"] != player["id"]:
                    if 'meningoencephalitis_stimulator' in player['customtexts'] and player['customtexts']['meningoencephalitis_stimulator']:
                        game['text'] += '🥃|' + player['name'] + ' поливает коньяком ' + target['name'] + '!\n'
                    else:
                        game['text'] += '💉|' + player['name'] + ' использует стимулятор на ' + target['name'] + '!\n'
                else:
                    if 'meningoencephalitis_stimulator' in player['customtexts'] and player['customtexts']['meningoencephalitis_stimulator']:
                        game['text'] += '🥃|' + player['name'] + ' принимает душ из коньяка!\n'
                    else:
                        game['text'] += '💉|' + player['name'] + ' использует стимулятор на ' + target['name'] + '!\n'

                game['effecttext'] += '♥' * target['hp'] + '💉|' + target['name'] + ' получает ' + str(
                    hpregen) + ' хп. Остаётся ' + str(target['hp']) + ' хп.\n'


                
            elif player['act'][0] == 'bint':
                try:
                    player['inventory'].remove('bint')
                except:
                    pass
                target = game['players'][player['act'][1]]
                target['hp'] += 1
                bloodtext = False
                if target['blood'] > 0:
                    target['blood'] = 0
                    bloodtext = True
                if target['hp'] >= target['maxhp']:
                    target['hp'] = target['maxhp']
                if not bloodtext:
                    game['text'] += '🩹|' + player['name'] + ' использует бинт на ' + target['name'] + '!\n'
                else:
                    game['text'] += '🩹|' + player['name'] + ' использует бинт на ' + target[
                        'name'] + ', снимая эффект кровотечения!\n'
                game['effecttext'] += '♥' * target['hp'] + '🩹|' + target['name'] + ' получает 1 хп. Остаётся ' + str(
                    target['hp']) + ' хп.\n'
            elif player['act'][0] == 'grenade':
                player['inventory'].remove('grenade')
                player['energy'] -= 2
                targets = 2
                enemys = []
                enemys_hitten = []
                alive = 0
                for idss in game['players']:
                    enemy = game['players'][idss]
                    if enemy['team'] != player['team'] and enemy['dead'] == False and enemy['team'] not in player[
                        'allies']:
                        enemys.append(enemy)
                while True:
                    if len(enemys_hitten) < targets and len(enemys) > len(enemys_hitten):
                        target = random.choice(enemys)
                        while target in enemys_hitten:
                            target = random.choice(enemys)
                        enemys_hitten.append(target)
                    else:
                        break
                damage = random.randint(2, 3)
                damage += player['grenadedmgbonus']
                player['demon'] = True
                armortexts = []
                for idss in enemys_hitten:
                    curdamage = damage
                    target = idss
                    armor, curtext = getarmor(game, target, curdamage)
                    curdamage -= armor
                    armortexts.append(curtext)
                    if not target['shield']:
                        if curdamage > 0:
                            target['incomingdmgs'].append([player['id'], curdamage])
                            player['outgoingdmgs'].append([target['id'], curdamage])
                targettext = ''
                for idss in enemys_hitten:
                    targettext += idss['name'] + ', '
                targettext = targettext[:len(targettext) - 2]
                targettext += '.'
                if 'brun_grenade' in player['customtexts'] and player['customtexts']['brun_grenade']:
                    game['text'] += '😼|' + player['name'] + ' призывает Killer Queen! Первая бомба! Нанесено ' + str(damage) + ' урона следующим целям: ' + targettext + '\n'
                elif 'semw_grenade' in player['customtexts'] and player['customtexts']['semw_grenade']:
                    game['text'] += '😱|' + player['name'] + ' издает пронзительный крик ужаса! ' + targettext + ' испытывают сильный страх, получая: ' + str(damage) + ' урона страхом. ' + '\n'
                else:
                    game['text'] += '💣|' + player['name'] + ' кидает гранату! Нанесено ' + str(
                        damage) + ' урона следующим целям: ' + targettext + '\n'
                if len(armortexts) > 0:
                    for idss in armortexts:
                        game['text'] += idss            

            elif player['act'][0] == 'blow_flamethrower':
                player['weapon'] = weaponlist.Fist()
                player['energy'] -= 2
                targets = 2
                enemys = []
                enemys_hitten = []
                alive = 0
                for idss in game['players']:
                    enemy = game['players'][idss]
                    if enemy['team'] != player['team'] and enemy['dead'] == False and enemy['team'] not in player[
                        'allies']:
                        enemys.append(enemy)
                while True:
                    if len(enemys_hitten) < targets and len(enemys) > len(enemys_hitten):
                        target = random.choice(enemys)
                        while target in enemys_hitten:
                            target = random.choice(enemys)
                        enemys_hitten.append(target)
                    else:
                        break
                damage = random.randint(2, 3)
                #damage += player['grenadedmgbonus']
                player['demon'] = True
                armortexts = []
                for idss in enemys_hitten:
                    curdamage = damage
                    target = idss
                    armor, curtext = getarmor(game, target, curdamage)
                    curdamage -= armor
                    armortexts.append(curtext)
                    setfire(game, player, target, strength=2, duration=3)
                    if not target['shield']:
                        if curdamage > 0:
                            target['incomingdmgs'].append([player['id'], curdamage])
                            player['outgoingdmgs'].append([target['id'], curdamage])
                targettext = ''
                for idss in enemys_hitten:
                    targettext += idss['name'] + ', '
                targettext = targettext[:len(targettext) - 2]
                targettext += '.'
                game['text'] += '💣🔥|' + player['name'] + ' кидает огнемет Нарсил во врагов! Оружие взрывается, наносит ' + str(
                    damage) + ' урона следующим целям и поджигает их: ' + targettext + '\n'
                if len(armortexts) > 0:
                    for idss in armortexts:
                        game['text'] += idss

            elif player['act'][0] == 'EXPLOSION':
                target = game['players'][player['act'][1]]
                game['text'] += '💮|' + player['name'] + ' достает посох и направляет на ' + target['name'] + '.\n'
                game['text'] += '💬' + player[
                    'name'] + ': О тьма, куда не проникает свет, о черное пламя, что не освещает тьму, услышь мой зов. '
                game['text'] += 'Сожги все и вся, докуда дотянется твоя карающая длань.\n'
                player['EXPLOSION'] = target['id']

            elif player['act'][0] == 'EXPLOSION2':
                target = game['players'][player['EXPLOSION']]
                game['text'] += '💬' + player['name'] + ': ВЗРЫВ!\n'
                explosiondmg = 10  # random.randint(10, 11)
                firedmg = 6
                player['energy'] = -10
                player['recoverydebuff'].append([10, 2])
                if player['stun'] <= 0:
                    player['stun'] = 2
                else:
                    player['stun'] += 1
                game['text'] += '💮|Огромная волна пламени поражает ' + target['name'] + ', нанося ' + str(
                    explosiondmg) + ' урона и поджигая цель. ' + player['name'] + ' падает на землю без сил.\n'
                setfire(game, player, target, strength=firedmg, duration=5)
                showdmg, text = takedamage(game, player, target, explosiondmg)
                game['text'] += text
                player['EXPLOSION'] = None
                player['EXPLOSIONcd'] = 10

            elif player['act'][0] == 'castle_explosion':
                target = game['players'][player['act'][1]]
                #game['text'] += '💬' + player['name'] + ': ВЗРЫВ!\n'
                explosiondmg = 100  # random.randint(10, 11)
                firedmg = 100
                player['energy'] = -10
                player['recoverydebuff'].append([10, 2])
                if player['stun'] <= 0:
                    player['stun'] = 1000
                else:
                    player['stun'] += 1000
                #game['text'] += '💮|' + player['name'] + ' достает посох и направляет на ' + target['name'] + '.\n'
                game['text'] += '💬' + player[
                    'name'] + ': О тьма, куда не проникает свет, о черное пламя, что не освещает тьму, услышь мой зов. '
                game['text'] += 'Сожги все и вся, докуда дотянется твоя карающая длань... ВЗРЫВ!\n'
                game['text'] += '💮|Огромная волна пламени поражает ' + target['name'] + ', нанося ' + str(
                    explosiondmg) + ' урона и поджигая цель. ' + player['name'] + ' падает на землю без сил.\n'
                setfire(game, player, target, strength=firedmg, duration=5)
                showdmg, text = takedamage(game, player, target, explosiondmg)
                game['text'] += text


            elif player['act'][0] == 'run':
                if game['dungeon']:
                    game['text'] += '😱|' + player[
                        'name'] + ' слишком напуган, чтобы продолжать бой. Он сбегает из подземелья.\n'
                else:
                    if 'dark_energy' in player['skills']:
                        game['text'] += '☠️|Тьма поглощает разум ' + player[
                            'name'] + '. Игрок мертв.\n'
                        player['dead_from_scare'] = True
                    else:
                        game['text'] += '😱|' + player[
                            'name'] + ' слишком напуган, чтобы продолжать бой. Он сбегает.\n'
                player['dead'] = True


            elif player['act'][0] == 'random_lighting':
                player['invokercd'] = 2
                dmg = random.randint(1, 9)
                targets = []
                for idss in game['players']:
                    if game['players'][idss]['hp'] > 0 and not game['players'][idss]['dead']:
                        targets.append(game['players'][idss])
                target = random.choice(targets)
                showdmg, armortext = takedamage(game, player, target, dmg)
                game['text'] += '⚡️|' + player['name'] + ' вызывает молнию, которая бьет по случайной цели - ' + target[
                    'name'] + '! Нанесено ' + str(dmg) + ' урона.\n'
                game['text'] += armortext

            elif player['act'][0] == 'target_lighting':
                player['invokercd'] = 3
                dmg = random.randint(1, 3)
                target = game['players'][player['act'][1]]
                showdmg, armortext = takedamage(game, player, target, dmg)
                game['text'] += '⚡️|' + player['name'] + ' вызывает молнию, которая бьет по ' + target[
                    'name'] + '! Нанесено ' + str(dmg) + ' урона.\n'
                game['text'] += armortext

            elif player['act'][0] == 'sunstrike':
                player['invokercd'] = 4
                target = game['players'][player['act'][1]]
                damage = random.randint(1, 2)
                showdmg, armortext = takedamage(game, player, target, damage)
                game['text'] += '☀️|' + player['name'] + ' призывает яркий луч света, который бьет по ' + target[
                    'name'] + '! Цель получает ' + str(damage) + \
                                ' урона и слабость (2) на 3 хода.\n'
                target['recoverydebuff'].append([2, 3])  # [0] - сила дебаффа, [1] - длительность
                game['text'] += armortext

            elif player['act'][0] == 'blood_to_all':
                player['invokercd'] = 2
                targets = []
                for idss in game['players']:
                    if not game['players'][idss]['dead']:
                        targets.append(game['players'][idss])
                for idss in targets:
                    target = idss
                    if target['blood'] <= 0:
                        target['blood'] = 4
                        if 'dvuzhil' in target['skills']:
                            target['blood'] += 2
                        target['blood'] += get_target_dvuzhil(target)
                    else:
                        if target['blood'] > 1:
                            target['blood'] -= 1
                game['text'] += '🩸|' + player[
                    'name'] + ' повышает давление воздуха, все персонажи на поле боя получают эффект кровотечения!\n'

            elif player['act'][0] == 'fire_all':
                player['invokercd'] = 4
                targets = []
                for idss in game['players']:
                    if not game['players'][idss]['dead']:
                        targets.append(game['players'][idss])
                for idss in targets:
                    target = idss
                    setfire(game, player, target, strength=3, duration=3)

                game['text'] += '🔥|' + player[
                    'name'] + ' создает огромное кольцо огня, которое поджигает все поле боя!\n'

            elif player['act'][0] == 'blood_to_enemy':
                player['invokercd'] = 2
                target = game['players'][player['act'][1]]
                if target['blood'] <= 0:
                    target['blood'] = 4
                    if 'dvuzhil' in target['skills']:
                        target['blood'] += 2
                    target['blood'] += get_target_dvuzhil(target)
                else:
                    if target['blood'] > 1:
                        target['blood'] -= 1
                game['text'] += '🩸|' + player['name'] + ' повышает давление воздуха вокруг ' + target[
                    'name'] + ', цель получает эффект кровотечения!\n'

            elif player['act'][0] == 'roots':
                player['invokercd'] = 3
                target = game['players'][player['act'][1]]
                target['roots'].append([player['id'], 2])
                target['roots'].append([player['id'], 3])
                game['text'] += '🎋|' + player['name'] + ' призывает корни, которые опутывают ' + target['name'] + '!\n'

            elif player['act'][0] == 'burrow2':
                player['burrowtarget'] = None
                player['burrowcd'] = 4
                player['burrowstrike'] = True
                target = game['players'][player['act'][1]]
                game['text'] += '🕳❗️|' + player['name'] + ' вырывается из земли рядом с '+target['name']+', атакуя цель!\n'
                #player['shield'] = True
                #player['burrowtarget'] = target['id']
                player['act'] = ['attack', target['id']]

            elif 'cant_do_' in player['act'][0]:
                what = player['act'][0].split('_')[2]
                game['text'] += '❓'+player['name']+' пытался сделать '+what+', но по какой-то причине он не может этого сделать.\n'

            elif player['act'][0] == 'inc_energy':
                player['invokercd'] = 4
                target = game['players'][player['act'][1]]
                target['maxenergy'] += 2
                set_energy(game, player, player['maxenergy'])
                game['text'] += '💫|' + player['name'] + ' читает заклинание, увеличивая максимальный запас энергии ' + \
                                target['name'] + \
                                ' на 2⚡️! Энергия полностью восстановлена.\n'

            elif player['act'][0] == 'falsespell':
                game['text'] += '❓|' + player[
                    'name'] + ' пытается повлиять на бой силой магии, читая непонятные заклинания, но у него ничего не получается.\n'

            elif player['act'][0] == 'blow':
                target = game['players'][player['act'][1]]
                target['blown'] = True
                targets = []
                dmg = 2
                player['demon'] = True
                for idss in game['players']:
                    if game['players'][idss]['team'] != player['team'] and not game['players'][idss]['dead']:
                        targets.append(game['players'][idss])
                for idss in targets:
                    idss['incomingdmgs'].append([player['id'], dmg])
                    player['outgoingdmgs'].append([idss['id'], dmg])
                game['text'] += '👿|' + player['name'] + ' взрывает труп! Нанесено 2 урона всем соперникам.\n'

            elif player['act'][0] == 'dark_energy':
                dmg = 0
                for idss in game['players']:
                    if game['players'][idss]['dark_counter'] > 0:
                        dmg += random.randint(2, 3)
                player['dark_energycd'] = 4
                target = game['players'][player['act'][1]]
                if target['act'] != None and target['act'][0] == 'perekat':
                    game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' указывает на ' + target[
                        'name'] + '. Поток темной энергии направляется к цели, ' + \
                                    'но та успевает увернуться.\n'
                # elif target['controller'] == 'bot':
                #    game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' указывает на ' + target[
                #        'name'] + '. Поток темной энергии направляется к цели, ' + \
                #                    'но та слишком глупа, чтобы что-то почувствовать.\n'
                else:
                    if not target['is_necromant'] and not target['is_radiodemon'] and not target["is_knight"]:
                        target['dark_counter_set'] += 3
                        if target['dark_counter_set'] > 4:
                            target['dark_counter_set'] = 4
                    else:
                        if target["is_knight"]:
                            if target["dark_counter"] <= 0:
                                target['dark_counter_set'] += 3
                        dmg = 0
                    armortext = ""
                    if dmg > 0:
                        showdmg, armortext = takedamage(game, player, target, dmg)
                    if target['id'] != player['id']:
                        if is_necromant_boss(target):
                            game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' указывает на ' + target[
                                'name'] + '. Поток темной энергии направляется к цели, ' + \
                                            'пытаясь погрузить её разум во тьму.\n'
                            game['text'] += '💬' + target[
                                'name'] + ': Я - величайший маг, повелевающий темной энергией. Думаешь, я не смогу отразить ЭТО!?\n'
                            game['text'] += '💀|' + target[
                                'name'] + ' взмахивает посохом, перенаправляя поток темной энергии в ' + player[
                                                'name'] + ' и усиливая его. ' + player[
                                                'name'] + \
                                            ' ч҉̛͉̜͈̃̀͢у̵̧̖̭͂͞в҉͇̣̰͂͜͝с̸̨͚͚͋̍͂͝т҈̢̘̄̎̈́͞в̵̱҇̔̏͜ӱ̶̝́͢͡ӗ̵̨̘́̕т҉̨͕͎̥҇͆̚ с̷̛̫̈͗͜т҉̧̫̓̋͠р҉̡̜͚̤̿̍̚͞а̶͉̗҇́̀̚͢х̶̨͙̞̀̍̌͠ (' + str(
                                50) + ').\n'
                            player['dark_counter'] = 50
                        elif target['is_radiodemon']:
                            game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' указывает на ' + target[
                                'name'] + '. Поток темной энергии направляется к цели, ' + \
                                            'пытаясь погрузить её разум во тьму, но цель поглощает её.\n'
                            game['text'] += '💬' + target[
                                    'name'] + ': Темная энергия... Восхитительный вкус!\n'
                        elif target["is_knight"]:
                            game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' указывает на ' + target[
                                'name'] + '. Поток темной энергии направляется к цели, ' + \
                                            'но ей плевать.\n'


                        else:
                            if dmg == 0:
                                game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' указывает на ' + target[
                                        'name'] + '. Поток темной энергии направляется к цели, ' + \
                                                    'погружая ее разум во тьму. ' + target['name'] + \
                                                    ' ч҉̛͉̜͈̃̀͢у̵̧̖̭͂͞в҉͇̣̰͂͜͝с̸̨͚͚͋̍͂͝т҈̢̘̄̎̈́͞в̵̱҇̔̏͜ӱ̶̝́͢͡ӗ̵̨̘́̕т҉̨͕͎̥҇͆̚ с̷̛̫̈͗͜т҉̧̫̓̋͠р҉̡̜͚̤̿̍̚͞а̶͉̗҇́̀̚͢х̶̨͙̞̀̍̌͠ (' + str(
                                        target['dark_counter_set'] + target['dark_counter']) + \
                                                    ').\n'

                            else:
                                game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' указывает на ' + target[
                                    'name'] + '. Поток темной энергии направляется к цели, ' + \
                                                'погружая ее разум во тьму и нанося ' + str(dmg) + ' урона. ' + target[
                                                    'name'] + \
                                                ' ч҉̛͉̜͈̃̀͢у̵̧̖̭͂͞в҉͇̣̰͂͜͝с̸̨͚͚͋̍͂͝т҈̢̘̄̎̈́͞в̵̱҇̔̏͜ӱ̶̝́͢͡ӗ̵̨̘́̕т҉̨͕͎̥҇͆̚ с̷̛̫̈͗͜т҉̧̫̓̋͠р҉̡̜͚̤̿̍̚͞а̶͉̗҇́̀̚͢х̶̨͙̞̀̍̌͠ (' + str(
                                    target['dark_counter_set'] + target['dark_counter']) + \
                                                ').\n'

                    else:
                        if dmg == 0:
                            game['text'] += '👁⚫️⚫️👁|' + player['name'] + ' позволяет тьме завладеть своим разумом.\n'
                        else:
                            game['text'] += '👁⚫️⚫️👁|' + player[
                                'name'] + ' позволяет тьме завладеть своим разумом, получая ' + str(dmg) + ' урона.\n'
                    game['text'] += armortext

            elif player['act'][0] == 'violet_beam':
                target = game['players'][player['act'][1]]
                if player['fireticks'] > 1:
                    player['fireticks'] = 1
                    player['firestrength'] = 0
                if target['act'] != None and target['act'][0] == 'perekat':
                    game[
                        'text'] += '🟣|Синие и красные глаза выпустили энергетические лучи и образовали фиолетовый луч, который направился к ' + \
                                   'голове ' + target['name'] + ', но цель уворачивается от выстрела.\n'
                else:
                    target['dark_counter'] += 4
                    game[
                        'text'] += '🟣|Синие и красные глаза выпустили энергетические лучи и образовали фиолетовый луч, который врезался в ' + \
                                   'голову ' + target['name'] + '. Цель чувствует страх (' + str(
                        target['dark_counter']) + ').\n'
                player['prepared_beam'] = None

            elif player['act'][0] == 'red_beam':
                target = game['players'][player['act'][1]]
                if player['fireticks'] > 1:
                    player['fireticks'] = 1
                    player['firestrength'] = 0
                dmg = 3
                dmg += player['darknessspelldmgbonus']
                firet = 6
                firet += player['darknessspelldmgbonus']
                if target['act'] != None and target['act'][0] == 'perekat':
                    game['text'] += '🔴|Красные глаза выпустили энергетические лучи, устремившиеся в тело ' + \
                                    target['name'] + ', но цель уворачивается от выстрела.\n'
                else:
                    game['text'] += '🔴|Красные глаза выпустили энергетические лучи, устремившиеся в тело ' + \
                                    target['name'] + '. Цель получает ' + str(dmg) + ' урона и загорается!\n'
                    showdmg, armortext = takedamage(game, player, target, dmg)
                    game['text'] += armortext
                    setfire(game, player, target, strength=firet)
                player['prepared_beam'] = None

            elif player['act'][0] == 'blue_beam':
                target = game['players'][player['act'][1]]
                if player['fireticks'] > 1:
                    player['fireticks'] = 1
                    player['firestrength'] = 0
                dmg = random.randint(1, 3)
                dmg += player['darknessspelldmgbonus']
                if target['act'] != None and target['act'][0] == 'perekat':
                    game['text'] += '🔵|Синие глаза выпустили энергетические лучи, устремившиеся к ногам ' + \
                                    target['name'] + ', но цель уворачивается от выстрела.\n'
                else:
                    game['text'] += '🔵|Синие глаза выпустили энергетические лучи, устремившиеся к ногам ' + \
                                    target['name'] + '. Цель получает ' + str(dmg) + ' урона и замерзает!\n'
                    game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
                    showdmg, armortext = takedamage(game, player, target, dmg)
                    game['text'] += armortext
                    if target['stun'] > 0:
                        target['stun'] += 1 + player['darknessspelldmgbonus']
                    else:
                        target['stun'] = 2 + player['darknessspelldmgbonus']
                player['prepared_beam'] = None

            elif player['act'][0] == 'demonattack':
                target = game['players'][player['act'][1]]
                #beams = ['red', 'blue', 'violet']
                beam = player['demonbeam']
                if beam == 'red':
                    if player['energy'] <= 0:
                        game['text'] += '💨|Красные глаза выпустили энергетические лучи, устремившиеся в тело ' + \
                                        target['name'] + ', но промахнулись.\n'
                    else:
                        dmg = 2+round(player['darkdemon_strenght']/10)
                        firestrenght = 1+round(player['darkdemon_strenght']/12)
                        if target['act'] != None and target['act'][0] == 'perekat':
                            game['text'] += '🔴|Красные глаза выпустили энергетические лучи, устремившиеся в тело ' + \
                                        target['name'] + ', но цель уворачивается от выстрела.\n'
                        else:
                            game['text'] += '🔴|Красные глаза выпустили энергетические лучи, устремившиеся в тело ' + \
                                    target['name'] + '. Цель получает ' + str(dmg) + ' урона и загорается!\n'
                            showdmg, armortext = takedamage(game, player, target, dmg)
                            game['text'] += armortext
                            setfire(game, player, target, strength=firestrenght)
                elif beam == 'blue':
                    if player['energy'] <= 0:
                        game['text'] += '💨|Синие глаза выпустили энергетические лучи, устремившиеся в тело ' + \
                                        target['name'] + ', но промахнулись.\n'
                    else:
                        dmg = 1+round(player['darkdemon_strenght']/12)
                        stunlen = 1+round(player['darkdemon_strenght']/18)
                        if target['act'] != None and target['act'][0] == 'perekat':
                            game['text'] += '🔵|Синие глаза выпустили энергетические лучи, устремившиеся к ногам ' + \
                                    target['name'] + ', но цель уворачивается от выстрела.\n'
                        else:
                            game['text'] += '🔵|Синие глаза выпустили энергетические лучи, устремившиеся к ногам ' + \
                                    target['name'] + '. Цель получает ' + str(dmg) + ' урона и замерзает!\n'
                            showdmg, armortext = takedamage(game, player, target, dmg)
                            game['text'] += armortext
                            if target['stun'] > 0:
                                target['stun'] += stunlen
                            else:
                                target['stun'] = 1 + stunlen
                            game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'

                elif beam == 'violet':
                    dmg = 1 + round(player['darkdemon_strenght'] / 20)
                    if target['act'] != None and target['act'][0] == 'perekat':
                        game['text'] += '🟣|Синие и красные глаза выпустили энергетические лучи и образовали фиолетовый луч, который направился к ' + \
                                   'голове ' + target['name'] + ', но цель уворачивается от выстрела.\n'
                    else:
                        game['text'] += '🟣|Синие и красные глаза выпустили энергетические лучи и образовали фиолетовый луч, который врезался в ' + \
                                   'голову ' + target['name'] + '. Сознание цели помутнилось. Нанесено '+str(dmg)+' урона.\n'
                        showdmg, armortext = takedamage(game, player, target, dmg)
                        game['text'] += armortext

                player['energy'] -= 3


            elif player['act'][0] == 'big_dark_wave':
                target = game['players'][player['act'][1]]
                dmg = 8
                hp = 2
                player['last_dark_acts'] = []
                if target['act'] != None and target['act'][0] == 'perekat':
                    game[
                        'text'] += '⚫️|Все глаза существа, кроме самого большого, закрылись. Глаз становится полностью черным, и сразу ' + \
                                   'после этого выпускает широкую волну темной энергии в ' + target['name'] + ', ' + \
                                   'но цель успела увернуться.\n'
                else:
                    game[
                        'text'] += '⚫️|Все глаза существа, кроме самого большого, закрылись. Глаз становится полностью черным, и сразу ' + \
                                   'после этого выпускает широкую волну темной энергии в ' + target['name'] + '. ' + \
                                   'Цель чувствует, как нечто распространяется по его телу, высасывая ' + \
                                   'жизненные силы. ' + target['name'] + ' получает ' + str(
                        dmg) + ' урона, теряет ' + str(hp) + '♥️ и лишается 1⚡️ максимальной энергии.\n'
                    showdmg, armortext = takedamage(game, player, target, dmg)
                    game['text'] += armortext
                    target['maxenergy'] -= 1
                    target['hp'] -= hp

            elif player['act'][0] == 'skeletonfire':
                target = game['players'][player['act'][1]]
                if target['stun'] <= 0:
                    target['stun'] = 2
                else:
                    target['stun'] += 1
                dmg = 5
                showdmg = dmg
                if dmg > 0:
                    player['demon'] = True
                if not target['washitin']:
                    armor, text = getarmor(game, target, dmg)
                else:
                    armor = target['dopblock']
                    if dmg < armor:
                        armor = dmg
                    text = ''
                    if armor > 0:
                        if 'semw_armor' in player['customtexts'] and player['customtexts']['semw_armor']:
                            text = '🪖|' + target['name'] + ' в своей броне выглядит непоколебимым, снимая всего ' + str(armor) + ' урона и продолжая побеждать врагов!\n'
                        else:
                            text = '🛡| Броня ' + target['name'] + ' снимает ' + str(armor) + ' урона!\n'
                dmg -= armor
                target['dopblock'] -= armor
                if not target['shield']:
                    if dmg > 0:
                        player['outgoingdmgs'].append([target['id'], dmg])
                        target['incomingdmgs'].append([player['id'], dmg])
                game['text'] += '💀🔥|' + player['name'] + ' запускает проклятый череп в ' + target[
                    'name'] + '! Нанесено ' + str(showdmg) + ' урона.\n'
                game['text'] += text
                game['effecttext'] += '🌀|' + target['name'] + ' оглушен!\n'
                player['skeletonfirecd'] = 6

            elif player['act'][0] == 'demon_transform':
                target = game['players'][player['act'][1]]
                game['text'] += '❗️|'+player['name']+' увеличивается в размерах, на голове у него вырастают рога, а улыбка превращается в оскал...\n'
                player['demon_transform_turn'] = True

            elif player['act'][0] == 'demon_transform2':
                game['text'] += '⚜️|'+player['name']+' выпускает из своего тела щупальца, которые с огромной скоростью устремляются ко всем, кто '+\
                'посмел бросить вызов радиодемону.\n'
                if not game['completed_hell']:
                    for idss in game['players']:
                        target = game['players'][idss]
                        if target['team'] != player['team'] and not target['dead']:
                            necroability = False
                            if target['act'] != None and target['act'][0] == 'necrostaffability':
                                necroability = True
                            if target['controllable_necrofighter'] != None:
                                necroability = True
                            if not necroability:
                                if target['act'] != None and target['act'][0] in ['shield', 'shieldgen']:
                                    game['text'] += '⚜️|Щупальца пронзают щит ' + target[
                                        'name'] + ' вместе с ним самим, после чего возвращаются обратно к Аластору, отправляя цель тому прямо в пасть.\n'
                                else:
                                    game['text'] += '⚜️|Щупальца пронзают ' + target[
                                        'name'] + ' после чего возвращаются обратно к Аластору, отправляя цель тому прямо в пасть.\n'
                                target['dead'] = True
                                target['eliminated'] = True
                            else:
                                game['text'] += '⚜️|Щупальца пытаются пронзить ' + target[
                                    'name'] + ', но щиту из некротической энергии удается сдержать удар.\n'
                else:
                    for idss in game['players']:
                        target = game['players'][idss]
                        dmg = random.randint(1, 4)
                        dmg += player['radiodemonpower']
                        if target['team'] != player['team'] and not target['dead']:
                            necroability = False
                            if target['act'] != None and target['act'][0] == 'necrostaffability':
                                necroability = True
                            if target['controllable_necrofighter'] != None:
                                necroability = True
                            if not necroability:
                                if target['act'] != None and target['act'][0] == 'perekat':
                                    game['text'] += '⚜️|Щупальца пытаются пронзить ' + target[
                                        'name'] + ', но тот успевает увернуться.\n'
                                else:
                                    if target['act'] != None and target['act'][0] in ['shield', 'shieldgen']:
                                        game['text'] += '⚜️|Щупальца пронзают щит ' + target[
                                            'name'] + ' вместе с ним самим, нанося '+str(dmg)+' урона!\n'
                                    else:
                                        game['text'] += '⚜️|Щупальца пронзают ' + target[
                                            'name'] + ', нанося '+str(dmg)+' урона!\n'
                                    takedamage(game, player, target, dmg, ignoreshield = True)

                            else:
                                game['text'] += '⚜️|Щупальца пытаются пронзить ' + target[
                                    'name'] + ', но щиту из некротической энергии удается сдержать удар.\n'

                game['text'] += '💨|'+player['name'] + ' возвращается в свою обычную форму.\n'
                player['demon_transformcd'] = 10
                player['tentaclescd'] = 3
                player['rhino_eliminatecd'] = 3

            elif player['act'][0] == 'hellfire':
                dmg = player['hellfirecharges'] * 2
                player['demon'] = True
                game['text'] += '🔥🔥|' + player['name'] + ' вызывает волну адского пламени. Нанесено ' + str(
                    dmg) + ' урона всем персонажам на поле боя!\n'
                player['hellfirecharges'] = 0
                for idss in game['players']:
                    target = game['players'][idss]
                    if not target['dead']:
                        showdmg, text = takedamage(game, player, target, dmg)
                        game['text'] += text

            elif player['act'][0] == 'dragon_fireball':
                target = game['players'][player['act'][1]]        
                damage, chaintext, sokrushtext, narsiltext, drobovik_hasnocharges, lastsnipertarget = generate_cube_hit_damage(game, player, target, cubes=5, accuracy=1)
                if damage > 0:
                    dmg = damage #random.randint(1, 6)
                    firestrength = random.randint(1, 4)
                    fireticks = random.randint(2, 4)
                    if "дракон" in player["name"].lower():
                        game['text'] += '☄️|' + player['name'] + ' открывает пасть и создает огромный огненный шар, который летит в ' +target["name"]+"! Нанесено "+str(dmg)+" урона.\n"
                    else:
                        game['text'] += '☄️|' + player[
                            'name'] + ' силой мысли создает огромный огненный шар, который летит в ' + target[
                                            "name"] + "! Нанесено " + str(dmg) + " урона.\n"

                    showdmg, text = takedamage(game, player, target, dmg)
                    firetext = setfire(game, player, target, strength=firestrength, duration=fireticks)
                    game['text'] += text
                    game['text'] += firetext+"\n"
                else:
                    if "дракон" in player["name"].lower():
                        game['text'] += '💨|' + player['name'] + ' открывает пасть и создает огромный огненный шар, направляя его в ' +target["name"]+", но не попадает.\n"
                    else:
                        game['text'] += '💨|' + player[
                            'name'] + ' силой мысли создает огромный огненный шар, направляя его в ' + target[
                                            "name"] + ", но не попадает.\n"

                player["energy"] -= 2
                if "dragon_power" in player["skills"]:
                    player["energy"] -= 1

            elif player['act'][0] == 'lastcharge':
                target = game['players'][player['act'][1]]
                if not game['completed_hell']:
                    if ((target['act'] != None and target['act'][0] == 'charge') or target['charge']) and target['act'][1] == player['id']:
                        game['text'] += '💢|' + player['name'] + ' делает рывок к ' + target[
                            'name'] + '. Цель делает точно такой же яростный рывок по направлению к носорогу, и тот, испугавшись, промахивается.\n'
                        if not game['rhino_say']:
                            game['text'] += '💬Аластор|❤️‍🔥: Не каждому хватит духа так безбашенно напасть на носорога! Я восхищен!\n'
                            game['rhino_say'] = True
                    else:
                        if target['shield']:
                            game['text'] += '💢|' + player['name'] + ' делает рывок к '+target['name']+', пробивая щит цели и падая вместе с ним в глубины преисподней, '+\
                                'услужливо открытые улыбающимся Аластором.\n'
                        else:
                            game['text'] += '💢|' + player['name'] + ' делает рывок к ' + target[
                                'name'] + ', пронзая того рогом и падая вместе с ним в глубины преисподней, ' + \
                                            'услужливо открытые улыбающимся Аластором.\n'
                        target['eliminated'] = True
                        target['dead'] = True
                else:
                    if ((target['act'] != None and target['act'][0] == 'charge') or target['charge']) and target['act'][1] == player['id']:
                        game['text'] += '💢|' + player['name'] + ' делает рывок к ' + target[
                            'name'] + '. Цель делает точно такой же яростный рывок по направлению к носорогу, и тот, испугавшись, промахивается.\n'
                        if not game['rhino_say']:
                            game['text'] += '💬Аластор|❤️‍🔥: Не каждому хватит духа так безбашенно напасть на носорога! Я восхищен!\n'
                            game['rhino_say'] = True
                    else:
                        dmg = 15
                        if target['act'] != None:
                            if target['act'][0] == 'perekat':
                                if random.randint(1, 100) <= 40: #40% шанс попасть
                                    game['text'] += '💢|' + player['name'] + ' делает рывок к ' + target[
                                        'name'] + ', ударяя ту рогом!' + \
                                                    ' Нанесено ' + str(dmg) + ' урона.\n'
                                    takedamage(game, player, target, dmg)
                                else:
                                    game['text'] += '💨|' + player['name'] + ' делает рывок к ' + target[
                                        'name'] + ', пытаясь ударить ту рогом, но не попадает.\n'
                            elif target['act'][0] == 'flash' and target['act'][1] == player['id']:
                                game['text'] += '💨|' + player['name'] + ' делает рывок к ' + target[
                                    'name'] + ', пытаясь ударить ту рогом, но не попадает.\n'
                            else:
                                game['text'] += '💢|' + player['name'] + ' делает рывок к ' + target[
                                    'name'] + ', ударяя ту рогом!' + \
                                                ' Нанесено ' + str(dmg) + ' урона.\n'
                                takedamage(game, player, target, dmg)



            elif player['act'][0] == 'summon_treant':
                player['invokercd'] = 7
                player['summon_treant'] = 1
                game['text'] += '🌳|' + player['name'] + ' призывает трента!\n'

            elif player['act'][0] == 'summon_mad_skeletons':
                player['summoned_mad_skeletons'] = True
                player['summon_mad_skeletons'] = game['dead_skeletons']
                if player['summon_mad_skeletons'] > 0:
                    game['text'] += '🔮|' + player[
                        'name'] + ' поднимает посох над собой. В глазницах черепа образуются ' + \
                                    'черные искры, которые спустя секунду улетают в проход, из которого вы зашли в этот зал.\n'
                    if player['summon_mad_skeletons'] > 1:
                        if player['summon_mad_skeletons'] < 5:
                            game['effecttext'] += '👿|Из прохода в комнату протискиваются ' + str(
                                player['summon_mad_skeletons']) + ' огромных злобных скелета, ' + \
                                                  'преграждая путь к отступлению. Каждый из них выламывает по одной несущей колонне зала и берет её в руки.\n'
                        if player['summon_mad_skeletons'] >= 5:
                            game['effecttext'] += '👿|Из прохода в комнату протискиваются ' + str(
                                player['summon_mad_skeletons']) + ' огромных злобных скелетов, ' + \
                                                  'преграждая путь к отступлению. Каждый из них выламывает по одной несущей колонне зала и берет её в руки.\n'
                    else:
                        game['effecttext'] += '👿|Из прохода в комнату протискивается огромный злобный скелет, ' + \
                                              'преграждая путь к отступлению. Он выламывает одну из несущих колонн зала и берет её в руки.\n'
                    game['effecttext'] += '🔵|Вокруг ' + player['name'] + ' образуется полупрозрачный защитный барьер.\n'
                else:
                    game['text'] += '🔮|' + player[
                        'name'] + ' поднимает посох над собой. В глазницах черепа образуются ' + \
                                    'черные искры, которые спустя секунду улетают в проход, из которого вы зашли в этот зал.\n'

                    game['effecttext'] += '❓|Черные искры, вылетевшие из черепа, вернулись к нему в глазницы, но... ' + \
                                          'Ничего не произошло. Горящие глаза некроманта теперь выражают удивление и легкое беспокойство.\n'

            elif player['act'][0] == 'summon_weak_skeletons':
                player['shield'] = True
                player['magic_strong_shield'] = True
                playeramount = 0
                for idss in game['players']:
                    if game['players'][idss]['controller'] != 'bot':
                        playeramount += 1
                summoned_skeles = playeramount * 2
                player['summon_weak_skeletons'] = summoned_skeles
                player['summoned_weak_skeletons'] = True
                if summoned_skeles >= 2 and summoned_skeles <= 4:
                    game['text'] += '🔮|' + player[
                        'name'] + ' взмахивает посохом, окружая себя магическим барьером. Крышки гробов в зале откинулись, и оттуда вылезло ' + \
                                    str(summoned_skeles) + ' скелета.\n'
                elif summoned_skeles >= 5:
                    game['text'] += '🔮|' + player[
                        'name'] + ' взмахивает посохом, окружая себя магическим барьером. Крышки гробов в зале откинулись, и оттуда вылезло ' + \
                                    str(summoned_skeles) + ' скелетов.\n'

            elif player['act'][0] == 'summon_weak_ghouls':
                player['shield'] = True
                player['magic_strong_shield'] = True
                playeramount = 0
                for idss in game['players']:
                    if game['players'][idss]['controller'] != 'bot':
                        playeramount += 1
                summoned_ghouls = playeramount * 1
                player['summon_weak_ghouls'] = summoned_ghouls
                player['summoned_weak_ghouls'] = True
                if summoned_ghouls == 1:
                    game['text'] += '🔮|' + player[
                        'name'] + ' взмахивает посохом, окружая себя магическим барьером. С потолка на поле боя спрыгивает вурдалак.\n'
                elif summoned_ghouls >= 2 and summoned_ghouls <= 4:
                    game['text'] += '🔮|' + player[
                        'name'] + ' взмахивает посохом, окружая себя магическим барьером. С потолка на поле боя спрыгивают ' + \
                                    str(summoned_ghouls) + ' вурдалака.\n'
                elif summoned_ghouls >= 5:
                    game['text'] += '🔮|' + player[
                        'name'] + ' взмахивает посохом, окружая себя магическим барьером. С потолка на поле боя спрыгивают ' + \
                                    str(summoned_ghouls) + ' вурдалаков.\n'

            elif player['act'][0] == 'summon_zombie_rats':
                player['shield'] = True
                player['magic_strong_shield'] = True
                playeramount = 0
                for idss in game['players']:
                    if game['players'][idss]['controller'] != 'bot':
                        playeramount += 1
                summoned_zombierats = playeramount * 1
                player['summon_zombie_rats'] = summoned_zombierats
                player['summoned_zombie_rats'] = True
                if summoned_zombierats == 1:
                    game['text'] += '🔮|' + player[
                        'name'] + ' взмахивает посохом, окружая себя магическим барьером. Из-под земли вылезает зомби-крыса!\n'
                elif summoned_zombierats >= 2:
                    game['text'] += '🔮|' + player[
                        'name'] + ' взмахивает посохом, окружая себя магическим барьером. Из-под земли вылезают ' + \
                                    str(summoned_zombierats) + ' зомби-крысы!\n'
                elif summoned_zombierats >= 5:
                    game['text'] += '🔮|' + player[
                        'name'] + ' взмахивает посохом, окружая себя магическим барьером. Из-под земли вылезают ' + \
                                    str(summoned_zombierats) + ' зомби-крыс!\n'

            elif player['act'][0] == 'wait_for_death':
                game['text'] += '📜|Некромант тщетно пытается призвать себе на помощь мертвецов.\n'

            elif player['act'][0] == 'big_virus_mutant':
                player['invokercd'] = 5
                player['summon_virus'] = 1
                game['text'] += '🦠|' + player[
                    'name'] + ' создает огромного вирусного мутанта из магических элементов! И судя по всему, он не подчиняется хозяину...\n'

            elif player['act'][0] == 'standup':
                player['fell'] = False
                game['text'] += '⬆️|' + player['name'] + ' поднимается с земли.\n'

            elif player['act'][0] == 'machinegun_charge':
                player['machinegun_charges'] += 1
                if 'zilch_machinegun' in player['customtexts'] and player['customtexts']['zilch_machinegun']:
                    game['text'] += '🆘|' + player['name'] + ' заряжает пулемет Нарсил!\n'
                else:
                    game['text'] += '🆘|' + player['name'] + ' заряжает пулемет!\n'

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'execution':
                player['execution'] = True
                player['act'] = ['attack', player['act'][1]]

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None and player['stun'] <= 0 and not player['dead'] and player['meditation'] == None:
                if player['lasthit'] > 0:
                    game['text'] += '❤️‍🔥|' + player['name'] + ' умирает.\n'
                if player['darkness_sleep']:
                    player['darkness_uvorot'] += 1
                    if player['darkness_uvorot'] == 4:
                        player['dead'] = True
                        game['text'] += '☠️|' + player['name'] + ' теряет сознание.\n'
                else:
                    game['text'] += '⬇️|' + player['name'] + ' пропускает ход (АФК)!\n'
                try:
                    medit('Время вышло!', player['msg'].chat.id, player['msg'].message_id)
                except:
                    pass
                player['afkcount'] += 1
                if player['afkcount'] >= 2 and not player['dead']:
                    player['suicide'] = True
            if player['act'] == None:
                continue
            if player['act'][0] == 'attack':
                target = game['players'][player['act'][1]]
                sokrush = False
                narsil = False
                chain = False
                execution = False
                if player['weapon'].name == 'Кувалда' and player['sokrushenie']:
                    sokrush = True
                elif player['weapon'].name == 'Цепь' and player['chain']:
                    chain = True
                elif player['weapon'].name == 'Копье Нарсил' and player['narsil']:
                    narsil = True
                elif player['execution'] and player['weapon'].name == 'Катана':
                    execution = True
                attackact(game, player, target, sokrush, chain, narsil, execution)

                if player['weapon'].name == 'Пулемет':
                    player['energy'] += player['weapon'].energycost
                    for machinegun_counter in range(9):
                        attackact(game, player, target, sokrush, chain, narsil, execution)
                        if machinegun_counter != 8:
                            player['energy'] += player['weapon'].energycost
                    player['machinegun_charges'] = 0

                elif player['weapon'].name == 'Сюрикены':
                    player['droppedweapon'] = player['weapon']
                    shlost = 1
                    if player['weapon'].lvl == 4 and player['weapon'].modification == 2:
                        shlost = 0
                    player['shurikens'] -= shlost
                    if player['shurikenstothrow'] == 2 and player['shurikens'] >= 1:
                        attackact(game, player, target, sokrush, chain, narsil, execution)
                        player['shurikens'] -= shlost
                        player['energy'] += 1
                    if player['shurikens'] <= 0:
                        player['weapon'] = weaponlist.Fist()
                if player['energy'] < 0:
                    player['energy'] = 0

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'counterattack':
                game['text'] += '⚔️|' + player['name'] + ' готовится контратаковать.\n'
                for ids in player['who_attacked']:
                    target = game['players'][ids]
                    attackact(game, player, target, counterattack=True)
                    if game['classic_game']:
                        player['energy'] -= 2
                if not game['classic_game']:
                    player['energy'] -= 1
                    player['spearcd'] = 3
                else:
                    player['spearcd'] = 4
            if player['weapon'].name == 'Копье' and player['weapon'].lvl == 4 and player['weapon'].modification == 1 and player['passivecounterattackcd'] <= 0:
                if len(player['who_attacked']) > 0:
                    target = random.choice(player['who_attacked'])
                    attackact(game, player, target, counterattack=True)
                    player['energy'] -= 1
                    player['passivecounterattackcd'] = 10

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'attack':
                target = game['players'][player['act'][1]]
                if player['weapon'].name == 'Кувалда' and player['sokrushenie']:
                    attackact(game, player, target)

                if player['weapon'].name == 'Цепь' and player['chain']:
                    attackact(game, player, target)

        for ids in game['players']:
            player = game['players'][ids]
            if player['madpotion']:
                player['sokrushenie'] = False
                player['chain'] = False
                player['narsil'] = False
                player['execution'] = False
                player['firearrow'] = False
                player['truestrike'] = False
                player['strongshot'] = False
                targets = []
                for idss in game['players']:
                    enemy = game['players'][idss]
                    if enemy['team'] != player['team'] and not enemy['dead']:
                        if not player['weapon'].ranged:
                            if enemy['id'] in player['nearplayers']:
                                targets.append(enemy['id'])
                        else:
                            targets.append(enemy['id'])
                rng = 1
                if player['doublemadpotion']:
                    rng = 2
                for i in range(rng):
                    if len(targets) == 0:
                        target = player
                    else:
                        target = game['players'][random.choice(targets)]
                    attackact(game, player, target)
                    if player['weapon'].name == 'Сюрикены':
                        player['droppedweapon'] = player['weapon']
                        player['shurikens'] -= 1
                        if player['shurikens'] <= 0:
                            player['weapon'] = weaponlist.Fist()
                    if player['energy'] < 0:
                        player['energy'] = 0

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'incvizitor':
                target = game['players'][player['act'][1]]
                player['incvizitorcd'] = 3
                if 'incvizitor?1' in player['skills']:
                    player['incvizitorcd'] = 6
                if 'incvizitor?2' in player['skills']:
                    player['incvizitorcd'] = 5
                if 'incvizitor?3' in player['skills']:
                    player['incvizitorcd'] = 4
                incv = False
                for idss in target['dopuseditems']:
                    if idss[0] == 'bomb':
                        incv = True
                if target['team'] != player['team']:
                    if (target['act'] != None and target['act'][0] in ['attack', 'knife', 'molotov', 'grenade', 'blow',
                                                                       'lighting', 'charge', 'dark_energy'] or target[
                            'madpotion']) or incv:
                        target['curses'].append(['stun', 3])
                        if 'tuman_incvizitor' in player['customtexts'] and player['customtexts']['tuman_incvizitor']:
                                    game['text'] += '🕋|' +player['name']+ ' помутняет разум ' + target['name'] + ' \n'
                        else:
                                    game['text'] += '🙏|' + player['name'] + ' молится. Над ' + target['name'] + ' собираются тучи!\n'
                    else:
                        if target['act'] != None and target['act'][0] == 'necrostaffability':
                            game['text'] += '🙏⚡️|' + player['name'] + ' молится. В ' + target[
                                'name'] + ' бьет молния и отнимает у цели 1♥️!\n'
                        else:
                                    if 'tuman_incvizitor' in player['customtexts'] and player['customtexts']['tuman_incvizitor']:
                                                game['text'] += '⬛️|' +player['name']+ ' не получается помутнить разум ' + target['name'] + ' !\n'
                                    else:
                                                game['text'] += '💨|' + player['name'] + ' молится, но с ' + target['name'] + ' ничего не происходит.\n'
                else:
                    if target['id'] == player['id']:
                                if 'tuman_incvizitor' in player['customtexts'] and player['customtexts']['tuman_incvizitor']:
                                            game['text'] += '♣️|' + player['name'] + ' прислушивается к своему сердцебиению...\n'
                                else:
                                            game['text'] += '🙏|' + player['name'] + ' молится за себя!\n'
                    else:
                                if 'tuman_incvizitor' in player['customtexts'] and player['customtexts']['tuman_incvizitor']:
                                            game['text'] += '♣️|' + player['name'] + ' прислушивается к сердцебиению ' + target['name'] + '!\n'
                                            target['molitva'] = True
                                else:
                                            game['text'] += '🙏|' + player['name'] + ' молится за ' + target['name'] + '!\n'
                    target['molitva'] = True

            elif player['act'][0] == 'energy_blow':
                target = game['players'][player['act'][1]]
                dmg = target['energy']
                for idss in game['players']:
                    target2 = game['players'][idss]
                    if target2['team'] == target['team']:
                        takedamage(game, player, target2, dmg)
                target['energy'] = 0
                game['text'] += '⚡️|'+player['name']+' поднимает радиопосох, и электрический луч бьет в '+target['name']+', взрывая всю его энергию! Цель и все её союзники получают '+str(dmg)+' урона.\n'
                player['energy_blowcd'] = 2

            elif player['act'][0] == 'get_calm_pvp':
                game['text'] += '❤️‍🩹' + player['name'] + ' закрывает глаза и пытается успокоиться. Страх отступает!\n'
                player['dark_counter'] = 0
                player['pressed_info'] = True

            elif player['act'][0] == 'invoker_suicide':
                player['hp'] = 0
                player['dead'] = True
                if random.randint(1, 100) <= 8:
                    game['text'] += '⚫️⚫️⚫️|' + player[
                        'name'] + ' создаёт О҉̭͈̠̓̉͑́̕͜Г̷̡̘̙͎̈́̆̿̐͡Р҈̧͚͕̩̫͇̀̀̈̚͝О̶̗̩͈҇͑̾͜ͅМ̴̢̛̪͎̞̝̭͑͌͋̔Н҈̨̛̠̗̍͆͆͂̎У҉̛̟̫̈́̓̆̀͢Ю̴̢͎͍͍̪̘̀̈́̉̀͠ Ч̸͍̖̣͔̤҇̋̈́̎̚͢Ё̸̡̫̯͙̦҇̈͋̊Р̵̢̳͉̌͒̏̿͂͝Н̷̜̗̠͈̿̐̃̽͛͜͠Ӯ̵͎͓͙̔̏̒͜͠ͅЮ҉̡̥͔̣́͛̓͠ Д̶̩̦̭̥̿͋̓̈́̏͜͡Ы҈̡̤̯̅̊͡Р҈̖̙́͆͐̈́͢͞У҉̧̲̱̱͊́͡,҉̡̥̞̾̒͞ которая поглощает всех персонажей на поле боя. Все мертвы, игра окончена.\n'
                    for idss in game['players']:
                        target = game['players'][idss]
                        target['dead'] = True
                else:
                    game['text'] += '⚫️|' + player['name'] + ' создаёт чёрную дыру, которая поглощает колдуна. ' + \
                                    player['name'] + ' мёртв.\n'

            elif player['act'][0] == 'demondestroy':
                player['demondestroycd'] = 15
                target = game['players'][player['act'][1]]
                game['text'] += '⚫️|Все глаза '+player['name']+', кроме самого большого, закрылись. Глаз становится полностью черным, и сразу ' + \
                                   'после этого выпускает широкую волну темной энергии в ' + target['name'] + '. ' + \
                                   'Цель теряет всю свою жизненную энергию.\n'
                target['hp'] = 0

        for ids in game['players']:
            player = game['players'][ids] 
            if player['act'] == None:
                continue
            if not game['classic_game']:
                if player['act'][0] == 'attack' or player['act'][0] == 'knife':
                    if 'pyromancer' in player['skills'] and player['pyrodamage']:
                        target = game['players'][player['act'][1]]
                        pyrodamage = 0
                        for idss in game['players']:
                            target2 = game['players'][idss]
                            if target2['fireticks'] > 0:
                                pyrodamage += 1

                        showpyrodamage = pyrodamage
                        if pyrodamage > 0:
                            player['demon'] = True
                        if not target['washitin']:
                            armor, text = getarmor(game, target, pyrodamage)
                        else:
                            armor = target['dopblock']
                            if pyrodamage < armor:
                                armor = pyrodamage
                            text = ''
                            if armor > 0:
                                if 'semw_armor' in player['customtexts'] and player['customtexts']['semw_armor']:
                                    text = '🪖|' + target['name'] + ' в своей броне выглядит непоколебимым, снимая всего ' + str(armor) + ' урона и продолжая побеждать врагов!\n'
                                else:
                                    text = '🛡| Броня ' + target['name'] + ' снимает ' + str(armor) + ' урона!\n'
                        pyrodamage -= armor
                        target['dopblock'] -= armor
                        if target['saberblock'] != None:
                            if player['id'] == target['saberblock'][0]:
                                sblock = target['saberblock'][1]
                                if sblock > pyrodamage:
                                    sblock = pyrodamage
                                pyrodamage -= sblock
                                target['saberblock'][1] -= sblock
                        if showpyrodamage > 0:
                            game['effecttext'] += '👺|Пироман ' + player[
                                'name'] + ' наносит дополнительный урон своей цели (' + str(showpyrodamage) + ')!\n'
                            game['effecttext'] += text
                        if not target['shield']:
                            if pyrodamage > 0:
                                player['outgoingdmgs'].append([target['id'], pyrodamage])
                                target['incomingdmgs'].append([player['id'], pyrodamage])

        for ids in game['players']:
            player = game['players'][ids]
            waitbatsdel = []
            for idss in player['waitbats']:
                idss[1] -= 1
                if idss[1] <= 0 and not player['dead']:
                    dmg = random.randint(3, 3) 
                    showdmg, text = takedamage(game, game['players'][idss[0]], player, dmg)
                    game['text'] += '🦇|Летучая мышь садится на ' + player['name'] + ' и кусает его! Нанесено ' + str(
                        showdmg) + ' урона.\n'
                    game['text'] += text
                    waitbatsdel.append(idss)
                    # player['batsdamages'].append(idss[0])
            for idss in waitbatsdel:
                player['waitbats'].remove(idss)

            rootsdel = []
            for idss in player['roots']:
                print(idss)
                idss[1] -= 1
                if idss[1] <= 0 and not player['dead']:
                    dmg = 1 
                    showdmg, text = takedamage(game, game['players'][idss[0]], player, dmg) 
                    game['text'] += '🎋|' + player['name'] + ' получает ' + str(dmg) + ' урона от корней!\n'
                    game['text'] += text 
                    rootsdel.append(idss)
            for idss in rootsdel:
                player['roots'].remove(idss) 
            if player['act'] == None:
                continue
            if player['act'][0] == 'skip':
                
                if 'zilch_skip' in player['customtexts'] and player['customtexts']['zilch_skip']:
                    if random.randint(1, 100) <= 75:
                        game['text'] += '☕️|' + player['name'] + ' пьет чай.\n'
                    else:
                        game['text'] += '🍬|' + player['name'] + ' ест конфеты.\n'
                        
                elif 'alex_skip' in player['customtexts'] and player['customtexts']['alex_skip']:
                    game['text'] += '🌒|' + player['name'] + ', попивая кофе, сеял разрушение своим присутствием.\n'
                    
                elif 'meningoencephalitis_skip' in player['customtexts'] and player['customtexts']['meningoencephalitis_skip']:
                    game['text'] += '⬇️|' + player['name'] + ' делает киберспортивный мув.\n'
                    
                else:
                    if player['fireticks'] > 0:
                        if 'autist' not in player['skills']:
                            game['text'] += '💨|' + player['name'] + ' тушит себя.\n'
                        else:
                            game['text'] += '💨|' + player['name'] + ' тупит, а огонь на нем почему-то тухнет.\n'
                    else:
                        if 'autist' not in player['skills']:
                            game['text'] += '⬇️|' + player['name'] + ' пропускает ход.\n' 
                        else:
                            game['text'] += '⬇️|' + player['name'] + ' тупит.\n'
                if player['fireticks'] > 0:
                    player['fireticks'] = 1
                    player['firestrength'] = 0

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue
            if player['act'][0] == 'zombieup':
                target = game['players'][player['act'][1]]
                if target['dead']:
                    target['dead'] = False
                    target['necrozombie'] = 3
                    target['maxnecrozombie'] = 3
                    if player['weapon'].name == 'Посох Некроманта':
                        target['necrozombie'] = 2
                        target['maxnecrozombie'] = 2
                    target['weapon'] = weaponlist.Bite()
                    target['master'] = None
                    target['skills'] = []
                    target['inventory'] = []
                    game['text'] += '👿|' + player['name'] + ' поднимает зомби.\n'

            elif player['act'][0] == 'break_weapons':
                player['invokercd'] = 0
                target = game['players'][player['act'][1]]
                if target['weapon'].name not in ['Кулаки', 'Укус зомби', 'Рог', 'Рука трента', 'Конечность вируса',
                                                 'One punch']:
                    target['lostweapon'] = True \
                # if player['weapon'].name not in ['Кулаки', 'Укус зомби', 'Рог', 'Рука трента', 'Конечность вируса']:
                #    player['weapon'] = weaponlist.Fist()
                game['text'] += '🕳|' + player['name'] + ' создает гравитационную аномалию вокруг ' + target[
                    'name'] + ', цель роняет свое оружие!\n' 
 
            elif player['act'][0] == 'light_sword':
                player['invokercd'] = 4
                target = game['players'][player['act'][1]]
                target['weapon'] = weaponlist.LightSword()
                game['text'] += '☀️|Тучи над ' + player[
                    'name'] + ' раздвинулись, и упавший с неба луч коснулся оружия ' + target[
                                    'name'] + '. Оно превратилось в Меч Света!\n'

            elif player['act'][0] == 'infection':
                player['invokercd'] = 2
                target = game['players'][player['act'][1]]
                target['infected'] = True
                game['text'] += '🦠|' + player['name'] + ' отравляет ' + target[
                    'name'] + '! Цель будет терять 2⚡️ каждый ход до тех пор, пока не отдохнет.\n'

            elif player['act'][0] == 'mind_control':
                target = game['players'][player['act'][1]]
                target['attack_self'] = True
                game['text'] += '🪬|' + player['name'] + ' впивается взглядом в ' + target[
                    'name'] + ', подчиняя его разум своей демонической воле.\n'
                player['mind_controlcd'] = 2

        for ids in game['players']:
            player = game['players'][ids]
            if player['act'] == None:
                continue

                    
            if 'add_tentacles' in player['skills'] and player['act'][1] != 'self':
                try:
                    target = game['players'][player['act'][1]]
                except:
                    target = None
                    
                if target != None and target['team'] != player['team']:
                    if random.randint(1, 100) <= 50:
                        hitchance = 90
                        if target['act'] != None and target['act'][0] == 'perekat':
                            hitchance -= 50
                            if 'ninja' in target['skills']:
                                hitchance -= 950

                        dmg = 1
                        firetext = ''  # Инициализация firetext для всех случаев

                        if random.randint(1, 100) <= hitchance:  # Проверяем шанс попадания
                            takedamage(game, player, target, dmg)

                            if target.get('act') is not None and ('skip' in target['act'] or 'stun' in target['act']):
                                firetext = None  # Если цель пропускает ход или оглушена, огонь не накладывается
                            else:
                                firetext = setfire(game, player, target, strength=1, duration=3)  # Огонь накладывается

                            if firetext:
                                game[
                                    'text'] += f'🧬|Из тела {player["name"]} вылезают щупальца, которые атакуют {target["name"]}! Нанесено {dmg} урона.{firetext}\n'
                            else:
                                game[
                                    'text'] += f'🧬|Из тела {player["name"]} вылезают щупальца, которые атакуют {target["name"]}! Нанесено {dmg} урона.\n'
                        else:
                            game[
                                'text'] += f'💨|Из тела {player["name"]} вылезают щупальца, которые атакуют {target["name"]}, но не попадают.\n'

        textstosend = []
        while len(game['text']) > 4000:
            textstosend.append(game['text'][:4000])
            game['text'] = game['text'][4000:]
        if not game['castlefight'] and not game['neuralfight']:
            if not game['cwbar']:
                while True:
                    tries = 0
                    try:
                        for idss in textstosend:
                            sendm(bot, game['id'], idss)
                            time.sleep(1)
                        if game['text'] != ' ' and game['text'] != '':
                            sendm(bot, game['id'], game['text'])
                        break
                    except: 
                        tries += 1
                        if tries > 100:
                            del games[game['id']]
                            return
                        time.sleep(3)

            for ids in game['players']:
                player = game['players'][ids]
                if player['id'] != game['id']:
                    try:
                        sendm(bot, player['id'], game['text'])
                        # for idss in textstosend:
                        #    sendm(bot, player['id'], idss)
                        #    time.sleep(1)
                    except:
                        pass
            for ids in game['spectators']:
                if ids not in game['players']:
                    try:
                        for idss in game['players']:
                            xx = game['players'][idss]
                            break
                        sendm(bot, ids, '[' + xx['name'] + ']\n' + game['text'])
                    except:
                        pass 
            time.sleep(1)
        else:
            if not game['neuralfight']:
                alltext = game['text'].split('\n')
                for ids in game['players']:
                    player = game['players'][ids]
                    try:
                        player['castlefighttexts'].append('\nХод ' + str(game['turn'] - 1) + ':')
                        for idss in alltext:
                            if player['name'] + ' ' in idss or player['name'] + '.' in idss or player['name'] + ',' in idss or \
                                    player['name'] + '!' in idss:
                                player['castlefighttexts'].append(idss)
                    except:
                        pass
                allcastlesbattletext[game['id']].append(game['text'])
        for ids in game['players']:
            player = game['players'][ids]
            player['stun'] -= 1
            if player['stun'] == 0 and not player['dead']:
                if 'mewcomer_stun' in player['customtexts'] and player['customtexts']['mewcomer_stun']:
                            game['effecttext'] += '😱|' + player['name'] + ' резко помахал головой, вспомнив, что он дерётся.\n'
                else:
                            game['effecttext'] += '🌀|' + player['name'] + ' приходит в себя.\n'
            player['fireticks'] -= 1
            if player['watershield'] > 0 and player['fireticks'] > 0:
                player['fireticks'] = 0
            if player['fireticks'] == 0:
                game['effecttext'] += '🔥|Огонь на ' + player['name'] + ' потух!\n'
                player['firestrength'] = 0 
            elif player['fireticks'] > 0:
                if len(player['who_fireds']) > 0:
                    player['who_fired'] = random.choice(player['who_fireds'])
                curdamage = player['firestrength']
                showdamage = curdamage
                if player['saberblock'] != None:
                    if player['who_fired'] == player['saberblock'][0]:
                        curdamage = 0

                if 'fire_regen' not in player['skills'] and 'fire_resistance' not in player['skills'] and 'lucifer_shield' not in player['skills'] and not player['is_radiodemon']:
                    showdmg, text = takedamage(game, game['players'][player['who_fired']], player, curdamage)
                    if player['firestrength'] > 1:

                        player['energy'] -= (player['firestrength'] - 1)
                        game['effecttext'] += '🔥|' + player['name'] + ' горит! Теряет ' + str(
                            player['firestrength'] - 1) + ' энергии и получает ' + str(player['firestrength']) + ' урона.\n'
                    else:
                        game['effecttext'] += '🔥|' + player['name'] + ' горит! Получает ' + str(
                            player['firestrength']) + ' урона.\n'
                else:
                    if 'fire_regen' in player['skills'] or player['is_radiodemon']:
                        text = '🔥|' + player['name'] + ' горит! Восстанавливает ' + str(1) + ' жизнь.\n'
                        #if player['hp'] < player['maxhp']:
                        player['hp'] += 1
                        player['fireticks'] = 1
                    elif 'fire_resistance' in player['skills']:
                        text = '🔥|' + player['name'] + ' горит, но адская каменная кожа блокирует урон.\n'
                    elif 'lucifer_shield' in player['skills']:
                        text = '🔥🔴|' + player['name'] + ' горит! Огонь создает защитный барьер вокруг Люцифера, блокируя входящий урон.\n'
                        player['shield'] = True
                        player['incomingdmgs'] = []
                        player['fireticks'] = 1
                game['players'][player['who_fired']]['demon'] = True
                game['effecttext'] += text

        game['text'] = 'Эффекты ' + str(game['turn'] - 1) + ':\n'
        if game['effecttext'] != '':
            game['text'] += game['effecttext']
            game['effecttext'] = ''
        illusions = []
        skeletons = []
        treants = []
        viruses = []
        madskeles = []
        weakskeles = [] 
        weakghouls = []
        zombierats = []
        necrofighters = []
        angryrhinos = []
        for ids in game['players']:
            player = game['players'][ids]
            if player['createillusion']: 
                player['illusion'] = True
                player['illusioncd'] = 5
                player['illusionturns'] = 3
                illusions.append(createplayer(user=None, uid=0 - player['id'], weapon=weaponlist.Non(), hp=0,
                                              name='Иллюзия ' + player['name'], dead=True, iamillusion=True))
            if player['blood'] > 0:
                player['blood'] -= 1
                if player['blood'] <= 0:
                    if player['is_necromant']:
                        pass
                    else:
                        hp = 1
                        player['hp'] -= hp
                        player['can_summon_zombie'] = True

                    if not player['dead']:
                        if player['is_necromant']:
                            game['text'] += '❣️|' + player['name'] + ' игнорирует кровотечение!\n'
                        else:
                            if 'Тьма' in player['name'] and player['team'] == 'dark' and player['controller'] == 'bot':
                                game['text'] += '❣️|' + player['name'] + ' теряет 1 глаз.\n'
                            else:
                                game['text'] += '❣️|Кровотечение отнимает у ' + player['name'] + ' жизнь!\n' 
                                game['text'] += '♥️' * player['hp'] + '|' + player['name'] + ' теряет ' + str(
                                    1) + ' жизнь(ей). Остается ' + str(player['hp']) + ' хп.\n'
                            if 'regeneration' in player['skills'] and random.randint(1, 6) == 1:
                                player['hp'] += 1
                                game['text'] += '❗️|' + player['name'] + ' восстанавливает 1 жизнь.\n'
                            for idss in game['players']:
                                target = game['players'][idss]
                                if target['team'] != player['team']:
                                    if target['weapon'].lvl == 4 and target['weapon'].modification == 2 and target['weapon'].name == 'Нож':
                                        target['hp'] += 1
                                        if target['hp'] > target['maxhp']:
                                            target['hp'] = target['maxhp']
                                        game['text'] += '🧛🏻|Нож ' + target['name'] + ' восстанавливает ему 1 жизнь.\n'

                    if 'skeletonking' in player['skills']:
                        for i in range(1):
                            skeletonuser = newskeletonuser(game)
                            skeleton = createplayer(skeletonuser, photo=None)
                            for ids in skeleton:
                                x = ids
                                break
                            number = 1
                            for idss in game['players']:
                                if 'Скелет' in game['players'][idss]['name'] and game['players'][idss][
                                    'controller'] == 'bot':
                                    number += 1
                            number += len(skeletons)
                            skeleton[x]['name'] = 'Скелет ' + str(number) + '|💀' 
                            skeleton[x]['team'] = player['team']
                            skeleton[x]['controller'] = 'bot'
                            skeleton[x]['weapon'] = weaponlist.Sword()
                            skeleton[x]['hp'] = 1
                            skeleton[x]['maxhp'] = 1
                            for idss in game['players']: 
                                skeleton[x]['nearplayers'].append(game['players'][idss]['id'])
                                game['players'][idss]['nearplayers'].append(skeleton[x]['id'])
                            skeletons.append(skeleton) 
                            game['text'] += '💀|' + player['name'] + ' призывает скелета!\n'

                    if 'berserk' in player['skills'] or 'berserk?1' in player['skills'] or 'berserk?2' in player[
                        'skills'] or 'berserk?3' in player['skills']:
                        maxen = 9
                        if 'protivogaz' in player['skills']:
                            maxen += 1
                        if player['maxenergy'] < maxen:
                            player['maxenergy'] += hp
                        actualenergy = regen_energy(game, player, hp)
                        if 'alex_berserk' in player['customtexts'] and player['customtexts']['alex_berserk']:
                            game['text'] += '👿|Разум Архидемона '+player['name']+' разрушается! Получает '+str(actualenergy)+' энергии.\n'
                        elif 'tuman_berserk' in player['customtexts'] and player['customtexts']['tuman_berserk']:
                            game['text'] += '◼️|' +player['name']+ ' горит чёрным пламенем! Получает '+str(actualenergy)+' энергии.\n'
                        else:
                            game['text'] += '😡|Берсерк '+player['name']+' получает '+str(actualenergy)+' энергии.\n'
                        player['maxenergy'] += hp
                        if player['maxenergy'] > maxen:
                            player['maxenergy'] = maxen 
                        if player['hp'] == 1:
                            if 'alex_berserk' in player['customtexts'] and player['customtexts']['alex_berserk']:
                                game['text'] += '👿|Разум Архидемона '+player['name']+' разрушен! Архидемон впадает в безумие!\n'
                            elif 'tuman_berserk' in player['customtexts'] and player['customtexts']['tuman_berserk']:
                                game['text'] += '🖤|' +player['name']+ ' вспыхивает черным огнем, и обретает Истинную форму!\n'
                            else:
                                game['text'] += '😡|Берсерк '+player['name']+' входит в боевой транс!\n'
                    if player['weapon'].name == 'Рог':
                        if player['hp'] < player['maxhp'] / 2 and not player['madness']:
                            player['madness'] = True 
                            player['energy'] += len(game['players']) - 1
                            player['maxenergy'] += len(game['players']) - 1
                            player['weapon'].dmgbonus += len(game['players']) - 1 
                            game['text'] += '❗️|' + player['name'] + ' в ярости!\n' 
                else:
                    if not player['dead']:
                        game['text'] += '❣️|' + player['name'] + ' истекает кровью! (' + str(player['blood']) + ')\n'

            player['dark_counter'] += player['dark_counter_set']
            player['dark_counter_set'] = 0

            if player['need_to_doom']:
                #player['doomedskills'] = player['skills']
                player['doomedinventory'] = player['inventory']
                #player['skills'] = []
                player['inventory'] = []
                player['need_to_doom'] = False

            deldooms = []
            if not player['dead']:
                for idss in player['bigdooms']:
                    idss[1] -= 1
                    target = game['players'][idss[0]]
                    if idss[1] < 2:
                        takedamage(game, target, player, 1)
                        game['text'] += '❤️‍🔥|' + player['name'] + ' горит синим пламенем! Получает 1 урона.\n'
                    if idss[1] <= 0:
                        if len(player['doomedskills']) > 0:
                            player['skills'] = player['doomedskills']
                            player['doomedskills'] = []
                            player['inventory'] = player['doomedinventory']
                            player['doomedinventory'] = []
                        deldooms.append(idss)
                        game['text'] += '💨|' + player['name'] + ' избавляется от проклятия.\n'
            for idss in deldooms:
                player['bigdooms'].remove(idss)

            if player['dark_counter'] >= 5:
                if not player['dead']:
                    if game['dungeon']:
                        game['text'] += '💀|' + player[
                            'name'] + ' слишком напуган, чтобы продолжать поход. Он кончает жизнь самоубийством.\n'
                    else:
                        game['text'] += '💀|' + player[
                            'name'] + ' слишком напуган, чтобы продолжать бой. Он кончает жизнь самоубийством.\n'
                    player['dead'] = True

            if player['team'] == 'dark' and 'Тень крысы' in player['name'] and player['controller'] == 'bot':
                if player['hp'] > 0:
                    if player['cant_die']:
                        player['cant_die'] = False
                        game['text'] += '❤️|' + player['name'] + ' обретает физические очертания!\n'
                        player['name'] = 'Крыса|🐭'
                        player['weapon'] = random.choice(npcweapons)()
                        player['hp'] = 2

            cursedel = []
            for idss in player['curses']:
                idss[1] -= 1
                if idss[1] == 0:
                    cursedel.append(idss)
                    if idss[0] == 'stun':
                        if 'tuman_incvizitor' in player['customtexts'] and player['customtexts']['tuman_incvizitor']:
                                    game['text'] += '👁️❗️|Разум ' + player['name'] + ' с‌‌‌‌‌‌б҈‌‌‌‌‌‌и‌‌‌‌‌‌‌в‌‌‌‌‌‌‌‌а‌‌‌‌‌‌‌‌е҉҇‌‌‌‌‌т҈‌‌‌‌‌с҉҇‌‌‌‌‌я‌‌‌‌‌‌ в водовороте т‌‌‌е‌‌‌м҉‌‌н‌‌‌ы҈‌‌х‌‌‌ м‌‌‌ы‌‌‌с҈‌‌л‌‌‌е‌‌‌й‌‌‌n'
                        else:
                                    game['text'] += '🌩|Гнев небес обрушивается на ' + player['name'] + ' в виде молнии!\n'
                        game['text'] += '🌀|' + player['name'] + ' оглушен!\n'
                        if player['stun'] <= 0:
                            player['stun'] = 1
                        else:
                            player['stun'] += 1
                else:
                    if idss[0] == 'stun':
                        if 'tuman_incvizitor' in player['customtexts'] and player['customtexts']['tuman_incvizitor']:
                                    game['text'] += '👁️|' + player['name'] + ' Т‌‌‌‌‌‌‌‌‌‌‌‌‌е‌‌‌‌‌‌‌р‌‌я҈‌е‌т҉‌‌‌‌‌‌ к‌‌‌о҈‌‌‌‌‌‌‌‌‌н‌‌т‌ро҉‌‌‌‌‌‌‌‌‌л‌‌‌‌‌‌‌‌‌ь‌‌‌‌‌‌‌‌‌... (' + str(idss[1]) + ')\n'
                        else:
                                    game['text'] += '☁️|Над ' + player['name'] + ' собираются тучи. (' + str(idss[1]) + ')\n'
            for idss in cursedel:
                player['curses'].remove(idss)

            frozendel = []
            for idss in player['frozen_buttons']:
                idss[1] -= 1
                if idss[1] == 0:
                    frozendel.append(idss)
            for idss in frozendel:
                player['frozen_buttons'].remove(idss)

            if player['suicide'] and not player['dead']:
                if game['testequipgame']:
                    game['text'] += '🔚|' + player['name'] + ' покидает тестовый полигон.\n'
                elif 'probel_suicide' in player['customtexts'] and player['customtexts']['probel_suicide']:
                    game['text'] += '⚰️|' + player['name'] + ' устал сражаться и лег в гроб.\n'
                else:
                    game['text'] += '☠️|' + player['name'] + ' кончает жизнь самоубийством.\n'
                for ids in player['ritualists']:
                    game['players'][ids[0]]['ritual_ability'] = True
                player['dead'] = True
                player['dead_from_scare'] = True

            if player['meditation'] != None and player['act'] == None:
                if player['meditation'] == 'regen':
                    if len(player['incomingdmgs']) > 0:
                        player['hp'] += 2
                        game['text'] += '💪|Медитация стойкости ' + player['name'] + ' прошла успешно!\n'
                        game['text'] += '♥️' * player['hp'] + '|' + player['name'] + ' восстанавливает ' + str(
                            2) + ' жизнь(ей). Остается ' + str(player['hp']) + ' хп.\n'
                    else:
                        game['text'] += '💪|Медитация стойкости ' + player['name'] + ' провалена, урон не был получен.\n'
                if player['meditation'] == 'strike':
                    if len(player['incomingdmgs']) == 0:
                        target = game['players'][player['meditationtarget']]
                        target['hp'] -= 1
                        game['text'] += '👁|Медитация концентрации ' + player['name'] + ' прошла успешно! ' + player[
                            'name'] + ' концентрируется на ' + target['name'] + ' и стремительно атакует его!\n'
                        game['text'] += '♥️' * target['hp'] + '|' + target['name'] + ' теряет ' + str(
                            1) + ' жизнь(ей). Остается ' + str(target['hp']) + ' хп.\n'
                    else:
                        game['text'] += '👁|Медитация концентрации ' + player['name'] + ' провалена, урон был получен.\n'

                player['meditation'] = None
                player['meditationtarget'] = None
            if player['domeditation']:
                try:
                    target = game['players'][player['meditationtarget']]
                except:
                    target = 'self'
                player['meditationcd'] = 5
                if target != 'self':
                    # player['meditationtarget'] = target['id']
                    player['meditation'] = 'strike'
                else:
                    player['meditation'] = 'regen'
                game['text'] += '💤|' + player['name'] + ' медитирует.\n'

        for ids in illusions:
            game['players'].update(ids)

        for ids in game['players']:
            player = game['players'][ids]
            if player['demonshield']:
                targets = []
                dmg = 0
                for idss in player['incomingdmgs']:
                    target = game['players'][idss[0]]
                    targets.append(target)
                    dmg += idss[1]
                if player['darkdemon_strenght'] >= 80 and len(targets) > 0:
                    target = random.choice(targets)
                    takedamage(game, player, target, dmg)
                    game['text'] += "🔺|"+player['name']+' направляет луч смертоносной энергии в '+target['name']+", нанося "+str(dmg)+" урона.\n"
                player['incomingdmgs'] = []

        if not game['castlefight'] and not game['neuralfight']:
            if game['text'] != 'Эффекты ' + str(game['turn'] - 1) + ':\n':
                if not game['cwbar']:
                    tries = 0
                    while True:
                        try:
                            sendm(bot, game['id'], game['text'])
                            break
                        except:
                            tries += 1
                            if tries > 100:
                                del games[game['id']]
                                return
                            time.sleep(3)
                for ids in game['players']:
                    player = game['players'][ids]
                    if player['id'] != game['id']:
                        try:
                            sendm(bot, player['id'], game['text'])
                        except:
                            pass
                for ids in game['spectators']:
                    if ids not in game['players']:
                        try:
                            for idss in game['players']:
                                xx = game['players'][idss]
                                break
                            sendm(bot, ids, '[' + xx['name'] + ']\n' + game['text'])
                        except:
                            pass
                time.sleep(1)
        else:
            if not game['neuralfight']:
                alltext = game['text'].split('\n')
                for ids in game['players']:
                    player = game['players'][ids]
                    for idss in alltext:
                        if player['name'] + ' ' in idss or player['name'] + '.' in idss or player['name'] + ',' in idss or \
                                player['name'] + '!' in idss:
                            try:
                                player['castlefighttexts'].append(idss)
                            except:
                                pass
                allcastlesbattletext[game['id']].append(game['text'])

        game['text'] = 'Результаты хода ' + str(game['turn'] - 1) + ':\n'
        game['flashed'] = []
        light_strikesdel = []
        for idss in game['light_strikes']:
            idss[1] -= 1
            if idss[1] <= 0:
                armortexts = ''
                for idsss in game['players']:
                    player = game['players'][idsss]
                    if not player['dead']:
                        showdmg, armortext = takedamage(game, player, player, 5)
                        armortexts += armortext

                game[
                    'text'] += '⚠️|' + 'Поле боя окончательно наэлектризовалось, происходит электровзрыв! Все персонажи получают 5 урона.\n'
                game['text'] += armortexts
                light_strikesdel.append(idss)
            else:
                game['text'] += '⚠️|' + 'Поле боя электризуется (' + str(idss[1]) + ')\n'
                # player['batsdamages'].append(idss[0])
        for idss in light_strikesdel:
            game['light_strikes'].remove(idss)

        for ids in game['players']:
            player = game['players'][ids]
            player['nextturndamage'] = 0

        for ids in game['players']:
            player = game['players'][ids]
            if 'demonlord' in player['skills']:
                hellcharges = 0
                charge = True
                if player['act'] != None:
                    if player['act'][0] == 'hellfire':
                        charge = False
                if charge:
                    for ids in player['outgoingdmgs']:
                        hellcharges += 1
                    if hellcharges > 0:
                        player['hellfirecharges'] += hellcharges
                        game['text'] += '♨️|' + player['name'] + ' получает заряды адского пламени (' + str(
                            hellcharges) + ')!\n'
            cdtext = ''
            bonusreload = 0
            if 'dark_energy' in player['skills']:
                for idss in game['players']: 
                    if game['players'][idss]['dark_counter'] > 0:
                        bonusreload += 1
            player['peregrev'] += player['addperegrev']
            player['addperegrev'] = 0
            player['perekatcd'] -= (1 + bonusreload)

            player['shieldgencd'] -= (1 + bonusreload)
            if player['shieldgencd'] > 0 and (
                    'shieldgen' in player['skills'] or 'shieldgen?1' in player['skills'] or 'shieldgen?2' in player[
                'skills'] or 'shieldgen?3' in player['skills']):
                cdtext += 'Генератор щитов обновится через ' + str(player['shieldgencd']) + ' ходов.\n'
            player['hypnotistcd'] -= (1 + bonusreload)
            if player['hypnotistcd'] > 0 and 'hypnotist' in player['skills']:
                cdtext += 'Гипноз обновится через ' + str(player['hypnotistcd']) + ' ходов.\n'
            player['sokrusheniecd'] -= (1 + bonusreload)
            player['visorcd'] -= (1 + bonusreload)
            if player['visorcd'] > 0 and 'visor' in player['skills']:
                cdtext += 'Визор обновится через ' + str(player['visorcd']) + ' ходов.\n'
            player['shield'] = False
            player['act'] = None
            player['dopuseditems'] = []
            wasenergy = False
            if player['energy'] > 0:
                wasenergy = True
            player['energy'] -= player['lostenergy']
            if player['energy'] <= 0 and wasenergy:
                if player['policestun']:
                    if player['stun'] > 0:
                        player['stun'] += 1
                    else:
                        player['stun'] = 2
                    game['text'] += '🌀|' + player['name'] + ' оглушен полицейской дубинкой!\n'
            player['policestun'] = False
            player['lostenergy'] = 0
            player['sokrushenie'] = False
            player['waszero'] = False
            player['chaincd'] -= (1 + bonusreload)
            player['chain'] = False
            player['strongshot'] = False
            player['providets'] = False
            player['narsilcd'] -= (1 + bonusreload)
            player['narsil'] = False
            player['pyrodamage'] = False
            player['who_steal'] = []
            player['wasarmor_from_hitin'] = False
            player['vor'] = False
            player['doomcd'] -= (1+bonusreload)
            if player['set_first_hit']:
                player['first_hit'] = True
                player['set_first_hit'] = False
            player['weaponshield'] = False
            player['dark_energycd'] -= 1
            if player['dark_energycd'] > 0 and 'dark_energy' in player['skills']:
                cdtext += 'Энергия тьмы обновится через ' + str(player['dark_energycd']) + ' ходов.\n'
            player['vorcd'] -= (1 + bonusreload)
            if player['vorcd'] > 0 and ('vor' in player['skills'] or 'vor?1' in player['skills'] or 'vor?2' in player[
                'skills'] or 'vor?3' in player['skills']):
                cdtext += 'Вор обновится через ' + str(player['vorcd']) + ' ходов.\n'
            player['bombercd'] -= (1 + bonusreload)
            if player['bombercd'] > 0 and 'bomber' in player['skills']:
                cdtext += 'Минёр обновится через ' + str(player['bombercd']) + ' ходов.\n'
            player['bicepc'] = False
            player['bicepccd'] -= (1 + bonusreload)
            if player['bicepccd'] > 0 and 'bicepc' in player['skills']:
                cdtext += 'Бицепс обновится через ' + str(player['bicepccd']) + ' ходов.\n'

            player['spearcd'] -= (1 + bonusreload)
            player['who_attacked'] = []
            player['navodcd'] -= (1 + bonusreload)
            if player['navodcd'] > 0 and 'navod' in player['skills']:
                cdtext += 'Наводчик обновится через ' + str(player['navodcd']) + ' ходов.\n'
            player['changeweaponcd'] -= 1
            player['execution'] = False
            player['incvizitorcd'] -= (1 + bonusreload)
            if player['incvizitorcd'] > 0 and (
                    'incvizitor' in player['skills'] or 'incvizitor?1' in player['skills'] or 'incvizitor?2' in player[
                'skills'] or 'incvizitor?3' in player['skills']):
                cdtext += 'Инквизитор обновится через ' + str(player['incvizitorcd']) + ' ходов.\n'
            player['meditationcd'] -= (1 + bonusreload)
            player['energy_blowcd'] -= 1
            player['tentaclescd'] -= 1
            player['demon_transformcd'] -= 1
            player['rhino_eliminatecd'] -= 1
            player['mind_controlcd'] -= 1
            if player['meditationcd'] > 0 and 'monk' in player['skills']:
                cdtext += 'Монах обновится через ' + str(player['meditationcd']) + ' ходов.\n'
            player['invokercd'] -= (1 + bonusreload)
            if player['invokercd'] > 0 and 'invoker' in player['skills']:
                cdtext += 'Заклинатель обновится через ' + str(player['invokercd']) + ' ходов.\n'
            player['energydraincd'] -= (1 + bonusreload)
            if player['energydraincd'] > 0 and player['demonlordform']:
                cdtext += 'Выпивание энергии обновится через ' + str(player['energydraincd']) + ' ходов.\n'
            player['inzhenercd'] -= (1 + bonusreload)
            if player['inzhenercd'] > 0 and (
                    'inzhener' in player['skills'] or 'inzhener?1' in player['skills'] or 'inzhener?2' in player[
                'skills'] or 'inzhener?3' in player['skills']):
                cdtext += 'Инженер обновится через ' + str(player['inzhenercd']) + ' ходов.\n'
            player['domeditation'] = False
            player['parrycd'] -= (1 + bonusreload)
            lb = False
            if player['luciferbladecd'] > 0:
                lb = True
            player['luciferbladecd'] -= (1 + bonusreload)
            if player['luciferbladecd'] <= 0 and lb:
                game['text'] += '🔥|Клинок Люцифера воспламенился!\n'
            player['madpotion'] = False
            player['firearrow'] = False
            player['hitdown'] = False
            player['firearrowcd'] -= (1 + bonusreload)
            player['washitin'] = False
            player['obrezcd'] -= 1
            player['wasarmor_from_armorskill'] = False
            player['wasarmor_from_selfarmor'] = False
            player['wasarmor_from_cherep'] = False
            player['dopblock'] = 0
            player['who_fireds'] = []
            player['saberblock'] = None
            player['clawscd'] -= 1
            if player['weapon'].name == 'Булава' and player['weapon'].lvl == 4 and player['weapon'].modification == 1 and game['turn']%3 == 0:
                player['weapon'].dmgbonus += 1
                game['text'] += '➕|Бонус к урону у булавы '+player['name']+' вырос на 1.\n'
            player['burrowcd'] -= (1+bonusreload)
            player['burrowstrike'] = False
            player['demoncd'] -= (1 + bonusreload)
            player['chargecd'] -= (1 + bonusreload)
            player['shestcd'] -= (1 + bonusreload)
            player['light_aspect'] -= (1 + bonusreload)
            player['priestcd'] -= (1 + bonusreload)
            player['doublemadpotion'] = False
            player['necrostaffabilitycd'] -= (1)
            player['EXPLOSIONcd'] -= (1 + bonusreload)
            player['magic_strong_shield'] = False
            player['demonshield'] = False
            player['demonshieldcd'] -= (1+bonusreload)
            player['demondestroycd'] -= (1+bonusreload)
            player['lucifer_hellfire'] -= 1
            player['lucifer_hellfirecd'] -= (1+bonusreload)
            player["wing_attackcd"] -= 1
            player['hypnodebuff'] = 0
            if player['is_necromant']:
                player['stun'] = 0
            if player['priestcd'] > 0 and 'priest' in player['skills']:
                cdtext += 'Священник обновится через ' + str(player['priestcd']) + ' ходов.\n'
            player['multicastcd'] -= 1
            if player['chargecd'] > 0 and 'charge' in player['skills']:
                cdtext += 'Рывок обновится через ' + str(player['chargecd']) + ' ходов.\n'
                
            if ('alchemist' in player['skills'] or 'alchemist?1' in player['skills'] or 'alchemist?2' in player[
                'skills'] or 'alchemist?3' in player['skills']):
            
                player['madpotioncd'] -= (1 + bonusreload)
            
                if player['madpotioncd'] <= 0:
                    if game['dungeon']:
                        if 'madpotion' not in player['inventory']:
                            player['inventory'].append('madpotion')
                    else:
                        player['inventory'].append('madpotion')
                    if 'alchemist?3' in player['skills']:
                        player['madpotioncd'] = 6
                        cdtext += 'Сыворотка бешенства появится через ' + str(player['madpotioncd']) + ' ходов.\n'
                    elif 'alchemist?2' in player['skills']:
                        player['madpotioncd'] = 8
                        cdtext += 'Сыворотка бешенства появится через ' + str(player['madpotioncd']) + ' ходов.\n'
                    elif 'alchemist?1' in player['skills']:
                        player['madpotioncd'] = 10
                        cdtext += 'Сыворотка бешенства появится через ' + str(player['madpotioncd']) + ' ходов.\n'
                    else:
                        player['madpotioncd'] = 9
                        cdtext += 'Сыворотка бешенства появится через ' + str(player['madpotioncd']) + ' ходов.\n'

                    

            player['truestrike'] = False
            player['molotcd'] -= (1 + bonusreload)
            player['charge'] = False
            player['attackedthisturn'] = False
            if player['demoncd'] > 0 and 'demon' in player['skills']:
                cdtext += 'Bloodseeker обновится через ' + str(player['demoncd']) + ' ходов.\n'
            player['skeletonfirecd'] -= (1 + bonusreload)
            if player['skeletonfirecd'] > 0 and 'skeletonking' in player['skills']:
                cdtext += 'Адский огонь обновится через ' + str(player['skeletonfirecd']) + ' ходов.\n'
            player['minercd'] -= (1 + bonusreload)
            if player['minercd'] > 0 and 'miner' in player['skills']:
                cdtext += 'Мина обновится через ' + str(player['minercd']) + ' ходов.\n'
            player['illusioncd'] -= (1 + bonusreload)
            if player['illusioncd'] > 0 and 'illusionist' in player['skills']:
                cdtext += 'Иллюзионист обновится через ' + str(player['illusioncd']) + ' ходов.\n'
            player['bat'] = False
            player['batcd'] -= (1 + bonusreload)
            if player['batcd'] > 0 and 'vampire' in player['skills']:
                cdtext += 'Летучая мышь обновится через ' + str(player['batcd']) + ' ходов.\n'
            player['illusionturns'] -= (1 + bonusreload)
            if player['illusionturns'] == 0:
                player['illusion'] = False
                game['text'] += '💨|Иллюзия ' + player['name'] + ' испарилась!\n'
                game['players'][0 - player['id']]['fireticks'] = -1
            if player['watershield'] > 0:
                actualenergy = regen_energy(game, player, 2)
                game['text'] += '🔋|' + player['name'] + ' получает ' + str(actualenergy) + ' энергии.\n'

            player['watershield'] -= 1
            if player['watershield'] == 0:
                game['text'] += '💨|Водяной щит ' + player['name'] + ' испарился!\n'
            player['watershieldcd'] -= (1 + bonusreload)

            if game['testequipgame']:
                teamlist = []
                if player['controller'] == 'bot' and player['team'] != 'dummys':
                    for idss in game['players']: 
                        target = game['players'][idss]
                        if target['team'] not in teamlist and not target['dead'] and target['controller'] != 'bot':
                            teamlist.append(target['team'])
                    if len(teamlist) == 0:
                        player['dead'] = True
                        game['text'] += '🔚|' + player['name'] + ' покидает тестовый полигон.\n'

            player['createillusion'] = False
            player['demonform'] = False
            player['cuts'] += player['addcuts']
            player['addcuts'] = 0
            player['turnelements'] = getturnelements()
            player['selectedelements'] = []
            if not game['castlefight'] and not game['neuralfight']:
                if cdtext != '':
                    if player['controller'] == 'player':
                        try:
                            sendm(bot, player['id'], cdtext)
                        except:
                            pass
            if not player['lastcharge']:
                player['bowcharge'] = 0
            player['lastcharge'] = False
            rm = []
            for ids in player['ritualists']:
                ids[1] -= 1
                if ids[1] <= 0:
                    rm.append(ids)
            for ids in rm:
                player['ritualists'].remove(ids)
            if player['act'] != None:
                player['afkcount'] = 0
            if player['lostweapon']:
                player['droppedweapon'] = player['weapon']
                if game['classic_game']:
                    player['weapon'] = weaponlist.Fist_classic()
                else:
                    player['weapon'] = weaponlist.Fist()

            player['lostweapon'] = False
            dzetdel = []
            hitindel = []
            for idss in player['dzets']:
                player['dzets'][idss] -= 1
                if player['dzets'][idss] <= 0 and not player['dead']:
                    actualenergy = set_energy(game, player, player['maxenergy'])
                    # if player['weapon'].name == 'Дробовик':
                    #    game['text'] += '🧰|'+player['name'] + ' заряжает 1 патрон в дробовик.\n'

                    if actualenergy < player['maxenergy']:
                        game['text'] += '💉|Энергия ' + player['name'] + ' восстановлена! (' + str(
                            actualenergy) + '/' + str(player['maxenergy']) + ')\n'
                    else:
                        game['text'] += '💉|Энергия ' + player['name'] + ' восстановлена до максимальной! (' + str(
                            player['maxenergy']) + ')\n'
                    dzetdel.append(idss)
                    if player['weapon'].name == 'Дробовик': 
                        if player['drobovik_charges'] < 2:
                            player['drobovik_charges'] += 1

            for idss in player['hitins']:
                player['hitins'][idss] -= 1
                if player['hitins'][idss] <= 0 and not player['dead']: 
                    game['text'] += '🌀|' + player['name'] + ' теряет эффект хитина. Игрок оглушен!\n'
                    if player['stun'] <= 0:
                        player['stun'] = 1
                    else:
                        player['stun'] += 1
                    hitindel.append(idss)

            for idss in dzetdel:
                del player['dzets'][idss]
            for idss in hitindel:
                del player['hitins'][idss]
            
            
            if player['infected'] and not player['dead']:
                player['energy'] -= 2
                if player['energy'] < 0:
                    player['energy'] = 0
                game['text'] += '🦠|' + player['name'] + ' отравлен! (-2⚡️)\n'

            recoverydebuffdel = []
            for idss in player['recoverydebuff']:
                idss[1] -= 1
                if idss[1] <= 0:
                    # game['text'] += '🎋|'+player['name']+' получает '+str(dmg)+' урона от корней!\n'
                    recoverydebuffdel.append(idss) \
                    # player['batsdamages'].append(idss[0])
            for idss in recoverydebuffdel:
                player['recoverydebuff'].remove(idss)

            infected_weapondel = []
            for idss in player['infected_weapon']:
                idss[1] -= 1
                if idss[1] <= 0:
                    # game['text'] += '🎋|'+player['name']+' получает '+str(dmg)+' урона от корней!\n'
                    infected_weapondel.append(idss)
                    # player['batsdamages'].append(idss[0])
            for idss in infected_weapondel:
                player['infected_weapon'].remove(idss)

            player['seetext'] = 'Пропускает ход (АФК)!'
            player['pyrodamage'] = False
            player['adrenaline'] = False
            if player['is_necromant']:
                player['stun'] = 0
            if player['energy'] > player['maxenergy']:
                player['energy'] = player['maxenergy']
                game['text'] += '💨|' + player['name'] + ' теряет излишек энергии.\n'
            if player['energy'] < 0:
                player['energy'] = 0
            if player['zombie'] != False:
                player['zombie'] -= 1
                if player['zombie'] <= 0:
                    player['zombie'] = False
                    deadplayer(game, player, [], skeletons)
            outgoingdmg = 0
            incomingdmg_hp = 0
            incomingdmg = 0
            enemys_sadist = []
            for idss in player['incomingdmgs']:
                target = game['players'][idss[0]]
                targetincoming = 0
                targetoutgoing = 0
                for idsss in target['outgoingdmgs']:
                    targetoutgoing += idsss[1]
                for idsss in target['incomingdmgs']:
                    targetincoming += idsss[1]
                if (targetoutgoing >= targetincoming or target['team'] == player['team']) and targetoutgoing > 0:
                    incomingdmg_hp += idss[1]
                    if game['castlefight']:
                        maxdmgtohp = 0
                        maxhp = player['hp']
                        while maxhp >0:
                            maxdmgtohp += player['dmglimit']
                            maxhp -= 1
                        dodmginhp = idss[1]
                        if dodmginhp > maxdmgtohp:
                            dodmginhp = maxdmgtohp
                        target['do_damage_in_hp'] += dodmginhp
                    if target['id'] not in enemys_sadist:
                        enemys_sadist.append(target['id'])
                incomingdmg += idss[1]
            for idss in player['outgoingdmgs']: 
                outgoingdmg += idss[1]
            ############################## CLASSIC ###################################
            if game['classic_game']:
                teams_damage = {}
                for idss in game['players']:
                    testtarget = game['players'][idss]
                    incomingtestdmg = 0
                    for idsss in testtarget['incomingdmgs']:
                        incomingtestdmg += idsss[1]

                    if testtarget['team'] not in teams_damage:
                        teams_damage.update({testtarget['team']:{'takendmg':incomingtestdmg}})
                    else:
                        teams_damage[testtarget['team']]['takendmg'] += incomingtestdmg
                most_damage = -100000
                for idss in teams_damage:
                    if teams_damage[idss]['takendmg'] > most_damage:
                        most_damage = teams_damage[idss]['takendmg']
                if teams_damage[player['team']]['takendmg'] < most_damage:
                    incomingdmg_hp = 0
            # print(player['name'])
            # print(incomingdmg_hp)
            # logtext = player['name']+':\nincomingdmg_hp='+str(incomingdmg_hp)+'\n'+'incomingdmg:'+str(incomingdmg)
            # global logs
            # sendm(bot, logs, logtext)
            # print('\n')
            #  if 'demon' in player['skills'] and len(player['outgoingdmgs']) == 0 and not player['demon'] and not player['dead']:
            #   incomingdmg_hp += 3
            #  game['text'] += '👹🔥|Bloodseeker '+player['name']+' горит вечным пламенем и получает 3 урона!\n'
            #  game['text'] += '♥️'*player['hp']+'|'+player['name']+' теряет '+str(1)+' жизнь(ей). Остается '+str(player['hp'])+' хп.\n'
            #  if 'berserk' in player['skills']:
            #       game['text'] += '😡|Берсерк '+player['name']+' получает '+str(1)+' энергии.\n'
            #     player['energy'] += 1
            #      player['maxenergy'] += 1
            #      if player['hp'] == 1:
            #           game['text'] += '😡|Берсерк '+player['name']+' входит в боевой транс!\n'
            player['demon'] = False
            if player['summon_treant'] > 0:
                for i in range(player['summon_treant']):
                    treant = summon_treant(game, player, treants)
                    treants.append(treant)
                player['summon_treant'] = 0
            if player['summon_mad_skeletons'] > 0:
                for i in range(player['summon_mad_skeletons']):
                    madskele = summon_mad_skeleton(game, player, len(madskeles))
                    madskeles.append(madskele)
                player['summon_mad_skeletons'] = 0
            if player['summon_weak_skeletons'] > 0:
                for i in range(player['summon_weak_skeletons']):
                    weakskele = summon_dung_skeleton(game, weakskeles, hp=1, team=player['team'])
                    weakskeles.append(weakskele)
                player['summon_weak_skeletons'] = 0
            if player['summon_weak_ghouls'] > 0:
                for i in range(player['summon_weak_ghouls']):
                    weakghoul = summon_ghoul(game, len(weakghouls), hp=6, energy=5, team=player['team'], dmglimit=4)
                    weakghouls.append(weakghoul)
                player['summon_weak_ghouls'] = 0
            if player['summon_zombie_rats'] > 0: 
                for i in range(player['summon_zombie_rats']):
                    zombierat = summon_zombierat(game, len(zombierats), team=player['team'])
                    zombierats.append(zombierat)
                player['summon_zombie_rats'] = 0
            if player['summon_necrofighter'] != None:
                if player['summon_necrofighter'] == 'ghoul':
                    necrofighter = summon_ghoul(game, len(necrofighters), team=player['team'], full_control=True,
                                                player=player) 
                if player['summon_necrofighter'] == 'rat':
                    necrofighter = summon_zombierat(game, len(necrofighters), team=player['team'], full_control=True,
                                                    player=player)
                if player['summon_necrofighter'] == 'weakskele':
                    necrofighter = summon_dung_skeleton(game, necrofighters, team=player['team'], full_control=True,
                                                        player=player)
                if player['summon_necrofighter'] == 'rhino':
                    necrofighter = summon_hell_rhino(game, necrofighters, team=player['team'], full_control=True,
                                                        player=player)
                summonednecrofighter = player['summon_necrofighter']
                player['summon_necrofighter'] = None
                for idsss in necrofighter:
                    x = idsss
                    break
                # necrofighter[x]['name']
                # player['control_necrofighter'] = necrofighter['id']
                player['controllable_necrofighter'] = necrofighter[x]['id']
                if summonednecrofighter == 'weakskele':
                    for idss in game['players']:
                        game['players'][idss]['nearplayers'].append(necrofighter[x]['id'])
                        necrofighter[x]['nearplayers'].append(game['players'][idss]['id'])
                necrofighters.append(necrofighter)
            if player['summon_angry_rhino']:
                player['summon_angry_rhino'] = False
                angryrhino = summon_angry_rhino(game, player['team'], player['angry_rhino_target'])
                angryrhinos.append(angryrhino)
            if player['summon_virus'] > 0:
                for i in range(player['summon_virus']):
                    virus = summon_virus(game, player, viruses)
                    viruses.append(virus)
                player['summon_virus'] = 0
            if incomingdmg > 0 and 'doomed' in player['skills']:
                player['doomed_amount'] += 1
                game['text'] += '🔥' * player['hp'] + '|Адское пламя охватывает ' + player['name'] + ' ('+str(player['doomed_amount'])+'/7)!\n'
            if incomingdmg_hp > 0 and not player['dead']:
                hp = 1
                dmg = incomingdmg_hp
                if dmg > 999999:
                    hp = random.randint(99999999, 999999999999)
                else:
                    while dmg >= player['dmglimit']:
                        dmg -= player['dmglimit'] 
                        hp += 1
                if 'doomed' not in player['skills']:
                    player['hp'] -= hp
                    showlosthptext = '♥️' * player['hp'] + '|' + player['name'] + ' теряет ' + str(
                        hp) + ' жизнь(ей). Остается ' + str(player['hp']) + ' хп.'
                    if is_dark_boss(player):
                        game['text'] += '👁‍🗨' + '|' + player['name'] + ' теряет ' + str(hp) + ' глаз.\n'
                    else:
                        game['text'] += '♥️' * player['hp'] + '|' + player['name'] + ' теряет ' + str(
                            hp) + ' жизнь(ей). Остается ' + str(player['hp']) + ' хп.\n'
                    if player['is_magmaworm']:
                        for idss in game['players']:
                            if not game['players'][idss]['dead']:
                                setfire(game, player, game['players'][idss], strength=hp)
                        game['text'] += '🔥' + '|' + player['name'] + ' теряет часть хвоста. Та взрывается, поджигая поле боя!\n'
                else:
                    pass
                player['can_summon_zombie'] = True
                if 'regeneration' in player['skills'] and random.randint(1, 6) == 1:
                    player['hp'] += 1
                    game['text'] += '❗️|' + player['name'] + ' восстанавливает 1 жизнь.\n'
                if 'berserk' in player['skills'] or 'berserk?1' in player['skills'] or 'berserk?2' in player[
                    'skills'] or 'berserk?3' in player['skills']:
                    maxen = 9
                    if 'protivogaz' in player['skills']:
                        maxen += 1
                    if player['maxenergy'] < maxen:
                        player['maxenergy'] += hp
                    actualregen = regen_energy(game, player, hp)
                    if 'alex_berserk' in player['customtexts'] and player['customtexts']['alex_berserk']:
                        game['text'] += '👿|Разум Архидемона '+player['name']+' разрушается! Получает '+str(actualregen)+' энергии.\n'
                    elif 'tuman_berserk' in player['customtexts'] and player['customtexts']['tuman_berserk']:
                        game['text'] += '◼️|' +player['name']+ ' горит чёрным пламенем! Получает '+str(actualregen)+' энергии.\n'
                    else:
                        game['text'] += '😡|Берсерк '+player['name']+' получает '+str(actualregen)+' энергии.\n'
                    player['maxenergy'] += hp
                    if player['maxenergy'] > maxen:
                        player['maxenergy'] = maxen
                    if player['hp'] == 1: 
                        if 'alex_berserk' in player['customtexts'] and player['customtexts']['alex_berserk']:
                            game['text'] += '👿|Разум Архидемона '+player['name']+' разрушен! Архидемон впадает в безумие!\n'
                        elif 'tuman_berserk' in player['customtexts'] and player['customtexts']['tuman_berserk']:
                            game['text'] += '🖤|' +player['name']+ ' вспыхивает черным огнем, и обретает Истинную форму!\n'
                        else:
                            game['text'] += '😡|Берсерк '+player['name']+' входит в боевой транс!\n'
                if 'skeletonking' in player['skills']: 
                    for i in range(hp):
                        skeleton = summon_skeleton(game, player, skeletons)
                        skeletons.append(skeleton)
                if player['is_rhino']:
                    if player['hp'] < player['maxhp'] / 2 and not player['madness']:
                        player['madness'] = True
                        regen_energy(game, player, len(game['players']) - 1)
                        player['maxenergy'] += len(game['players']) - 1
                        player['weapon'].dmgbonus += len(game['players']) - 1 
                        game['text'] += '❗️|' + player['name'] + ' в ярости!\n'
                if game['pureduel_rats'] and player['controller'] == 'bot':
                    player['weights'] = random_duelrat_weights()

                        # for idsss in player['batsdamages']:
                #    enemy = game['players'][idsss]
                #    enemy['hp'] += 1
                #    game['text'] += '♥️'*enemy['hp']+'|'+enemy['name']+' восстанавливает '+str(1)+' жизнь(ей). Остается '+str(enemy['hp'])+' хп.\n'
                # player['batsdamages'] = []
                for idss in enemys_sadist:
                    enemy = game['players'][idss]
                    if game['castlefight']:
                        try:
                            enemy['castlefighttexts'].append(showlosthptext)
                        except:
                            pass
                        enemy['take_enemy_hp'] += hp
                    if ('sadist' in enemy['skills'] or 'sadist?1' in enemy['skills'] or 'sadist?2' in enemy[
                        'skills'] or 'sadist?3' in enemy['skills']):
                        actualregen = regen_energy(game, enemy, hp)
                        if 'sadist?1' in enemy['skills']:
                            game['text'] += '😃|Садист ' + enemy['name'] + ' получает ' + str(
                                actualregen) + ' энергии.\n'
                        elif 'sadist?2' in enemy['skills']:
                            dopdmgs = random.randint(0, 1)
                            game['text'] += '😃|Садист ' + enemy['name'] + ' получает ' + str(
                                actualregen) + ' энергии и +' + str(dopdmgs) + ' урона на следующий ход.\n'
                            enemy['nextturndamage'] += dopdmgs
                        elif 'sadist?3' in enemy['skills']:
                            dopdmgs = random.randint(0, 2)
                            game['text'] += '😃|Садист ' + enemy['name'] + ' получает ' + str(
                                actualregen) + ' энергии и +' + str(dopdmgs) + ' урона на следующий ход.\n'
                            enemy['nextturndamage'] += dopdmgs
                        elif 'sadist' in enemy['skills']:
                            if 'wizy_sadist' in enemy['customtexts'] and enemy['customtexts']['wizy_sadist']:
                                game['text'] += ('😃|Наблюдая за страданиями своих соперников ' + enemy['name']+ ' ощущает невероятный прилив силы, восстанавливая ' + str(actualregen) + ' энергии.\n')
                            else:
                                game['text'] += ('😃|Садист ' + enemy['name'] + ' получает ' + str(actualregen) + ' энергии.\n')
                    if enemy['necrozombie'] > 0:
                        enemy['getfood'] = True
                    if 'demon' in enemy['skills'] and enemy['demonheal'] > 0:
                        enemy['hp'] += hp 
                        if enemy['hp'] > enemy['maxhp']:
                            enemy['hp'] = enemy['maxhp']
                        game['text'] += '♥️' * enemy['hp'] + '|Bloodseeker ' + enemy[
                            'name'] + ' восстанавливает ' + str(hp) + ' жизнь(ей). Остается ' + str(
                            enemy['hp']) + ' хп.\n'
                        if enemy['hp'] > 0:
                            if enemy['dead']:
                                enemy['dead'] = False
                                game['text'] += '👹' + '|' + enemy['name'] + ' восстал из мёртвых!\n'
                    if 'ghoul_vampirism' in enemy['skills'] or enemy['weapon'].name == 'Зубы вурдалака':
                        if game['botfight']:
                            chance = 20
                        else:
                            chance = 100
                        if random.randint(1, 100) <= chance:
                            enemy['hp'] += hp
                            if enemy['hp'] > enemy['maxhp']:
                                enemy['hp'] = enemy['maxhp']
                            game['text'] += '♥️' * enemy['hp'] + '|' + enemy['name'] + ' восстанавливает ' + str(
                                hp) + ' жизнь(ей). Остается ' + str(enemy['hp']) + ' хп.\n'
                            if enemy['hp'] > 0: 
                                if enemy['dead']:
                                    enemy['dead'] = False
                                    game['text'] += '👹' + '|' + enemy['name'] + ' восстал из мёртвых!\n'
                    # if 'vampire' in enemy['skills']:
                    # enemy['hp'] += hp
                    # if enemy['hp'] > enemy['maxhp']:
                    #    enemy['hp'] = enemy['maxhp']
                    # game['text'] += '♥️'*enemy['hp']+'|Вампир '+enemy['name']+' восстанавливает '+str(hp)+' жизнь(ей). Остается '+str(enemy['hp'])+' хп.\n'
                    # if enemy['hp'] > 0:
                    #    if enemy['dead']:
                    #        enemy['dead'] = False
                    #        game['text'] += '👹'+'|'+enemy['name']+' восстал из мёртвых!\n'

            if player['virus_attacks'] >= 3 and not player['dead']:
                deadplayer(game, player, enemys_sadist, skeletons)
            if player['dead_from_dark'] and not player['dead']:
                deadplayer(game, player, enemys_sadist, skeletons)

            armordebuffdel = []
            for idss in player["armor_debuff"]:
                player["armor_debuff"][idss]["duration"] -= 1
                if player['armor_debuff'][idss]["duration"] <= 0: 
                    armordebuffdel.append(idss)
                    
            for idss in armordebuffdel:
                del player['armor_debuff'][idss]
            for idss in player["armor_debuff_set"]:
                code = 0
                while code in player["armor_debuff"]:
                    code += 1
                player["armor_debuff"][code] = player["armor_debuff_set"][idss]
            player["armor_debuff_set"] = {}
            if player['hp'] <= 0 and not player['dead']:
                if not player['molitva']:
                    # for idss in player['ritualists']:
                    #    game['players'][idss[0]]['ritual_ability'] = True
                    # player['ritualists'] = []
                    savechance = 30
                    if 'incvizitor?1' in player['skills']:
                        savechance = 10
                    if 'incvizitor?2' in player['skills']:
                        savechance = 25
                    if 'incvizitor?3' in player['skills']:
                        savechance = 40
                    if ('incvizitor' in player['skills'] or 'incvizitor?1' in player['skills'] or 'incvizitor?2' in \
                        player['skills'] or 'incvizitor?3' in player['skills']) and not player['alreadysaved'] and random.randint(1, 100) <= savechance:
                        if not player['punchdead'] and not player['eliminated']:
                            player['hp'] = 1
                            if 'tuman_incvizitor' in player['customtexts'] and player['customtexts']['tuman_incvizitor']:
                                        game['text'] += '🖤|Ч‌‌‌‌‌ё‌‌‌‌‌‌‌р‌‌‌‌‌н҉҇‌‌‌‌‌о҈‌‌‌‌‌е‌‌‌‌‌‌‌‌ с҉‌‌‌‌‌‌е҉‌‌‌‌‌‌р‌‌‌‌‌‌‌д҈‌‌‌‌‌ц҉‌‌‌‌‌‌‌‌е‌‌‌‌‌‌‌ не даёт умереть ' + player['name'] + '!\n' 
                                        player['alreadysaved'] = True
                            else:
                                        game['text'] += '😇|Высшие силы спасли ' + player['name'] + '!\n' 
                                        player['alreadysaved'] = True
                        else:
                            game['text'] += '⚰️|Даже высшим силам не удалось спасти ' + player['name'] + '.\n'
                    elif ('zombie' in player['skills'] or 'zombie?1' in player['skills'] or 'zombie?2' in player['skills'] or 'zombie?3' in player['skills']) and player['zombie'] == False:
                        if 'Тень крысы' in player['name'] and player['controller'] == 'bot' and player[
                            'team'] == 'dark' and player['cant_die']:
                            pass
                        else:
                            if not player['eliminated']:
                                player['zombie'] = 2
                                if 'zombie?1' in player['skills']:
                                    player['zombie'] = 1
                                if 'zombie?2' in player['skills']:
                                    player['zombie'] = 2
                                if 'zombie?3' in player['skills']:
                                    player['zombie'] = 3
                                game['text'] += '😬|' + player['name'] + ' продолжает сражаться, истекая кровью!\n'
                            else:
                                game['text'] += '😬|' + player['name'] + ' не способен продолжать сражаться.\n'
                    else:
                        if player['zombie'] == False:
                            if player['necrozombie'] <= 0:
                                deadplayer(game, player, enemys_sadist, skeletons)
                else:
                    if not player['punchdead'] and not player['eliminated']:
                        player['hp'] = 1
                        if 'tuman_incvizitor' in player['customtexts'] and player['customtexts']['tuman_incvizitor']:
                                    game['text'] += '🖤|Ч‌‌‌‌‌ё‌‌‌‌‌‌‌р‌‌‌‌‌н҉҇‌‌‌‌‌о҈‌‌‌‌‌е‌‌‌‌‌‌‌‌ с҉‌‌‌‌‌‌е҉‌‌‌‌‌‌р‌‌‌‌‌‌‌д҈‌‌‌‌‌ц҉‌‌‌‌‌‌‌‌е‌‌‌‌‌‌‌ не даёт умереть ' + player['name'] + '!\n' 
                        else:
                                    game['text'] += '😇|Высшие силы спасли ' + player['name'] + '!\n'
                    else:
                        game['text'] += '⚰️|Даже высшим силам не удалось спасти ' + player['name'] + '.\n'
            player['lasthit'] -= 1
            if player['lasthit'] == 0 and not player['dead']:
                player['dead'] = True
                game['text'] += '☠️|' + player['name'] + ' теряет сознание.\n'
            if player['punchdead'] and not player['dead']:
                game['text'] += '☠️|' + player['name'] + ' теряет сознание.\n'
                player['dead'] = True
        for ids in game['summon_castlefight_skeles']:
            game['players'].update(ids)
        game['summon_castlefight_skeles'] = []
        for ids in game['summon_imps']:
            game['players'].update(ids)
        game['summon_imps'] = []
        if game['darkcastle_demon'] > 0:
            darkcastledemon = summon_darkcastle_demon(game)
            game['players'].update(darkcastledemon)
            game['text'] += '👁⚫️⚫️👁|Воины замка тьмы пожертвовали собой, выпустив на волю демона Тьмы с силой ('+str(game['darkcastle_demon'])+')!\n'
            game['darkcastle_demon'] = 0
        for ids in skeletons:
            game['players'].update(ids)
        for ids in treants:
            game['players'].update(ids)
        for ids in viruses:
            game['players'].update(ids)
        for ids in madskeles:
            game['players'].update(ids)
        for ids in weakskeles:
            game['players'].update(ids)
        for ids in weakghouls:
            game['players'].update(ids)
        for ids in zombierats:
            game['players'].update(ids)
        for ids in necrofighters:
            game['players'].update(ids)
        for ids in angryrhinos:
            game['players'].update(ids)
        waitbarremove = []
        for ids in game['waitbarplayers']:
            user = cwusers.find_one({'id': ids})
            game['players'].update(createplayer(uid=user['id'], name=user['name'], photo=None))
            player = game['players'][user['id']]
            player['team'] = player['id']
            set_player_battle_stats(player, user)
            set_player_bar_stats(player, user)
            waitbarremove.append(ids)
        for ids in waitbarremove:
            game['waitbarplayers'].remove(ids)
        for ids in game['players']:
            player = game['players'][ids]
            if player['necrozombie'] > 0:
                if player['getfood']:
                    player['necrozombie'] = player['maxnecrozombie']
                else:
                    game['text'] += '😱|Зомби ' + player['name'] + ' страдает от голода!\n'
                player['necrozombie'] -= 1
                if player['necrozombie'] == 0 or player['getlasthit']:
                    player['dead'] = True
                    game['text'] += '☠️|' + player['name'] + ' теряет сознание.\n'
                player['getfood'] = False
            if player['energy'] > player['maxenergy']:
                player['energy'] = player['maxenergy']
            player['demonheal'] -= 1
            if player['demonheal'] == 0:
                game['text'] += '💨|Форма демона ' + player['name'] + ' закончилась!\n'
            player['incomingdmgs'] = []
            player['outgoingdmgs'] = []
            player['molitva'] = False
        for ids in game['players']:
            player = game['players'][ids]
            if player['dead']:
                player['deadturns'] += 1
        for ids in game['players']:
            player = game['players'][ids]
            if 'dark_energy' in player['skills'] and player['dead']:
                darks = 0
                for idss in game['players']:
                    notdead = False
                    if game['players'][idss]['dark_counter'] > 0:
                        if not game['players'][idss]['dead']:
                            notdead = True
                        if game['players'][idss]['deadturns'] <= 1:
                            notdead = True
                        if notdead:
                            darks += 1
                # if darks >= 2:
                #    if not player['dead_from_scare']:
                #        player['dead'] = False
                #        player['deadturns'] = 0
                #        game['text'] += '👁⚫️⚫️👁|Темная энергия не позволяет '+player['name']+' умереть!\n'
        game[
            'freeze_energy'] -= 1  ########################################################################## FREEZE ENERGY ################################################
        if not game['castlefight'] and not game['neuralfight']:
            if game['text'] != '':
                if not game['cwbar']:
                    tries = 0
                    while True:
                        try:
                            sendm(bot, game['id'], game['text'])
                            break
                        except:
                            tries += 1
                            if tries > 100:
                                del games[game['id']]
                                return
                            time.sleep(3)
                for ids in game['players']:
                    player = game['players'][ids]
                    if player['id'] != game['id']:
                        try:
                            sendm(bot, player['id'], game['text'])
                        except:
                            pass
                for ids in game['spectators']:
                    if ids not in game['players']:
                        try:
                            for idss in game['players']:
                                xx = game['players'][idss]
                                break
                            sendm(bot, ids, '[' + xx['name'] + ']\n' + game['text'])
                        except:
                            pass
                time.sleep(1)
        else:
            if not game['neuralfight']:
                alltext = game['text'].split('\n')
                for ids in game['players']:
                    player = game['players'][ids]
                    for idss in alltext:
                        if player['name'] + ' ' in idss or player['name'] + '.' in idss or player['name'] + ',' in idss or player['name'] + '!' in idss:
                            try:
                                player['castlefighttexts'].append(idss)
                            except:
                                pass
                allcastlesbattletext[game['id']].append(game['text'])
                allcastlesbattletext[game['id']].append('Следующий ход!')


        if game['neuralfight'] and game['turn'] >= 100:
            for ids in game['players']:
                game['players'][ids]['dead'] = True
                game['failed_neural'] = True
        if not game['castlefight']: 
            teams = []
            for ids in game['players']:
                player = game['players'][ids]
                if not player['dead'] and player['team'] not in teams:
                    teams.append(player['team'])
        else:
            teams = []
            for ids in game['players']:
                player = game['players'][ids]
                if player['castlefightrole'] == 'attacker':
                    if not player['dead'] and 'attackers' not in teams: 
                        teams.append('attackers')
                elif player['castlefightrole'] == 'defer':
                    if not player['dead'] and 'defers' not in teams:
                        teams.append('defers')
        dm_end = False
        if game["dm"] and get_remain_dm_deaths(game) <= 0:
            dm_end = True
            winner_dm = None
            players_dm_score = {}
            for idss in game["players"]:
                player = game["players"][idss]
                players_dm_score[player["id"]] = {'id':player["id"], 'name':player['name'], 'score':0}
                if player["count_as_dm"]:
                    players_dm_score[player["id"]]["score"] -= player["dm_deaths"]*3
                else:
                    players_dm_score[player["id"]]["score"] = -99999999999
            maxscore = -99999999999
            topdmplayer = None
            dmtext = ""
            players_dm_score_sorted = {}

            repeats = len(players_dm_score)
            for i in range(repeats):
                tops = -999999999999
                toppl = None
                for idss in players_dm_score:
                    if players_dm_score[idss]["id"] not in players_dm_score_sorted and players_dm_score[idss]["score"] > tops:
                        toppl = idss
                players_dm_score_sorted[toppl] = players_dm_score[toppl]
            i = 0
            for idss in players_dm_score_sorted:
                scoreplayer = players_dm_score_sorted[idss]
                if i == 0:
                    dmtext += "🔥 "+scoreplayer["name"]+": "+str(scoreplayer["score"])+"⭐\n"
                    winner = scoreplayer
                else:
                    dmtext += scoreplayer["name"]+": "+str(scoreplayer["score"])+"⭐\n"
                i+=1
                if scoreplayer['score'] > maxscore:
                    topdmplayer = scoreplayer
                    maxscore = scoreplayer['score']
            winners = []
            for idss in players_dm_score:
                if players_dm_score[idss]["score"] == maxscore:
                    winners.append(players_dm_score[idss])
            sendm(bot, game["id"], dmtext)
            time.sleep(2)
            if len(winners) == 1:
                sendm(bot, game["id"], "🔥 Победил "+winners[0]["name"]+"!")
                del games[game["id"]]
                return
            else:
                text=""
                for idss in winners:
                    text += idss["name"]+", "
                text = text[:len(text)-2]
                sendm(bot, game["id"], "🔥 Победители: "+text+"!")
                del games[game["id"]]
                return
        if (len(teams) > 1 or game['cwbar']):
            if not game['castlefight'] and not game['neuralfight']:
                if game['cwduel'] or game['cwrats'] or game['cwduelrats'] or game['cwbar']:
                    for ids in game['players']:
                        player = game['players'][ids]
                        if player['controller'] != 'bot':
                            try:
                                sendm(bot, player['id'], 'Следующий ход!')
                            except:
                                pass
                else:
                    tries = 0
                    while True:
                        try:
                            sendm(bot, game['id'], 'Следующий ход!')
                            break
                        except:
                            tries += 1
                            if tries > 100: 
                                del games[game['id']]
                                return
                            time.sleep(3)
            # for ids in game['spectators']:
            #    try:
            #        sendm(bot, ids, 'Следующий ход!')
            #    except:
            #        pass
            game['text'] = ''
            humans = []
            for ids in game['players']:
                player = game['players'][ids]
                if not player['dead'] and player['controller'] == 'player':
                    humans.append(player['id'])
            if not game['castlefight'] and not game['neuralfight']:
                if len(humans) == 0:
                    time.sleep(7)
            next_turn(game, bot)
        else:
            game['was_1_turn'] = False
            try:
                if game['neuralfight']:
                    #print("demons take score: demon "+str(game['fullneuraldemon1']))
                    winner = None
                    for ids in game['players']:
                        player = game['players'][ids]
                        if player['hp'] > 0:
                            winner = player
                    if game['failed_neural']:
                        for ids in game['players']:
                            player = game['players'][ids]
                            game['demons'][player['fullneuraldemon']]['score'] -= 2
                    else:
                        if winner == None:
                            for ids in game['players']:
                                player = game['players'][ids]
                                game['demons'][player['fullneuraldemon']]['score'] += 1
                        else:
                            for ids in game['players']:
                                player = game['players'][ids]
                                if player['id'] == winner['id']:
                                    game['demons'][player['fullneuraldemon']]['score'] += 2
                                else:
                                    game['demons'][player['fullneuraldemon']]['score'] -= 2
                
                if not game['castlefight']:
                    
                    if isinstance(teams[0], int):
                        winner = game['players'][teams[0]]
                        if game['cwrats']:
                            rat = None
                            for idsss in game["players"]:
                                p2 = game["players"][idsss]
                                if p2["id"] != winner["id"]:
                                    rat = p2
                            get_player_exp_for_rathunt(winner['id'], True, hp=winner['hp'], rat = rat)
                            user = cwusers.find_one({'id': winner['id']})
                            spent_battle_items(user, winner['inventory'], winner['used_rat_toy'])
                            count_user_kills(user, winner['kills'])
                            if winner['used_rat_toy']:
                                c_rat = None
                                for idss in game['players']:
                                    target = game['players'][idss]
                                    if target['controller'] == 'bot':
                                        c_rat = target
                                        break
                                sendm(cwbot, user['id'], "Вы решили приручить побежденную крысу. Вы привели её к себе в замок, вылечили и дали игрушку-крысу. Теперь она "+\
                                                   "готова сражаться за вас.")
                                cwusers.update_one({'id':user['id']},{'$set':{'personal_rat':{'skills':c_rat['skills'], 'weaponname':c_rat['weapon'].name, 'weaponlvl':c_rat['weapon'].lvl}}})
                        if game['cwduelrats']:
                            get_player_exp_for_duel(winner['id'], True, hp=winner['hp'])
                            user = cwusers.find_one({'id': winner['id']})
                            spent_battle_items(user, winner['inventory'])
                            count_user_kills(user, winner['kills'])
                        if game['cwduel']:
                            for idsss in game['players']:
                                player = game['players'][idsss] 
                                if player['id'] == winner['id']:
                                    get_player_exp_for_duel(player['id'], True)
                                else:
                                    get_player_exp_for_duel(player['id'], False)
                                user = cwusers.find_one({'id': player['id']})
                                spent_battle_items(user, player['inventory'])
                                count_user_kills(user, player['kills'])

                    else:
                        for idsss in game['players']:
                            looser = game['players'][idsss]
                            break
                        if game['cwrats']:
                            rat = None
                            for idsss in game["players"]:
                                p2 = game["players"][idsss]
                                if p2["id"] != looser["id"]:
                                    rat = p2
                            get_player_exp_for_rathunt(looser['id'], False, rat=rat)
                            user = cwusers.find_one({'id': looser['id']})
                            spent_battle_items(user, looser['inventory'])
                            count_user_kills(user, looser['kills'])
                        if game['cwduelrats']:
                            get_player_exp_for_duel(looser['id'], False)
                            user = cwusers.find_one({'id': looser['id']})
                            spent_battle_items(user, looser['inventory'])
                            count_user_kills(user, looser['kills'])
                        bb = False
                        if teams[0] == 'rats':
                            winner = {'name': 'Крыс|🐭', 'team': 'rats', 'photo': ratphoto, 'controller': 'bot'}
                            bb = True
                        if teams[0] == 'ghoul':
                            winner = {'name': 'Вурдалаков|👹', 'team': 'ghoul', 'photo': None, 'controller': 'bot'}
                            bb = True
                        if teams[0] == 'necromant':
                            winner = {'name': 'Некроманта|🖤', 'team': 'necromant', 'photo': necromantphoto,
                                      'controller': 'bot'}
                            bb = True
                        if teams[0] == 'rhino':
                            winner = {'name': 'Носорога|🦏', 'team': 'rhino', 'photo': rhinophoto, 'controller': 'bot'}
                            bb = True
                        if teams[0] == 'virus':
                            winner = {'name': 'Вируса|🦠', 'team': 'virus', 'photo': None, 'controller': 'bot'}
                            bb = True
                        if teams[0] == 'dummys':
                            winner = {'name': 'Манекена|🎃', 'team': 'dummys', 'photo': None, 'controller': 'bot'}
                            bb = True
                        if teams[0] == 'dark':
                            winner = {'name': 'Тьмы|⚫️', 'team': 'dark', 'photo': None, 'controller': 'bot'}
                            bb = True
                        if teams[0] == 'knight':
                            winner = {'name': 'Рыцаря|⚔️', 'team': 'knight', 'photo': knight_photo, 'controller': 'bot'}
                            bb = True
                        if teams[0] == 'dragon':
                            winner = {'name': 'Дракона|🐦‍🔥', 'team': 'dragon', 'photo': None, 'controller': 'bot'}
                            bb = True
                        if teams[0] == 'hell':
                            hellphoto = None
                            if game['dungeonlvl'] == 3:
                                hellphoto = radiodemonphoto
                            winner = {'name': 'Ада|🔥', 'team': 'dark', 'photo': hellphoto, 'controller': 'bot'}
                            bb = True
                        if not bb:
                            winner = {'name': 'ботов', 'team': None, 'photo': None, 'controller': 'bot'}

                        # sendm(bot, pasyuk_id, 'Крысы победили!')
                    if game['cwrats'] or game['cwduel'] or game['cwduelrats']:
                        for ids in game['players']:
                            player = game['players'][ids]
                            if player['controller'] != 'bot':
                                try:
                                    sendm(bot, player['id'], 'Победила команда ' + winner['name'] + '!')
                                except:
                                    pass
                    else:
                        if not game['neuralfight']:
                            tries = 0
                            while True:
                                try:
                                    if winner['photo'] == None:
                                        if winner['team'] == 'dummys':
                                            sendm(bot, game['id'], 'Тестовый полигон пуст, игра окончена.')
                                        else:
                                            sendm(bot, game['id'], 'Победила команда ' + winner['name'] + '!')
                                    else:
                                        try:
                                            bot.send_photo(game['id'], winner['photo'],
                                                           caption='Победила команда ' + winner['name'] + '!')
                                        except:
                                            print(traceback.format_exc())
                                            try:
                                                sendm(bot, game['id'], 'Победила команда ' + winner['name'] + '!')
                                            except:
                                                pass
                                    break
                                except:
                                    tries += 1
                                    if tries > 100:
                                        del games[game['id']]
                                        return
                                    time.sleep(3)


                else:
                    try:
                        if len(teams) > 0:
                            winner = teams[0]
                        else:
                            winner = None
                        playerlist = {}
                        for ids in game['players']:
                            player = game['players'][ids]
                            playerlist.update({player['id']: {'id': player['id'], 'name': player['name'],
                                                              'castle': player['castle'],
                                                              'do_damage_in_hp': player['do_damage_in_hp'], \
                                                              'take_enemy_hp': player['take_enemy_hp'],
                                                              'castlefightrole': player['castlefightrole'], 'full_npc':player['full_npc']}})
                            user = cwusers.find_one({'id': player['id']}) 
                            spent_battle_items(user, player['inventory'])
                            count_user_kills(user, player['kills'])
                            # sendm(cwbot, pasyuk_id, game['id'])
                        castlefightinfo.update(
                            {game['id']: {'winner': winner, 'name': game['id'], 'score': 0, 'players': playerlist}})
                        # sendm(cwbot, pasyuk_id, game['id'])
                        for ids in game['players']:
                            player = game['players'][ids]
                            newcastlefighttexts = []
                            emoj = "🗡"
                            if player['castlefightrole'] == 'defer':
                                emoj = "🛡"
                            newcastlefighttexts.append(
                                emoj + '|Нанесено полезного урона: (' + str(player['do_damage_in_hp']) + ')\n')
                            if not player['full_npc']:
                                for ids in player['castlefighttexts']:
                                    newcastlefighttexts.append(ids)
                                player['castlefighttexts'] = newcastlefighttexts
                                try:
                                    cwusers.update_one({'id': player['id']},
                                                       {'$set': {'lastbattlelogs': player['castlefighttexts']}})
                                except:
                                    pass
                    except:
                        sendm(cwbot, pasyuk_id, traceback.format_exc())

            except:
                if game['castlefight']:
                    sendm(cwbot, pasyuk_id, game['id'] + ' bugged!')
                    sendm(cwbot, pasyuk_id, traceback.format_exc())
                winner = None
                if game['cwrats'] or game['cwduelrats']:
                    sendm(bot, game['id'], 'Все команды проиграли!')
                    for idsss in game['players']:
                        player = game['players'][idsss]
                        break
                    if game['cwduelrats']:
                        get_player_exp_for_duel(player['id'], False)
                    else:
                        rat = None
                        for idsss in game["players"]:
                            p2 = game["players"][idsss]
                            if p2["id"] != player["id"]:
                                rat = p2
                        get_player_exp_for_rathunt(player['id'], False, rat=rat)
                    user = cwusers.find_one({'id': player['id']})
                    spent_battle_items(user, player['inventory'])
                    count_user_kills(user, player['kills'])
                elif game['cwduel']:
                    for idsss in game['players']:
                        player = game['players'][idsss]
                        sendm(bot, player['id'], 'Все команды проиграли!')
                        get_player_exp_for_duel(player['id'], False)
                        user = cwusers.find_one({'id': player['id']})
                        spent_battle_items(user, player['inventory'])
                        count_user_kills(user, player['kills'])
                else:
                    if not game['neuralfight']:
                        tries = 0
                        while True:
                            try:
                                sendm(bot, game['id'], 'Все команды проиграли!')
                                break
                            except:
                                tries += 1
                                if tries > 100:
                                    del games[game['id']]
                                    return
                                time.sleep(3)
            if game['rp_fight']:
                for ids in game['players']:
                    player = game['players'][ids]
                    if player['rp_fighter']:
                        users.update_one({'id': player['id']}, {
                            '$set': {'rp_profile.hp': player['hp'], 'rp_profile.inventory': player['inventory'],
                                     'rp_profile.dmglimit': player['dmglimit'],
                                     'rp_profile.maxenergy': player['maxenergy']}})
            if winner != None and game['dungeon']:
                if winner['controller'] != 'bot':
                    try:
                        sendm(bot, pasyuk_id, 'Этаж ' + str(game['dungeonlvl']) + ' (' + game[
                            'dungeon_type'] + ') пройден (' + winner['name'] + ')!')
                    except:
                        pass
                    if game['dungeon_type'] == 'rhino':
                        if game['dungeonlvl'] < 3:
                            game['dungeonlvl'] += 1
                            game['text'] = 'Ход 1:\n'
                            game['turn'] = 1
                            game['effecttext'] = ''
                            players = []
                            for ids in game['players']:
                                player = game['players'][ids]
                                if player['controller'] != 'bot':
                                    players.append(player)
                            game['players'] = {}
                            for ids in players:
                                x = ids
                                game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo']))
                            for ids in game['players']:
                                team = game['players'][ids]['id']
                                break
                            for ids in game['players']:
                                player = game['players'][ids]
                                player['team'] = team
                            rhinoamount = 0
                            ratamount = 0
                            skeletonamount = 0
                            rats = []
                            rhinos = []
                            skeletons = []
                            if game['dungeonlvl'] == 2:
                                ratamount = len(players)
                                skeletonamount = len(players)
                            if game['dungeonlvl'] == 3:
                                ratamount = 0
                                rhinoamount = 1
                                plen = len(game['players'])
                                while plen >= 4:
                                    rhinoamount += 1 
                                    plen -= 4
                            i = 0
                            while i < ratamount:
                                rat = summon_rat(game, len(rats))
                                rats.append(rat)
                                i += 1
                            i = 0 
                            while i < rhinoamount:
                                rhino = summon_rhino(game, len(rhinos))
                                rhinos.append(rhino)
                                i += 1
                            i = 0
                            while i < skeletonamount:
                                skeleton = summon_dung_skeleton(game, skeletons)
                                skeletons.append(skeleton)
                                i += 1
                            for ids in rats:
                                game['players'].update(ids)
                            for ids in rhinos:
                                game['players'].update(ids)
                            for ids in skeletons: 
                                game['players'].update(ids)
                            try:
                                sendm(bot, game['id'], 'Этаж ' + str(
                                    game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                            except: 
                                pass
                            for ids in game['spectators']:
                                if ids not in game['players']:
                                    try:
                                        for idss in game['players']:
                                            xx = game['players'][idss]
                                            break
                                        sendm(bot, ids, '[' + xx['name'] + ']\n' + 'Этаж ' + str(
                                            game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                                    except:
                                        pass

                            threading.Timer(2, select_weapon, args=[game]).start()
                            return
                        else:
                            if game['dungeonlvl'] == 3:
                                game['dungeonlvl'] += 1
                                game['text'] = 'Ход 1:\n'
                                game['turn'] = 1
                                game['effecttext'] = ''
                                players = []
                                for ids in game['players']: 
                                    player = game['players'][ids]
                                    if player['controller'] != 'bot':
                                        players.append(player)
                                game['players'] = {}
                                for ids in players:
                                    x = ids
                                    game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo']))
                                for ids in game['players']:
                                    team = game['players'][ids]['id']
                                    break
                                for ids in game['players']:
                                    player = game['players'][ids]
                                    player['team'] = player['id'] 
                                if len(game['players']) > 1:
                                    try:
                                        sendm(bot, game['id'], 'Этаж ' + str(game[
                                                                                       'dungeonlvl'] - 1) + ' пройден! Битва за право владения духом носорога начинается. Выбирайте оружие!')
                                    except:
                                        pass
                                    for ids in game['spectators']:
                                        try:
                                            sendm(bot, ids, 'Этаж ' + str(game[
                                                                                    'dungeonlvl'] - 1) + ' пройден! Битва за право владения духом носорога начинается. Выбирайте оружие!')
                                        except:
                                            pass
                                    threading.Timer(2, select_weapon, args=[game]).start() 
                                else:
                                    for ids in game['players']:
                                        player = game['players'][ids]
                                    try:
                                        sendm(bot, pasyuk_id, player['name'] + ' получил дух носорога!')
                                    except:
                                        pass
                                    users.update_one({'id': player['id']}, {'$set': {'rhinosoul': True}})
                                    try:
                                        users.update_one({'id': player['id']}, {'$inc': {'rhino_wins': 1}})
                                    except:
                                        users.update_one({'id': player['id']}, {'$set': {'rhino_wins': 1}})
                                    sendm(bot, game['id'], player[
                                        'name'] + ' поглощает дух носорога и получает новую способность - рывок!')
                                    for ids in game['spectators']:
                                        try:
                                            sendm(bot, ids, player[
                                                'name'] + ' поглощает дух носорога и получает новую способность - рывок!') 
                                        except:
                                            pass
                                    del games[game['id']]
                                    return
                                return
                            else:
                                player = winner 
                                try:
                                    sendm(bot, pasyuk_id, player['name'] + ' получил дух носорога!')
                                except: 
                                    pass
                                users.update_one({'id': player['id']}, {'$set': {'rhinosoul': True}})
                                try:
                                    users.update_one({'id': player['id']}, {'$inc': {'rhino_wins': 1}})
                                except:
                                    users.update_one({'id': player['id']}, {'$set': {'rhino_wins': 1}})
                                sendm(bot, game['id'], player[
                                    'name'] + ' поглощает дух носорога и получает новую способность - рывок!')
                                for ids in game['spectators']:
                                    try:
                                        sendm(bot, ids, player[
                                            'name'] + ' поглощает дух носорога и получает новую способность - рывок!')
                                    except:
                                        pass
                                del games[game['id']]
                                return
                    elif game['dungeon_type'] == 'dragon':
                        if game['dungeonlvl'] < 3:
                            game['dungeonlvl'] += 1
                            game['text'] = 'Ход 1:\n'
                            game['turn'] = 1
                            game['effecttext'] = ''
                            players = []
                            for ids in game['players']:
                                player = game['players'][ids]
                                if player['controller'] != 'bot':
                                    players.append(player)
                            game['players'] = {}
                            for ids in players:
                                x = ids
                                game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo']))
                            for ids in game['players']:
                                team = game['players'][ids]['id']
                                break
                            for ids in game['players']:
                                player = game['players'][ids]
                                player['team'] = team
                            dragonamount = 0
                            knightamount = 0
                            dragons = []
                            knights = []
                            if game['dungeonlvl'] == 2:
                                dragonamount = len(players)
                            if game['dungeonlvl'] == 3:
                                knightamount = len(players)
                            i = 0
                            while i < dragonamount:
                                dragon = summon_dragon(game, len(dragons))
                                dragons.append(dragon)
                                i += 1
                            i = 0 
                            while i < knightamount:
                                knight = summon_knight(game, len(knights))
                                knights.append(knight)
                                i += 1
                            i = 0
                            for ids in knights:
                                game['players'].update(ids)
                            for ids in dragons:
                                game['players'].update(ids)
                            try:
                                sendm(bot, game['id'], 'Этаж ' + str(
                                    game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                            except: 
                                pass
                            for ids in game['spectators']:
                                if ids not in game['players']:
                                    try:
                                        for idss in game['players']:
                                            xx = game['players'][idss]
                                            break
                                        sendm(bot, ids, '[' + xx['name'] + ']\n' + 'Этаж ' + str(
                                            game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                                    except:
                                        pass

                            threading.Timer(2, select_weapon, args=[game]).start()
                            return
                        else:
                            if game['dungeonlvl'] == 3:
                                game['dungeonlvl'] += 1
                                game['text'] = 'Ход 1:\n'
                                game['turn'] = 1
                                game['effecttext'] = ''
                                players = []
                                for ids in game['players']: 
                                    player = game['players'][ids]
                                    if player['controller'] != 'bot':
                                        players.append(player)
                                game['players'] = {}
                                for ids in players:
                                    x = ids
                                    game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo']))
                                for ids in game['players']:
                                    team = game['players'][ids]['id']
                                    break
                                for ids in game['players']:
                                    player = game['players'][ids]
                                    player['team'] = player['id'] 
                                if len(game['players']) > 1:
                                    try:
                                        sendm(bot, game['id'], 'Этаж ' + str(game[
                                                                                       'dungeonlvl'] - 1) + ' пройден! Битва за награду начинается. Выбирайте оружие!')
                                    except:
                                        pass
                                    for ids in game['spectators']:
                                        try:
                                            sendm(bot, ids, 'Этаж ' + str(game[
                                                                                    'dungeonlvl'] - 1) + ' пройден! Битва за награду начинается. Выбирайте оружие!')
                                        except:
                                            pass
                                    threading.Timer(2, select_weapon, args=[game]).start() 
                                else:
                                    for ids in game['players']:
                                        player = game['players'][ids]
                                    try:
                                        sendm(bot, pasyuk_id, player['name'] + ' получил награду за данж дракона!')
                                    except:
                                        pass

                                    users.update_one({'id': player['id']}, {'$set': {'dragon_reward': True}})
                                    try:
                                        users.update_one({'id': player['id']}, {'$inc': {'dragon_wins': 1}})
                                    except:
                                        users.update_one({'id': player['id']}, {'$set': {'dragon_wins': 1}})
                                    sendm(bot, game['id'],
                                          '💬Рыцарь: Ты... Победил меня. Но не убил. Сила дракона не позволит мне погибнуть так просто...')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          '💬Рыцарь: Раз ты смог придти в мой замок, пройти через мини-носорога и победить меня и в облике дракона, и в облике рыцаря, ты достоин получить частицу моей силы.')
                                    time.sleep(5)
                                    sendm(bot, game['id'],
                                          'Он поднимается с земли, превращаясь обратно в дракона.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          'Он открывает пасть, и создаёт нечто вроде огненного шара, но светящееся жёлтым и не испускающее жара.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          'Спустя секунду это нечто врезается в вас, но вы не ощущаете удара.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          'Оно растворяется у вас в груди, распространяя тепло по всему телу.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          '💬Рыцарь: ты сам поймёшь, как использовать это.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          'Взмахнув крыльями, он улетает на одну из башен своего замка, после чего вы теряете его из поля зрения.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          'Пытаясь высвободить новообретенные способности, вы позволяете силе внутри вас получить контроль над вашим телом.')
                                    time.sleep(4)
                                    sendm(bot, game['id'],
                                          'Вы увеличиваетесь в размерах, обрастаете чешуей и обретаете крылья.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          'Вы попробовали взмахнуть крыльями - и ближайшая горсть камней, оставшаяся после вашего сражения, улетела в неизвестном направлении.')
                                    time.sleep(4)
                                    sendm(bot, game['id'],
                                          'Попытка создать огненный шар... Открыв пасть, вы создаёте его, и понимаете, что можете направить его куда захотите.')
                                    time.sleep(4)
                                    sendm(bot, game['id'],
                                          'В знак уважения к рыцарю, вы решаете не испытывать огненный шар внутри его замка.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          'Вы силой мысли дематериализуете шар и превращаетесь обратно в человека, ощущая слабость после таких трансформаций.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                          'Обретая обычную форму, вы покидаете это место.')
                                    time.sleep(1)
                                    sendm(bot, game['id'],
                                          player["name"]+' получает способность: Сила дракона!')
                                    del games[game['id']]
                                    return
                                return
                            else:
                                player = winner 
                                try:
                                    sendm(bot, pasyuk_id, player['name'] + ' победил рыцаря!')
                                except: 
                                    pass
                                users.update_one({'id': player['id']}, {'$set': {'dragon_reward': True}})
                                try:
                                    users.update_one({'id': player['id']}, {'$inc': {'dragon_wins': 1}})
                                except:
                                    users.update_one({'id': player['id']}, {'$set': {'dragon_wins': 1}})
                                sendm(bot, game['id'],
                                      '💬Рыцарь: Ты... Победил меня. Но не убил. Сила дракона не позволит мне погибнуть так просто...')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      '💬Рыцарь: Раз ты смог придти в мой замок, пройти через мини-носорога и победить меня и в облике дракона, и в облике рыцаря, ты достоин получить частицу моей силы.')
                                time.sleep(5)
                                sendm(bot, game['id'],
                                      'Он поднимается с земли, превращаясь обратно в дракона.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      'Он открывает пасть, и создаёт нечто вроде огненного шара, но светящееся жёлтым и не испускающее жара.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      'Спустя секунду это нечто врезается в вас, но вы не ощущаете удара.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      'Оно растворяется у вас в груди, распространяя тепло по всему телу.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      '💬Рыцарь: ты сам поймёшь, как использовать это.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      'Взмахнув крыльями, он улетает на одну из башен своего замка, после чего вы теряете его из поля зрения.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      'Пытаясь высвободить новообретенные способности, вы позволяете силе внутри вас получить контроль над вашим телом.')
                                time.sleep(4)
                                sendm(bot, game['id'],
                                      'Вы увеличиваетесь в размерах, обрастаете чешуей и обретаете крылья.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      'Вы попробовали взмахнуть крыльями - и ближайшая горсть камней, оставшаяся после вашего сражения, улетела в неизвестном направлении.')
                                time.sleep(4)
                                sendm(bot, game['id'],
                                      'Попытка создать огненный шар... Открыв пасть, вы создаёте его, и понимаете, что можете направить его куда захотите.')
                                time.sleep(4)
                                sendm(bot, game['id'],
                                      'В знак уважения к рыцарю, вы решаете не испытывать огненный шар внутри его замка.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      'Вы силой мысли дематериализуете шар и превращаетесь обратно в человека, ощущая слабость после таких трансформаций.')
                                time.sleep(3)
                                sendm(bot, game['id'],
                                      'Обретая обычную форму, вы покидаете это место.')
                                time.sleep(1)
                                sendm(bot, game['id'],
                                      player["name"]+' получает способность: Сила дракона!')

                                del games[game['id']]
                                return
                    elif game['dungeon_type'] == 'dark':
                        if game['dungeonlvl'] < 3:
                            game['dungeonlvl'] += 1
                            game['text'] = 'Ход 1:\n'
                            game['turn'] = 1 
                            game['effecttext'] = ''
                            players = []
                            for ids in game['players']:
                                player = game['players'][ids]
                                if player['controller'] != 'bot':
                                    players.append(player)
                            game['players'] = {}
                            for ids in players:
                                x = ids
                                game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo']))
                            for ids in game['players']:
                                team = game['players'][ids]['id']
                                break 
                            for ids in game['players']:
                                player = game['players'][ids]
                                player['team'] = team
                            darknessamount = 0
                            darkratamount = 0
                            amalgamaamount = 0
                            darkrats = []
                            darknesss = []
                            amalgamas = []
                            if game['dungeonlvl'] == 2:
                                amalgamaamount = len(players)
                            if game['dungeonlvl'] == 3:
                                darkratamount = 0
                                darknessamount = 1
                                # plen = len(game['players'])
                                # while plen >= 4:
                                #    darknessamount += 1
                                #    plen -= 4
                            i = 0
                            while i < darkratamount:
                                darkrat = summon_darkrat(game, len(darkrats))
                                darkrats.append(darkrat)
                                i += 1
                            i = 0
                            while i < darknessamount:
                                darkness = summon_darkness(game, len(darknesss))
                                darknesss.append(darkness)
                                i += 1
                            i = 0
                            while i < amalgamaamount:
                                amalgama = summon_amalgama(game, amalgamas)
                                amalgamas.append(amalgama)
                                i += 1
                            for ids in darkrats:
                                game['players'].update(ids)
                            for ids in darknesss:
                                game['players'].update(ids)
                            for ids in amalgamas:
                                game['players'].update(ids)
                            try:
                                sendm(bot, game['id'], 'Этаж ' + str(
                                    game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                            except:
                                pass
                            for ids in game['spectators']:
                                try:
                                    sendm(bot, ids, 'Этаж ' + str(
                                        game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                                except:
                                    pass

                            threading.Timer(2, select_weapon, args=[game]).start()
                            return
                        else:
                            if game['dungeonlvl'] == 3:
                                game['dungeonlvl'] += 1
                                game['text'] = 'Ход 1:\n'
                                game['turn'] = 1
                                game['effecttext'] = ''
                                players = []
                                for ids in game['players']:
                                    player = game['players'][ids]
                                    if player['controller'] != 'bot':
                                        players.append(player)
                                game['players'] = {}
                                for ids in players:
                                    x = ids
                                    game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo']))
                                for ids in game['players']:
                                    team = game['players'][ids]['id']
                                    break
                                for ids in game['players']:
                                    player = game['players'][ids]
                                    player['team'] = player['id']
                                if len(game['players']) > 1:
                                    try:
                                        sendm(bot, game['id'], 'Этаж ' + str(
                                            game['dungeonlvl'] - 1) + ' пройден! Битва за право владения ' +
                                                         'наградой данжа тьмы начинается. Выбирайте оружие!')
                                    except:
                                        pass 
                                    for ids in game['spectators']:
                                        try: 
                                            sendm(bot, ids, 'Этаж ' + str(
                                                game['dungeonlvl'] - 1) + ' пройден! Битва за право владения ' +
                                                             'наградой данжа тьмы начинается. Выбирайте оружие!')
                                        except:
                                            pass
                                    threading.Timer(2, select_weapon, args=[game]).start()
                                else:
                                    for ids in game['players']:
                                        player = game['players'][ids]
                                    try:
                                        sendm(bot, pasyuk_id, player['name'] + ' получает награду данжа тьмы!')
                                    except:
                                        pass
                                    users.update_one({'id': player['id']}, {'$set': {'dark_reward': True}})
                                    try:
                                        users.update_one({'id': player['id']}, {'$inc': {'darkness_wins': 1}})
                                    except:
                                        users.update_one({'id': player['id']}, {'$set': {'darkness_wins': 1}})
                                    for ids in game['spectators']:
                                        try:
                                            sendm(bot, ids, player['name'] + ' получает награду данжа тьмы!')
                                        except:
                                            pass
                                    sendm(bot, game['id'],
                                                     'Сразу после того, как вы спрятались за дверью, она исчезла. Просто растворилась в воздухе. Вы ' +
                                                     'заглянули в комнату, из которой вышли, и не обнаружили абсолютно ничего. Бесконечная ' +
                                                     'тьма, без единого намека на материальные объекты.')
                                    time.sleep(6)
                                    sendm(bot, game['id'],
                                                     'Видимо, взрыв этого существа уничтожил все физическое, что находилось в комнате.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                                     '💬' + player[
                                                         'name'] + ': Хорошо, что мысль спрятаться за дверью пришла мне раньше, чем оно решило взорваться.')
                                    time.sleep(4)
                                    sendm(bot, game['id'],
                                                     'Покидая подземелье, вы испытываете странное ощущение, как будто темная энергия все еще ' +
                                                     'находится внутри вас.')
                                    time.sleep(4)
                                    sendm(bot, game['id'],
                                                     'Повинуясь этому чувству, вы направили руку в сторону голубя, пролетавшего над вами. ' +
                                                     'Стремительный поток темного тумана вырвался из вашей ладони и направился в сторону птицы.')
                                    time.sleep(4)
                                    sendm(bot, game['id'],
                                                     'Как только он достиг цели - та упала на землю заметрво.')
                                    time.sleep(2)
                                    sendm(bot, game['id'], '💬' + player[
                                        'name'] + ': Не я контролировал это желание... Надо быть аккуратнее с этой энергией.')
                                    time.sleep(2)
                                    sendm(bot, game['id'], 'Получена способность: *Энергия тьмы*!',
                                                     parse_mode='markdown')
                                    del games[game['id']]
                                    return
                                return
                            else:
                                player = winner 
                                try:
                                    sendm(bot, pasyuk_id, player['name'] + ' получил энергию тьмы!')
                                except: 
                                    pass
                                users.update_one({'id': player['id']}, {'$set': {'dark_reward': True}})
                                try:
                                    users.update_one({'id': player['id']}, {'$inc': {'darkness_wins': 1}})
                                except:
                                    users.update_one({'id': player['id']}, {'$set': {'darkness_wins': 1}})
                                sendm(bot, game['id'], player[
                                    'name'] + ' получает награду данжа тьмы!')
                                for ids in game['spectators']:
                                    try:
                                        sendm(bot, ids, player[
                                            'name'] + ' получает награду данжа тьмы!')
                                    except:
                                        pass
                                del games[game['id']]
                                return
                    elif game['dungeon_type'] == 'ghoul':
                        if game['dungeonlvl'] < 3:
                            game['dungeonlvl'] += 1
                            game['text'] = 'Ход 1:\n'
                            game['turn'] = 1
                            game['effecttext'] = ''
                            players = []
                            for ids in game['players']:
                                player = game['players'][ids]
                                if player['controller'] != 'bot':
                                    players.append(player)
                            game['players'] = {}
                            for ids in players:
                                x = ids
                                game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo']))
                            for ids in game['players']:
                                team = game['players'][ids]['id']
                                break
                            for ids in game['players']:
                                player = game['players'][ids]
                                player['team'] = team
                            ghoulamount = 0
                            necromantamount = 0
                            weakskeleamount = 0
                            ghouls = []
                            necromants = []
                            weakskeles = []
                            if game['dungeonlvl'] == 2:
                                ghoulamount = len(players)
                                weakskeleamount = len(players)
                            if game['dungeonlvl'] == 3:
                                necromantamount = 1
                                # plen = len(game['players'])
                                # while plen >= 4:
                                #    necromantamount += 1
                                #    plen -= 4
                            i = 0
                            while i < ghoulamount:
                                ghoul = summon_ghoul(game, len(ghouls))
                                ghouls.append(ghoul)
                                i += 1
                            i = 0
                            while i < necromantamount:
                                necromant = summon_necromant(game, len(necromants))
                                necromants.append(necromant)
                                i += 1
                            i = 0
                            while i < weakskeleamount:
                                weakskele = summon_weakskele(game, len(weakskeles),
                                                             weakskeletype='afraid_of_loneliness')
                                weakskeles.append(weakskele)
                                i += 1
                            for ids in weakskeles:
                                game['players'].update(ids)
                            for ids in ghouls:
                                game['players'].update(ids)
                            for ids in necromants:
                                game['players'].update(ids)
                            try:
                                sendm(bot, game['id'], 'Этаж ' + str(
                                    game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                            except:
                                pass
                            for ids in game['spectators']:
                                try:
                                    sendm(bot, ids, 'Этаж ' + str(
                                        game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                                except:
                                    pass

                            threading.Timer(2, select_weapon, args=[game]).start()
                            return
                        else:
                            if game['dungeonlvl'] == 3:
                                game['dungeonlvl'] += 1
                                game['text'] = 'Ход 1:\n'
                                game['turn'] = 1
                                game['effecttext'] = ''
                                players = []
                                for ids in game['players']:
                                    player = game['players'][ids]
                                    if player['controller'] != 'bot':
                                        players.append(player)
                                game['players'] = {}
                                for ids in players:
                                    x = ids
                                    game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo']))
                                for ids in game['players']:
                                    team = game['players'][ids]['id']
                                    break
                                for ids in game['players']:
                                    player = game['players'][ids]
                                    player['team'] = player['id']
                                if len(game['players']) > 1:
                                    try:
                                        sendm(bot, game['id'], 'Этаж ' + str(
                                            game['dungeonlvl'] - 1) + ' пройден! Битва за право владения ' +
                                                         'посохом некроманта начинается. Выбирайте оружие!')
                                    except:
                                        pass
                                    for ids in game['spectators']:
                                        try:
                                            sendm(bot, ids, 'Этаж ' + str(
                                                game['dungeonlvl'] - 1) + ' пройден! Битва за право владения ' +
                                                             'посохом некроманта начинается. Выбирайте оружие!')
                                        except:
                                            pass
                                    threading.Timer(2, select_weapon, args=[game]).start()
                                else:
                                    for ids in game['players']:
                                        player = game['players'][ids]
                                    try:
                                        sendm(bot, pasyuk_id, player['name'] + ' получает посох некроманта!')
                                    except:
                                        pass
                                    users.update_one({'id': player['id']}, {'$set': {'staff_of_necromant': True}})
                                    try:
                                        users.update_one({'id': player['id']}, {'$inc': {'necromant_wins': 1}})
                                    except:
                                        users.update_one({'id': player['id']}, {'$set': {'necromant_wins': 1}})
                                    for ids in game['spectators']:
                                        try:
                                            sendm(bot, ids, player['name'] + ' получает посох некроманта!')
                                        except:
                                            pass
                                    sendm(bot, game['id'],
                                                     'После того, как вы нанесли последний удар по некроманту, его тело тут же ' +
                                                     'превратилось в прах. Остался лишь посох с таинственным черепом на конце. ' +
                                                     'Вы решаете взять его в руки...')
                                    time.sleep(6)
                                    sendm(bot, game['id'],
                                                     'Вы ждете одну секунду. Пять. Десять. Кажется, посох не собирается убивать вас. Вдруг его глазницы ' +
                                                     'загорелись черным светом, как тогда, когда некромант пытался призвать гигантских скелетов.')
                                    time.sleep(4)
                                    if game['dead_skeletons'] == 0:
                                        sendm(bot, game['id'],
                                                         'Вы ощущаете странную силу. Делаете взмах посохом - и вокруг вас образуется полупрозрачный барьер.' +
                                                         ' Спустя несколько секунд из арки, являющейся входом в этот зал, показывается дряхлый скелет, которого вы ' +
                                                         'решили не убивать.')
                                        time.sleep(5)
                                        sendm(bot, game['id'],
                                                         '💬Дряхлый скелет|🦴: Повели-и-и-итель! Прика-а-а-азывайте!')
                                        time.sleep(3)
                                        sendm(bot, game['id'],
                                                         'Сила, которую вы ощутили - сила повелевать мёртвыми. Вместе с этим вы теперь можете понимать, ' +
                                                         'о чем они говорят. И первый ваш приказ был...')
                                        time.sleep(4)
                                        sendm(bot, game['id'], '💬' + player['name'] + ': ' + player[
                                            'name'] + ' повелевает - ты свободен!')
                                        time.sleep(3) 
                                        sendm(bot, game['id'], '💬Дряхлый скелет|🦴: Спаси-и-и-ибо...')
                                        time.sleep(3)
                                        sendm(bot, game['id'],
                                                         'После чего дряхлый скелет рассыпался, превратившись в обычную груду костей. Ещё в первом бою ' +
                                                         'вы поняли, что этому скелету даже загробная жизнь надоела.')
                                        time.sleep(4)
                                        sendm(bot, game['id'],
                                                         'Когда скелетом был исполнен приказ, магическая оболочка вокруг вас исчезла, и вы ощутили ' +
                                                         'резкий упадок сил.')
                                        time.sleep(3)
                                        sendm(bot, game['id'], '💬' + player[
                                            'name'] + ': Долгая же будет перезарядка у этой штуковины...')
                                        time.sleep(3)
                                        sendm(bot, game['id'], 'Получено оружие: *Посох некроманта*!',
                                                         parse_mode='markdown')
                                    else:
                                        sendm(bot, game['id'],
                                                         'Вы ощущаете странную силу. Делаете взмах посохом - и вокруг вас образуется полупрозрачный барьер.' +
                                                         ' Спустя несколько секунд из-под земли выкапывается скелет.')
                                        time.sleep(4)
                                        sendm(bot, game['id'],
                                                         '💬Скелет|💀: Повели-и-и-итель! Прика-а-а-азывайте!')
                                        time.sleep(3)
                                        sendm(bot, game['id'],
                                                         'Сила, которую вы ощутили - сила повелевать мёртвыми. Вместе с этим вы теперь можете понимать, ' +
                                                         'о чем они говорят.')
                                        time.sleep(4)
                                        sendm(bot, game['id'], '💬' + player['name'] + ': ' + player[
                                            'name'] + ' повелевает - вернись в землю!')
                                        time.sleep(2)
                                        sendm(bot, game['id'], '💬Скелет|💀: Ка-а-ак прика-а-а-ажете!')
                                        time.sleep(2)
                                        sendm(bot, game['id'], 'После чего скелет закопался обратно в землю.')
                                        time.sleep(2)
                                        sendm(bot, game['id'],
                                                         'Когда скелетом был исполнен приказ, магическая оболочка вокруг вас исчезла, и вы ощутили ' +
                                                         'резкий упадок сил.')
                                        time.sleep(3)
                                        sendm(bot, game['id'], '💬' + player[
                                            'name'] + ': Долгая же будет перезарядка у этой штуковины...')
                                        time.sleep(3)
                                        sendm(bot, game['id'], 'Получено оружие: *Посох некроманта*!',
                                                         parse_mode='markdown')

                                    del games[game['id']]
                                    return
                                return
                            else:
                                player = winner
                                try:
                                    sendm(bot, pasyuk_id, player['name'] + ' получает посох некроманта!')
                                except:
                                    pass
                                users.update_one({'id': player['id']}, {'$set': {'staff_of_necromant': True}})
                                try:
                                    users.update_one({'id': player['id']}, {'$inc': {'necromant_wins': 1}})
                                except:
                                    users.update_one({'id': player['id']}, {'$set': {'necromant_wins': 1}})
                                for ids in game['spectators']:
                                    try:
                                        sendm(bot, ids, player['name'] + ' получает посох некроманта!')
                                    except:
                                        pass

                                sendm(bot, game['id'],
                                                 'После того, как вы нанесли последний удар по некроманту, его тело тут же ' +
                                                 'превратилось в прах. Остался лишь посох с таинственным черепом на конце. ' +
                                                 'Вы решаете взять его в руки...')
                                time.sleep(6)
                                sendm(bot, game['id'],
                                                 'Вы ждете одну секунду. Пять. Десять. Кажется, посох не собирается убивать вас. Вдруг его глазницы ' +
                                                 'загорелись черным светом, как тогда, когда некромант пытался призвать гигантских скелетов.')
                                time.sleep(4)
                                if game['dead_skeletons'] == 0:
                                    sendm(bot, game['id'],
                                                     'Вы ощущаете странную силу. Делаете взмах посохом - и вокруг вас образуется полупрозрачный барьер.' +
                                                     ' Спустя несколько секунд из арки, являющейся входом в этот зал, показывается дряхлый скелет, которого вы ' +
                                                     'решили не убивать.')
                                    time.sleep(5)
                                    sendm(bot, game['id'],
                                                     '💬Дряхлый скелет|🦴: Повели-и-и-итель! Прика-а-а-азывайте!')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                                     'Сила, которую вы ощутили - сила повелевать мёртвыми. Вместе с этим вы теперь можете понимать, ' +
                                                     'о чем они говорят. И первый ваш приказ был...')
                                    time.sleep(4)
                                    sendm(bot, game['id'], '💬' + player['name'] + ': ' + player[
                                        'name'] + ' повелевает - ты свободен!')
                                    time.sleep(3)
                                    sendm(bot, game['id'], '💬Дряхлый скелет|🦴: Спаси-и-и-ибо...')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                                     'После чего дряхлый скелет рассыпался, превратившись в обычную груду костей. Ещё в первом бою ' +
                                                     'вы поняли, что этому скелету даже загробная жизнь надоела.')
                                    time.sleep(4)
                                    sendm(bot, game['id'],
                                                     'Когда скелетом был исполнен приказ, магическая оболочка вокруг вас исчезла, и вы ощутили ' +
                                                     'резкий упадок сил.')
                                    time.sleep(3)
                                    sendm(bot, game['id'], '💬' + player[
                                        'name'] + ': Долгая же будет перезарядка у этой штуковины...')
                                    time.sleep(3)
                                    sendm(bot, game['id'], 'Получено оружие: *Посох некроманта*!',
                                                     parse_mode='markdown')
                                else:
                                    sendm(bot, game['id'],
                                                     'Вы ощущаете странную силу. Делаете взмах посохом - и вокруг вас образуется полупрозрачный барьер.' +
                                                     ' Спустя несколько секунд из-под земли выкапывается скелет.')
                                    time.sleep(4)
                                    sendm(bot, game['id'], '💬Скелет|💀: Повели-и-и-итель! Прика-а-а-азывайте!')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                                     'Сила, которую вы ощутили - сила повелевать мёртвыми. Вместе с этим вы теперь можете понимать, ' +
                                                     'о чем они говорят.')
                                    time.sleep(4)
                                    sendm(bot, game['id'], '💬' + player['name'] + ': ' + player[
                                        'name'] + ' повелевает - вернись в землю!')
                                    time.sleep(2) 
                                    sendm(bot, game['id'], '💬Скелет|💀: Ка-а-ак прика-а-а-ажете!')
                                    time.sleep(2)
                                    sendm(bot, game['id'], 'После чего скелет закопался обратно в землю.')
                                    time.sleep(2)
                                    sendm(bot, game['id'],
                                                     'Когда скелетом был исполнен приказ, магическая оболочка вокруг вас исчезла, и вы ощутили ' +
                                                     'резкий упадок сил.')
                                    time.sleep(3)
                                    sendm(bot, game['id'], '💬' + player[
                                        'name'] + ': Долгая же будет перезарядка у этой штуковины...')
                                    time.sleep(3)
                                    sendm(bot, game['id'], 'Получено оружие: *Посох некроманта*!',
                                                     parse_mode='markdown')
                                try:
                                    game['timer'].cancel()
                                except:
                                    pass
                                idstoremove = []
                                for ids in game['alltimers']:
                                    try:
                                        ids.cancel()
                                        # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
                                        idstoremove.append(ids)
                                    except:
                                        pass
                                for ids in idstoremove:
                                    game['alltimers'].remove(ids)
                                del games[game['id']]
                                return

                    elif game['dungeon_type'] == 'hell':
                        if game['dungeonlvl'] < 3:
                            game['dungeonlvl'] += 1
                            game['text'] = 'Ход 1:\n'
                            game['turn'] = 1
                            game['effecttext'] = ''
                            players = []
                            for ids in game['players']:
                                player = game['players'][ids]
                                if player['controller'] != 'bot':
                                    players.append(player)
                            game['players'] = {}
                            for ids in players:
                                x = ids
                                game['players'].update(createplayer(uid=x['id'], name=x['name'], photo=x['photo'], completed_hell=x['completed_hell']))
                            for ids in game['players']:
                                team = game['players'][ids]['id']
                                break
                            for ids in game['players']:
                                player = game['players'][ids]
                                player['team'] = team
                            eyedemonamount = 0
                            radiodemonamount = 0
                            magmawormamount = 0
                            eyedemons = []
                            radiodemons = []
                            magmaworms = []

                            playervalue = len(players)
                            if game['dungeonlvl'] == 2:
                                magmawormamount = len(players)
                                eyedemonamount = len(players)
                            if game['dungeonlvl'] == 3:
                                radiodemonamount = 1
                                # plen = len(game['players'])
                                # while plen >= 4:
                                #    necromantamount += 1
                                #    plen -= 4
                            i = 0
                            while i < eyedemonamount:
                                eyedemon = summon_eyedemon(game, len(eyedemons), hp = 4)
                                eyedemons.append(eyedemon)
                                i += 1
                            i = 0
                            while i < magmawormamount:
                                magmaworm = summon_magmaworm(game, len(magmaworms))
                                magmaworms.append(magmaworm)
                                i += 1
                            i = 0
                            while i < radiodemonamount:
                                radiodemon = summon_radiodemon(game)
                                radiodemons.append(radiodemon)
                                i += 1
                            i = 0

                            for ids in radiodemons:
                                game['players'].update(ids)
                            for ids in magmaworms:
                                game['players'].update(ids)
                            for ids in eyedemons:
                                game['players'].update(ids)
                            try:
                                sendm(bot, game['id'], 'Этаж ' + str(
                                    game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                            except:
                                pass
                            for ids in game['spectators']:
                                try:
                                    sendm(bot, ids, 'Этаж ' + str(
                                        game['dungeonlvl'] - 1) + ' пройден! Вы спускаетесь ниже. Выбирайте оружие!')
                                except:
                                    pass

                            threading.Timer(2, select_weapon, args=[game]).start()
                            return
                        else:
                            if game['dungeonlvl'] == 3:
                                if True:
                                    for ids in game['players']:
                                        player = game['players'][ids]
                                        try:
                                            sendm(bot, pasyuk_id, player['name'] + ' получает сокровище ада!')
                                        except:
                                            pass
                                        try:
                                            users.update_one({'id': player['id']}, {'$inc': {'hell_wins': 1}})
                                        except:
                                            users.update_one({'id': player['id']}, {'$set': {'hell_wins': 1}})
                                        users.update_one({'id': player['id']}, {'$set': {'hell_reward': True}})
                                        for ids in game['spectators']:
                                            try:
                                                sendm(bot, ids, player['name'] + ' получает сокровище ада!')
                                            except:
                                                pass
                                    sendm(bot, game['id'], 'Внезапно упавший на землю Аластор поднимается как ни в чем не бывало.')
                                    time.sleep(5)
                                    sendm(bot, game['id'],
                                                     '💬Аластор|❤️‍🔥: Думали, я умер? Мы в аду, я УЖЕ МЁРТВ!')
                                    time.sleep(2)
                                    sendm(bot, game['id'],
                                                     'Он засмеялся.')
                                    time.sleep(2)
                                    sendm(bot, game['id'],
                                                     '💬Аластор|❤️‍🔥: Однако, вам удалось меня развлечь! Сделаю вид, что проиграл, и оставлю вам вот эту штуку.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                                     'Спустя мгновенье после своих слов он превратился в тень и ушел под землю.')
                                    time.sleep(3)
                                    sendm(bot, game['id'],
                                                         '...')
                                    time.sleep(4)
                                    sendm(bot, game['id'], 'Получена способность: щупальца ада!',
                                                         parse_mode='markdown')


                                    del games[game['id']]
                                    return
                                return

            if not game['castlefight'] and not game['cwrats'] and not game['cwduel'] and not game['cwduelrats'] and not game['neuralfight']:
                if game['teamplay'] and game['playersamount'] > 2:
                    stats = teamstats
                if game['playersamount'] == 2:
                    stats = duelstats
                if game['playersamount'] > 2 and not game['teamplay']:
                    stats = massbattlestats
                s = stats.find_one({})
                if game['pureduel_rats']:
                    for ids in game['players']:
                        player = game['players'][ids]
                        if player['controller'] == 'bot':
                            rat = player
                        else:
                            target = player
                    ratdemons.update_one({'id':target['id']},{'$set':{'demons':rat['rat_demons']}})
                if winner != None:
                    for ids in game['players']:
                        player = game['players'][ids]
                        if game['rats']:
                            if game['playersamount'] == 2:
                                if player['controller'] == 'bot':
                                    if player['team'] == winner['team']:
                                        rats.update_one({}, {'$inc': {'wins': 1, 'games': 1}})
                                        rats.update_one({}, {'$inc': {'diff' + str(game['rat_difficulty']) + '.wins': 1,
                                                                      'diff' + str(
                                                                          game['rat_difficulty']) + '.games': 1}})
                                    else:
                                        rats.update_one({}, {'$inc': {'games': 1}})
                                        rats.update_one({},
                                                        {'$inc': {'diff' + str(game['rat_difficulty']) + '.games': 1}})
                                else:
                                    user = users.find_one({'id': player['id']})
                                    try:
                                        user['ratstats']
                                    except:
                                        users.update_one({'id': user['id']},
                                                         {'$set': {'ratstats': {'diff1': {'games': 0, 'wins': 0},
                                                                                'diff2': {'games': 0, 'wins': 0},
                                                                                'diff3': {'games': 0, 'wins': 0}}}})
                                    if player['team'] == winner['team']:
                                        users.update_one({'id': player['id']}, {
                                            '$inc': {'ratstats.diff' + str(game['rat_difficulty']) + '.wins': 1,
                                                     'ratstats.diff' + str(game['rat_difficulty']) + '.games': 1}})
                                    else:
                                        users.update_one({'id': player['id']}, {
                                            '$inc': {'ratstats.diff' + str(game['rat_difficulty']) + '.games': 1}})
                            break
                        if game['bossfight']:
                            break
                        if game['dungeon']:
                            break
                        if game['testequipgame']:
                            break
                        if game['testequipgame_tournier']:
                            break
                        if game['pureduel_rats']:
                            break
                        if game['classic_game']:
                            break
                        if player['controller'] == 'bot':
                            continue
                        if player['droppedweapon'] != None:
                            player['weapon'] = player['droppedweapon']
                        user = users.find_one({'id': player['id']})
                        if user == None:
                            users.insert_one(createuser(player))
                            user = users.find_one({'id': player['id']})
                        try:
                            user['duels']
                        except:
                            users.update_one({'id': user['id']}, {'$set': {'duels': {'games': 0, 'wins': 0}}})
                        try:
                            user['teams']
                        except:
                            users.update_one({'id': user['id']}, {'$set': {'teams': {'games': 0, 'wins': 0}}})
                        try:
                            user['massbattles']
                        except:
                            users.update_one({'id': user['id']}, {'$set': {'massbattles': {'games': 0, 'wins': 0}}})
                        try:
                            user['pureduels']
                        except:
                            users.update_one({'id': user['id']}, {'$set': {'pureduels': {'games': 0, 'wins': 0}}})
                        if player['team'] == winner['team']:
                            users.update_one({'id': user['id']}, {'$inc': {'wins': 1}})
                            if stats == duelstats:
                                users.update_one({'id': user['id']}, {'$inc': {'duels.wins': 1}})
                            if stats == teamstats:
                                users.update_one({'id': user['id']}, {'$inc': {'teams.wins': 1}})
                            if stats == massbattlestats:
                                users.update_one({'id': user['id']}, {'$inc': {'massbattles.wins': 1}})
                            if game['pureduel'] and game['playersamount'] == 2:
                                users.update_one({'id': user['id']}, {'$inc': {'pureduels.wins': 1}})
                            if game['turn'] > 3:
                                for idss in player['skills']:
                                    if idss not in s['skills']:
                                        stats.update_one({}, {'$set': {
                                            'skills.' + idss: {'name': idss, 'wins': 0, 'games': 0, 'ties': 0}}})
                                    stats.update_one({}, {
                                        '$inc': {'skills.' + idss + '.wins': 1, 'skills.' + idss + '.games': 1}})

                                if player['weapon'].name not in s['weapons']:
                                    stats.update_one({}, {'$set': {
                                        'weapons.' + player['weapon'].name: {'name': player['weapon'].name, 'wins': 0,
                                                                             'games': 0, 'ties': 0}}})
                                stats.update_one({}, {'$inc': {'weapons.' + player['weapon'].name + '.wins': 1,
                                                               'weapons.' + player['weapon'].name + '.games': 1}})

                                bamount = 0
                                curbuild = None
                                for idss in s['builds']:
                                    bamount += 1
                                    sovpadenie = False
                                    b = s['builds'][idss]
                                    if b['weapon'] == player['weapon'].name:
                                        sovpadenie = True
                                        for idsss in player['skills']:
                                            if idsss not in b['skills']:
                                                sovpadenie = False
                                    if sovpadenie:
                                        curbuild = b
                                        break
                                if curbuild != None:
                                    stats.update_one({}, {'$inc': {'builds.' + str(curbuild['id']) + '.games': 1,
                                                                   'builds.' + str(curbuild['id']) + '.wins': 1}})
                                else:
                                    stats.update_one({}, {'$set': {
                                        'builds.' + str(bamount): {'id': str(bamount), 'weapon': player['weapon'].name,
                                                                   'skills': player['skills'], 'games': 1, 'wins': 1,
                                                                   'ties': 0}}})
                        else:
                            if game['turn'] > 3:
                                for idss in player['skills']:
                                    if idss not in s['skills']:
                                        stats.update_one({}, {'$set': {
                                            'skills.' + idss: {'name': idss, 'wins': 0, 'games': 0, 'ties': 0}}})
                                    stats.update_one({}, {'$inc': {'skills.' + idss + '.games': 1}})
                                if player['weapon'].name not in s['weapons']:
                                    stats.update_one({}, {'$set': {
                                        'weapons.' + player['weapon'].name: {'name': player['weapon'].name, 'wins': 0,
                                                                             'games': 0, 'ties': 0}}})
                                stats.update_one({}, {'$inc': {'weapons.' + player['weapon'].name + '.games': 1}}) 
                                bamount = 0
                                curbuild = None
                                for idss in s['builds']:
                                    bamount += 1
                                    sovpadenie = False
                                    b = s['builds'][idss]
                                    if b['weapon'] == player['weapon'].name:
                                        sovpadenie = True
                                        for idsss in player['skills']:
                                            if idsss not in b['skills']:
                                                sovpadenie = False
                                    if sovpadenie:
                                        curbuild = b
                                        break
                                if curbuild != None:
                                    stats.update_one({}, {'$inc': {'builds.' + str(curbuild['id']) + '.games': 1}})
                                else:
                                    stats.update_one({}, {'$set': {
                                        'builds.' + str(bamount): {'id': str(bamount), 'weapon': player['weapon'].name,
                                                                   'skills': player['skills'], 'games': 1, 'wins': 0,
                                                                   'ties': 0}}})
                        users.update_one({'id': user['id']}, {'$inc': {'games': 1}})
                        if game['pureduel'] and game['playersamount'] == 2:
                            users.update_one({'id': user['id']}, {'$inc': {'pureduels.games': 1}})
                        if stats == duelstats:
                            users.update_one({'id': user['id']}, {'$inc': {'duels.games': 1}})
                        if stats == teamstats:
                            users.update_one({'id': user['id']}, {'$inc': {'teams.games': 1}})
                        if stats == massbattlestats:
                            users.update_one({'id': user['id']}, {'$inc': {'massbattles.games': 1}})

                else:
                    for ids in game['players']:
                        player = game['players'][ids]
                        if game['rats']:
                            if game['playersamount'] == 2:
                                if player['controller'] == 'bot':
                                    rats.update_one({}, {'$inc': {'games': 1}})
                            break
                        if game['bossfight']:
                            break
                        if game['dungeon']:
                            break
                        if game['testequipgame']:
                            break
                        if game['testequipgame_tournier']:
                            break
                        if player['controller'] == 'bot':
                            continue
                        if player['droppedweapon'] != None:
                            player['weapon'] = player['droppedweapon']
                        user = users.find_one({'id': player['id']})
                        if user == None:
                            users.insert_one(createuser(player))
                            user = users.find_one({'id': player['id']})
                        try:
                            user['ties']
                        except:
                            users.update_one({'id': user['id']}, {
                                '$set': {'ties': 0, 'duels.ties': 0, 'teams.ties': 0, 'massbattles.ties': 0}})
                        users.update_one({'id': user['id']}, {'$inc': {'games': 1, 'ties': 1}})
                        if stats == duelstats:
                            users.update_one({'id': user['id']}, {'$inc': {'duels.games': 1, 'duels.ties': 1}})
                        if stats == teamstats:
                            users.update_one({'id': user['id']}, {'$inc': {'teams.games': 1, 'teams.ties': 1}})
                        if stats == massbattlestats:
                            users.update_one({'id': user['id']},
                                             {'$inc': {'massbattles.games': 1, 'massbattles.ties': 1}})
                        if game['turn'] > 3: 
                            for idss in player['skills']:
                                if idss not in s['skills']:
                                    stats.update_one({}, {
                                        '$set': {'skills.' + idss: {'name': idss, 'wins': 0, 'games': 0, 'ties': 0}}})
                                stats.update_one({}, {
                                    '$inc': {'skills.' + idss + '.games': 1, 'skills.' + idss + '.ties': 1}})
                            if player['weapon'].name not in s['weapons']:
                                stats.update_one({}, {'$set': {
                                    'weapons.' + player['weapon'].name: {'name': player['weapon'].name, 'wins': 0,
                                                                         'games': 0, 'ties': 0}}})
                            stats.update_one({}, {'$inc': {'weapons.' + player['weapon'].name + '.games': 1,
                                                           'weapons.' + player['weapon'].name + '.ties': 1}})

                            bamount = 0
                            curbuild = None
                            for idss in s['builds']:
                                bamount += 1
                                sovpadenie = False
                                b = s['builds'][idss]
                                if b['weapon'] == player['weapon'].name:
                                    sovpadenie = True
                                    for idsss in player['skills']:
                                        if idsss not in b['skills']:
                                            sovpadenie = False
                                if sovpadenie:
                                    curbuild = b
                                    break
                            if curbuild != None:
                                stats.update_one({},
                                                 {'$inc': {'builds.' + str(curbuild['id']) + '.games': 1, 'ties': 1}})
                            else:
                                stats.update_one({}, {'$set': {
                                    'builds.' + str(bamount): {'id': str(bamount), 'weapon': player['weapon'].name,
                                                               'skills': player['skills'], 'games': 1, 'wins': 0,
                                                               'ties': 0}}})
            try:
                # try:
                # game['timer'].cancel()
                # idstoremove = []
                # for ids in game['alltimers']:
                #    try:
                #        ids.cancel()
                # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
                #        idstoremove.append(ids)
                #    except:
                #        pass
                # for ids in idstoremove:
                #    game['alltimers'].remove(ids)
                # except:
                #    pass
                try:
                    if game['title'] == 'None':
                        game['title'] = game['players'][game['id']]['name']
                    if not game['castlefight'] and not game['neuralfight']:
                        sendm(bot, pasyuk_id, 'Игра в чате ' + str(game['title']) + ' закончилась!')
                except:
                    pass
                if not game['castlefight'] and not game['neuralfight']:
                    if game['cwrats'] or game['cwduel'] or game['cwduelrats']:
                        del cwgames[game['id']]
                    else:
                        del games[game['id']]
                if game['neuralfight']:
                    #print("next cycle soon")
                    global demon_amount
                    if game['cycle'] <= game['maxcycle']:
                        m = game['m']
                        game2 = creategame(m)
                        #print(game2)
                        for idssss in game2:
                            x = idssss
                            break
                        game2 = game2[x]
                        game2['fullneuraldemon2'] = game['fullneuraldemon2'] + 1
                        game2['fullneuraldemon1'] = game['fullneuraldemon1']
                        game2['cycle'] = game['cycle']
                        game2['maxcycle'] = game['maxcycle']
                        if game2['fullneuraldemon2'] >= demon_amount-1:
                            game2['fullneuraldemon1'] = game['fullneuraldemon1']+1
                            game2['fullneuraldemon2'] = game2['fullneuraldemon1']+1
                            if game2['fullneuraldemon1'] >= demon_amount-1:
                                game2['cycle'] = game['cycle']+1
                                game2['fullneuraldemon1'] = 0
                                game2['fullneuraldemon2'] = 1
                                sendm(bot, 441399484, "Завершен "+str(game['cycle'])+" цикл обучения всех демонов со всеми.")
                        game2['neuralfight'] = True
                        game2['pureduel_rats'] = True
                        game2['pureduel'] = True
                        game2['demons'] = game['demons']
                        game2['m'] = game['m']
                        #print("neurodemon1 = ", game2['fullneuraldemon1'])
                        del games[game['id']]
                        games.update({m.chat.id:game2})
                        #print(games)
                        #bot.send_message(m.chat.id, 'Инициализирован процесс обучения нейрокрыс.')
                        game = games[m.chat.id]
                        #print("16322: ",game['fullneuraldemon1'])
                        threading.Thread(target = goo, args = [m, m.chat.id, game]).start()
                        return
                    else:
                        best_demons = []
                        maxscore = -10000
                        for ids in game['demons']:
                            demon = game['demons'][ids]
                            if demon['score'] >= maxscore:
                                maxscore = demon['score']
                        for ids in game['demons']:
                            demon = game['demons'][ids]
                            if demon['score'] >= maxscore:
                                best_demons.append(demon)
                        best_demon_selected = random.choice(best_demons)
                        mutation_rate = 30
                        new_demons = {}
                        for i in range(demon_amount):
                            if i == 0:
                                new_demon = best_demon_selected
                                new_demon['score'] = 0
                                new_demon['number'] = i
                            else:
                                new_demon = {'pattern':{}, 'score':0, 'number':i}
                                for ids in best_demon_selected['pattern']:
                                    new_pattern = {ids:best_demon_selected['pattern'][ids]}
                                    if random.randint(1, 100) <= mutation_rate:
                                        new_acts = ['attack', 'adrenaline', 'reload', 'perekat', 'vor', 'shield', 'flash']
                                        new_acts.remove(new_pattern[ids])
                                        new_demon['pattern'][ids] = random.choice(new_acts)
                                    else:
                                        new_demon['pattern'][ids] = best_demon_selected['pattern'][ids]
                            new_demons.update({i:new_demon})

                        i = 1
                        while Path('demons_'+str(demon_amount)+'_generation_'+str(i)+'.pickle').is_file():
                            i += 1
                        with open('demons_'+str(demon_amount)+'_generation_'+str(i)+'.pickle', 'wb') as f:
                            pickle.dump(new_demons, f)

                        sendm(bot, 441399484, "Процесс обучения крыс завершен. Поколение " + str(i) + " готово. Наивысший балл: "+str(maxscore))
                        m = game['m']
                        del games[game['id']]
                        infinity_teaching(m)
                        return
            except:
                print(traceback.format_exc())
    except:
        try:
            sendm(bot, pasyuk_id, traceback.format_exc())
        except:
            print(traceback.format_exc())
        try:
            sendm(bot, game['id'], 'Ошибка! Сбрасываю игру.')
        except:
            pass
        # try:
        # game['timer'].cancel()
        # idstoremove = []
        # for ids in game['alltimers']:
        #    try:
        #        ids.cancel()
        # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
        #        idstoremove.append(ids)
        #    except:
        #        pass
        # for ids in idstoremove:
        #    game['alltimers'].remove(ids)
        # except:
        #    pass
        try:
            del games[game['id']]
        except:
            try:
                del cwgames[game['id']]
            except:
                pass


def regen_energy(game, player, amount):
    for ids in player['recoverydebuff']:
        amount -= ids[0]
    if amount < 0:
        amount = 0
    if game['freeze_energy'] <= 0:
        player['energy'] += amount
    return amount


def set_energy(game, player, amount):
    regen = amount - player['energy']
    for ids in player['recoverydebuff']:
        regen -= ids[0]
    if regen < 0:
        regen = 0
    if game['freeze_energy'] <= 0:
        player['energy'] += regen
    return player['energy']


def createbotfightgame(chat=botfights):
    while True:
        try:
            if not allowgames:
                sendm(bot, chat, 'Проводятся технические работы, игры временно недоступны!')
            else:
                if chat not in games:
                    game = creategame(chatid=chat)
                    games.update(game)
                    game = games[chat]
                    game['botfight'] = True
                    t = threading.Timer(300, cancelgame, args=[game['id']])
                    t.start()
                    game['canceltimer'] = t
                    sendm(bot, chat, 'Подготовка к битве ботов запущена! /v_join для присоединения.')
        except:
            pass
        time.sleep(300)


def createuser(player):
    return {
        'id': player['id'],
        'name': player['name'],
        'games': 0,
        'wins': 0

    }


def createuser2(user):
    return {
        'id': user.id,
        'name': user.first_name,
        'games': 0,
        'wins': 0

    }


def getdarknesscode(y=2):
    x = ''
    while len(x) < y:
        x += str(random.randint(0, 1))
    return x


def creategame(m=None, diff=1, dungtype='rhino', chatid=None, castlefight=False, cwrats=False, cwduel=False,
               cwduelrats=False):
    if m != None:
        chid = m.chat.id
        ttle = str(m.chat.title)
        creator = m.from_user.id
    else:
        chid = chatid
        ttle = str(None)
        creator = pasyuk_id
    x = {chid: {
        'id': chid,
        'title': str(ttle),
        'players': {},
        'msg': None,
        'turn': 1,
        'text': 'Ход 1:\n',
        'started': False,
        'timer': None,
        'effecttext': '',
        'stage': None,
        'providets': False,
        'test': False,
        'teamplay': False,
        'canceltimer': None,
        'rats': False,
        'flashed': [],
        'hypnotists': [],
        'playersamount': 0,
        'creator': creator,
        'bossfight': False,
        'dungeon': False,
        'dungeonlvl': 1,
        'gl': False,
        'g': False,
        'freeze_energy': 0,
        'light_strikes': [],
        'alreadyaddedrats': False,
        'spectators': [],
        'rat_difficulty': diff,
        'dungeon_type': dungtype,
        'dead_skeletons': 0,
        'tournier': False,
        'allrandom': False,
        'pureduel': False,
        'testequipgame': False,
        'magictournier': False,
        'rp_fight': False,
        'code1': getdarknesscode(),
        'code2': getdarknesscode(),
        'botfight': False,
        'dark_said': False,
        'can_hide_dark': False,
        'castlefight': castlefight,
        'cwrats': cwrats,
        'alltimers': [],
        'cwduel': cwduel,
        'cwduelrats': cwduelrats,
        'was_1_turn': False,
        'turntimer': time.time(),
        'cwbar': False,
        'waitbarplayers': [],
        'waitbarleave': [],
        'classic_game':False,
        'pureduel_rats':False,
        'm':None,
        'maxcycle':100,
        'cycle':1,
        'fullneuraldemon1':0,
        'fullneuraldemon2': 1,
        'failed_neural':False,
        'neuralfight':False,
        'pureduel_rats_hard':False,
        'pokemonhunt':False,
        'pokemon_daytime':'day',
        'necromant_reborn_buff':0,
        'summon_castlefight_skeles':[],
        'darkcastle_demon':0,
        'summoned_castlefight_skeletons':0,
        'summon_imps':[],
        'summon_magmaworms':[],
        'customtextlist':[],
        'testequipgame_tournier':False,
        'summon_wars':False,
        'rhino_say':False,
        'rhinotext1':False,
        'completed_hell':False,
        'simulate_first_run':False,
        'dm':False,
        'sum_dm_deaths':8,
        'dop_skills':0,
        'new_limit':False,
        "knight_need_dark_energy": False,
        "alreadyaddedknights":False

    }
    }

    return x


threading.Thread(target=createbotfightgame, args=[]).start()


def getturnelements():
    elems = ['fire', 'water', 'ice', 'light', 'electro', 'air', 'life', 'random', 'virus', 'blood', 'death', 'mech',
             'nature']
    returnelems = []
    while len(returnelems) < 9:
        e = random.choice(elems)
        while e in returnelems:
            e = random.choice(elems)
        returnelems.append(e)
    return returnelems


def createplayer(user=None, uid=None, weapon=None, hp=None, name=None, dead=None, photo=None, iamillusion=False, completed_hell=False):
    ctexts = {}
    if user != None:
        userid = user.id
        user_name = user.first_name
        try:
            ctexts = users.find_one({'id': user.id})['customtexts']
        except:
            pass
    else:
        userid = 0
        user_name = 'None'
    if uid != None:
        userid = uid

    x = {userid: {
        'id': userid,
        'name': user_name,
        'photo': photo,
        'hp': 4,
        'maxhp': 4,
        'energy': 5,
        'maxenergy': 5,
        'skills': [],
        'weapon': None,
        'act': None,
        'ready': False,
        'team': None,
        'stage': None,
        'dead': False,
        'incomingdmg': 0,
        'outgoingdmg': 0,
        'nearplayers': [userid],
        'perekatcd': 0,
        'shieldgencd': 0,
        'shield': False,
        'dmglimit': 6,
        'maxdmglimit': 6,
        'zombie': False,
        'inventory': [],
        'blood': 0,
        'stun': 0,
        'hypnotistcd': 0,
        'adrenaline': False,
        'fireticks': 0,
        'firestrength': 0,
        'suicide': False,
        'who_fired': None,
        'outgoingdmgs': [],
        'incomingdmgs': [],
        'maintarget': None,
        'peregrev': 0,
        'addperegrev': 0,
        'afkcount': 0,
        'visorcd': 0,
        'providets': False,
        'seetext': 'Пропускает ход (АФК)!',
        'lasttarget': None,
        'bulavabonus': 0,
        'droppedweapon': None,
        'dzet': False,
        'dzets': {},
        'hitins': {},
        'dopuseditems': [],
        'lostenergy': 0,
        'sokrushenie': False,
        'sokrusheniecd': 0,
        'waszero': False,
        'chain': False,
        'chaincd': 0,
        'lostweapon': False,
        'narsil': False,
        'narsilcd': 0,
        'pyrodamage': False,
        'who_steal': [],
        'vor': False,
        'vorcd': 0,
        'spearcd': 0,
        'who_attacked': [],
        'ritualistamount': 1,
        'ritualists': [],
        'ritual_ability': False,
        'navodcd': 0,
        'secondweapon': weaponlist.Fist(),
        'changeweaponcd': 0,
        'bowcharge': 0,
        'lastcharge': False,
        'necrozombie': 0,
        'getfood': False,
        'msg': None,
        'blown': False,
        'incvizitorcd': 0,
        'curses': [],
        'execution': False,
        'parrycd': 0,
        'madpotion': False,
        'grenade': 'grenade',
        'molitva': False,
        'firearrow': False,
        'firearrowcd': 0,
        'washitin': False,
        'dopblock': 0,
        'who_fireds': [],
        'saberblock': None,
        'illusion': False,
        'illusioncd': 0,
        'illusionturns': 0,
        'createillusion': False,
        'demon': False,
        'demonheal': 0,
        'demonform': False,
        'demoncd': 0,
        'claws': False,
        'clawscd': 0,
        'controller': 'player',
        'cuts': 0,
        'addcuts': 0,
        'bombcharge': 0,
        'electrolostenergy': 0,
        'watershield': 0,
        'watershieldcd': 0,
        'shurikens': 4,
        'shurikenstothrow': 1,
        'meditation': None,
        'meditationtarget': None,
        'meditationcd': 0,
        'domeditation': False,
        'bicepccd': 0,
        'bicepc': False,
        'baseballhits': 0,
        'sawhits': 1,
        'knifehits': 1,
        'flamehits': 0,
        'axehits': 1,
        'lastact': ['skip', 'self'],
        'skeletonfirecd': 0,
        'batcd': 0,
        'bat': False,
        'waitbats': [],
        'vampirebites': 0,
        'iamillusion': iamillusion,
        'boss': False,
        'demonlordform': False,
        'hellfirecharges': 0,
        'energydraincd': 0,
        'batsdamages': [],
        'selfarmor': 0,
        'selfarmorchance': 0,
        'charge': False,
        'chargecd': 0,
        'madness': False,
        'chereparmor': 0,
        'shieldarmor': 8,
        'weaponshield': False,
        'attackedthisturn': False,
        'customtexts': ctexts,
        'truestrike': False,
        'molotcd': 0,
        'multicast': 1,
        'multicastcd': 0,
        'lasthit': 0,
        'getlasthit': False,
        'turnelements': getturnelements(),
        'selectedelements': [],
        'invokercd': 0,
        'summon_treant': 0,
        'roots': [],
        'recoverydebuff': [],
        'infected': False,
        'infected_weapon': [],
        'summon_virus': 0,
        'virus_attacks': 0,
        'iceheart': 0,
        'fell': False,
        'shestcd': 0,
        'hitdown': False,
        'light_aspect': 0,
        'dopriest': None,
        'priestcd': 0,
        'getbuffs3': [],
        'getbuffs2': [],
        'weakskeletype': 'normal',
        'summon_mad_skeletons': 0,
        'summon_weak_skeletons': 0,
        'summon_weak_ghouls': 0,
        'summon_zombie_rats': 0,
        'summoned_mad_skeletons': False,
        'summoned_weak_skeletons': False,
        'summoned_weak_ghouls': False,
        'summoned_zombie_rats': False,
        'madskele_attack': 0,
        'already_wait': False,
        'magic_strong_shield': False,
        'can_regen_hp_by_reload': 0,
        'necrostaffabilitycd': 0,
        'summon_necrofighter': None,
        'master': None,
        'controllable_necrofighter': None,
        'can_summon_zombie': True,
        'machinegun_charges': 0,
        'alreadysaved': False,
        'drobovik_charges': 1,
        'bombercd': 0,
        'minetimer': 0,
        'EXPLOSIONcd': 0,
        'EXPLOSION': None,
        'inzhenercd': 0,
        'inzheneritems': [],
        'madpotioncd': 9,
        'wasarmor_from_armorskill': False,
        'wasarmor_from_selfarmor': False,
        'wasarmor_from_cherep': False,
        'rp_fighter': False,
        'rp_weapon': 'None',
        'user': None,
        'dark_counter': 0,
        'cant_die': True,
        'dark_gun_charges': 0,
        'dark_dog_attacks': 0,
        'amalgama_must_mutate': False,
        'tesak_bonus': 3,
        'maxnecrozombie': 3,
        'pressed_info': False,
        'darkness_sleep': False,
        'darkness_uvorot': 0,
        'dark_true_form': False,
        'last_dark_acts': [],
        'prepared_beam': None,
        'dark_die_stage': 0,
        'darknessspelldmgbonus': 0,
        'hide_in_door': False,
        'dark_energycd': 0,
        'dark_counter_set': 0,
        'deadturns': 0,
        'dead_from_scare': False,
        'frozen_buttons': [],
        'minercd': 0,
        'allies': [],
        'take_enemy_hp': 0,
        'do_damage_in_hp': 0,
        'bloodresist': 0,
        'nextturndamage': 0,
        'is_dark_boss': False,
        'is_dark_rat': False,
        'is_amalgama': False,
        'is_necromant': False,
        'is_rhino': False,
        'is_vurdalak': False,
        'is_mad_skele': False,
        'passivevor': False,
        'strongshot': False,
        'obrezcd': 0,
        'loosedamage': 0,
        'grenadedmgbonus': 0,
        'doublemadpotion': False,
        'punchdead': False,
        'wasarmor_from_hitin':False,
        'hypnodebuff':0,
        'weights':{'flash':20, 'attack':20, 'adrenaline':20, 'perekat':20, 'reload':20, 'vor':20},
        'rat_demons':{},
        'target_potential_acts':[],
        'choicen_demon':None,
        'fullneuraldemon_final':None,
        'castle_explosion':False,
        'used_rat_toy':False,
        'have_rat_toy':False,
        'full_npc':False,
        'summon_dark_demon':False,
        'darkdemon_strenght':0,
        'darkcastle_demon':False,
        'demonshieldcd':0,
        'demondestroycd':0,
        'demonshield':False,
        'was_castlenecromant_skele':False,
        'dead_from_dark':False,
        'doomed_amount':0,
        'is_imp':False,
        'is_magmaworm':False,
        'is_lucifer':False,
        'burrowcd':0,
        'burrowtarget':None,
        'burrowstrike':False,
        'luciferpower':0,
        'luciferbladecd':0,
        'used_doom':False,
        'bigdooms':[],
        'doomedskills':[],
        'lucifer_hellfire':0,
        'lucifer_hellfirecd':3,
        'rest_after_doom':0,
        'passivecounterattackcd':0,
        'policestun':False,
        'kills':0,
        'first_hit':False,
        'set_first_hit':False,
        'collecting_souls':False,
        'doomcd':0,
        'is_catapult':False,
        'doomedinventory':[],
        'need_to_doom':False,
        'is_snowman':False,
        'is_eyedemon':False,
        'is_radiodemon':False,
        'demon_transform_turn':False,
        'eliminated':False,
        'tentacles_turn':False,
        'tentacles_target':None,
        'energy_blowcd':0,
        'tentaclescd':0,
        'demon_transformcd':0,
        'rhino_eliminatecd':0,
        'mind_controlcd': 0,
        'attack_self':False,
        'lastattacktarget':None,
        'angry_rhino_target':None,
        'summon_angry_rhino':False,
        'completed_hell':completed_hell,
        'dm_deaths':0,
        "count_as_dm":False,
        "wing_attackcd":0,
        "dragon_fireballcd":0,
        "is_knight":False,
        "is_dragon":False,
        "knight_rifle_talk":False,
        "armor_debuff":{},
        "armor_debuff_set":{}
                

    }
    }

    if weapon != None:
        x[userid]['weapon'] = weapon
    if hp != None:
        x[userid]['hp'] = hp
    if name != None:
        x[userid]['name'] = name
    if dead != None:
        x[userid]['dead'] = dead
    return x


@bot.inline_handler(func = lambda query: True)
def inliness(query):
  try:
    game = None
    for ids in games:
        if query.from_user.id in games[ids]['players']:
            game = games[ids]
            player = games[ids]['players'][query.from_user.id]
            break
    if game == None:
        return

    text = 'Отправить сообщение команде'

    q = []

    q.append(types.InlineQueryResultArticle('1', 'Отправить сообщение команде', description = query.query,
                                            input_message_content=types.InputTextMessageContent(message_text=player['name']+' что-то говорит.')))
    bot.answer_inline_query(query.id, q, cache_time = 0)
  except:
    sendm(bot, 441399484, traceback.format_exc())

@bot.chosen_inline_handler(func=lambda result: True)
def test_chosen(result):
  try:
    game = None
    for ids in games:
        if result.from_user.id in games[ids]['players']:
            game = games[ids]
            player = games[ids]['players'][result.from_user.id]
            break
    if game == None:
        return
    chosen = int(result.result_id)
    text = result.query
    if result.query == '':
        return
    for ids in game['players']:
        target = game['players'][ids]
        if target['team'] == player['team']:
            try:
                sendm(bot, target['id'], '❗️|'+player['name']+': '+text)
            except:
                pass


  except:
    sendm(bot, 441399484, traceback.format_exc())

def checkdarkness(game, player):
    try:
        if player['dark_counter'] > 1:
            if not player['ready'] and player['msg'] != None:
                chance = 30
                if player['dark_counter'] == 2:
                    chance = 30
                if player['dark_counter'] == 3:
                    chance = 40
                if player['dark_counter'] == 4:
                    chance = 50
                if random.randint(1, 100) <= chance:
                    old_kb = getfightkb(game, player)
                    new_kb = getdarkkb(game, player)
                    medit('👁👁👁👁👁👁👁👁👁👁👁👁👁👁', player['msg'].chat.id, player['msg'].message_id, reply_markup=new_kb)
                    time.sleep(random.randint(2, 3))
                    text = getplayertext(game, player)
                    if not player['ready'] and player['msg'] != None:
                        medit(text, player['msg'].chat.id, player['msg'].message_id, reply_markup=old_kb)
    except:
        print(traceback.format_exc())


def checks():
    while True:
        try:
            for ids in games:
                game = games[ids]
                if game['neuralfight']:
                    continue
                if game['started']:
                    if game['stage'] == 'turn':
                        ready = 0
                        for ids in game['players']:
                            player = game['players'][ids]
                            threading.Thread(target=checkdarkness, args=[game, player]).start()
                            if player['ready']:
                                ready += 1
                        if len(game['players']) == ready or time.time() - game['turntimer'] >= 120:
                            # try:
                            #    game['timer'].cancel()
                            # except:
                            #    pass
                            # idstoremove = []
                            # for ids in game['alltimers']:
                            #    try:
                            #        ids.cancel()
                            # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
                            #        idstoremove.append(ids)
                            #    except:
                            #        pass
                            # for ids in idstoremove:
                            #    game['alltimers'].remove(ids)
                            threading.Thread(target=end_turn, args=[game, bot]).start()
                    if game['stage'] == 'weapons':
                        ready = 0
                        for ids in game['players']:
                            player = game['players'][ids]
                            if player['ready']:
                                ready += 1
                        if len(game['players']) == ready or time.time() - game['turntimer'] >= 120:
                            # game['timer'].cancel()
                            # idstoremove = []
                            # for ids in game['alltimers']:
                            #    try:
                            #        ids.cancel()
                            # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
                            #        idstoremove.append(ids)
                            #    except:
                            #        pass
                            # for ids in idstoremove:
                            #    game['alltimers'].remove(ids)
                            threading.Thread(target=select_skills, args=[game]).start()
                    if game['stage'] == 'skills':
                        ready = 0
                        for ids in game['players']:
                            player = game['players'][ids]
                            if player['ready']:
                                ready += 1
                        if len(game['players']) == ready or time.time() - game['turntimer'] >= 120:
                            # game['timer'].cancel()
                            # idstoremove = []
                            # for ids in game['alltimers']:
                            #    try:
                            #        ids.cancel()
                            # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
                            #        idstoremove.append(ids)
                            #    except:
                            #        pass
                            # for ids in idstoremove:
                            #    game['alltimers'].remove(ids)
                            threading.Thread(target=next_turn, args=[game]).start()
        except:
            sendm(bot, pasyuk_id, traceback.format_exc())
        time.sleep(5)


####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
threading.Thread(target=checks, args=[]).start()


####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################


def checks_cw():
    while True:
        try:
            for ids in cwgames:
                game = cwgames[ids]
                if game['started']:
                    if game['stage'] == 'turn':
                        ready = 0
                        for ids in game['players']:
                            player = game['players'][ids]
                            # threading.Thread(target = checkdarkness, args = [game, player]).start()
                            if player['ready']:
                                ready += 1
                        if len(game['players']) == ready or time.time() - game['turntimer'] >= 120:
                            # try:
                            #    game['timer'].cancel()
                            # except:
                            #    pass
                            # idstoremove = []
                            # for ids in game['alltimers']:
                            #    try:
                            #        ids.cancel()
                            # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
                            #        idstoremove.append(ids)
                            #    except:
                            #        pass
                            # for ids in idstoremove:
                            #    game['alltimers'].remove(ids)
                            if game['stage'] == 'turn':
                                if game['cwrats'] or game['cwduel'] or game['cwduelrats']:
                                    threading.Thread(target=end_turn, args=[game, cwbot]).start()
                                else:
                                    threading.Thread(target=end_turn, args=[game, cwbot]).start()
                    if game['stage'] == 'weapons':
                        ready = 0
                        for ids in game['players']:
                            player = game['players'][ids]
                            if player['ready']:
                                ready += 1
                        if len(game['players']) == ready or time.time() - game['turntimer'] >= 120:
                            # game['timer'].cancel()
                            # idstoremove = []
                            # for ids in game['alltimers']:
                            #    try:
                            #        ids.cancel()
                            #        #sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
                            #        idstoremove.append(ids)
                            #    except:
                            #        pass
                            # for ids in idstoremove:
                            #    game['alltimers'].remove(ids)
                            if game['cwrats'] or game['cwduel'] or game['cwduelrats']:
                                threading.Thread(target=select_skills, args=[game, cwbot]).start()
                            else:
                                threading.Thread(target=select_skills, args=[game, cwbot]).start()
                    if game['stage'] == 'skills':
                        ready = 0
                        for ids in game['players']:
                            player = game['players'][ids]
                            if player['ready']:
                                ready += 1
                        if len(game['players']) == ready or time.time() - game['turntimer'] >= 120:
                            # game['timer'].cancel()
                            # idstoremove = []
                            # for ids in game['alltimers']:
                            #    try:
                            #        ids.cancel()
                            # sendm(cwbot, pasyuk_id, 'Отключен незавершенный таймер!')
                            #        idstoremove.append(ids)
                            #    except:
                            #        pass
                            # for ids in idstoremove:
                            #    game['alltimers'].remove(ids)
                            if game['cwrats'] or game['cwduel'] or game['cwduelrats']:
                                threading.Thread(target=next_turn, args=[game, cwbot]).start()
                            else:
                                threading.Thread(target=next_turn, args=[game, cwbot]).start()
        except:
            sendm(cwbot, pasyuk_id, traceback.format_exc())
        time.sleep(5)


def checks_bar():
    while True:
        try:
            for ids in bargames:
                game = bargames[ids]
                if game['started']:
                    if game['stage'] == 'turn':
                        if time.time() - game['turntimer'] >= 30:
                            threading.Thread(target=end_turn, args=[game, cwbot]).start()
                    if game['stage'] == 'weapons':
                        if time.time() - game['turntimer'] >= 10:
                            threading.Thread(target=select_skills, args=[game, cwbot]).start()
                    if game['stage'] == 'skills':
                        if time.time() - game['turntimer'] >= 10:
                            threading.Thread(target=next_turn, args=[game, cwbot]).start()

        except:
            sendm(cwbot, pasyuk_id, traceback.format_exc())
        time.sleep(5)


threading.Thread(target=checks_bar, args=[]).start()


def medit(message_text, chat_id, message_id, reply_markup=None, parse_mode=None, bot=bot):
    return bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=message_text,
                                 reply_markup=reply_markup, parse_mode=parse_mode)


def poll(b):
    b.infinity_polling()


print('7777')


def polll(b):
    try:
        b.infinity_polling()
    except:
        try:
            b.send_message(pasyuk_id, traceback.format_exc())
        except:
            pass


# import mmmderevnya
# import getip
# import weather
# try:
#    import counter
# except:
#    print(traceback.format_exc())

# threading.Thread(target = polll, args = [ukrus.bot]).start()
# threading.Thread(target = polll, args = [mmmderevnya.bot]).start()
# threading.Thread(target = polll, args = [mmmderevnya.bot101]).start()
# threading.Thread(target = polll, args = [getip.bot]).start()
# threading.Thread(target = polll, args = [weather.bot]).start()
####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################

####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
# try:
#    threading.Thread(target = polll, args = [counter.bot]).start()
# except:
#    print(traceback.format_exc())

# try:
#   import cw_map_draw
#    threading.Thread(target = polll, args = [cw_map_draw.bot]).start()
# except:
#    sendm(cwbot, pasyuk_id, traceback.format_exc())

####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
try:
    threading.Thread(target=polll, args=[bot]).start()
except:
    print(traceback.format_exc())
    try:
        sendm(bot, pasyuk_id, traceback.format_exc())
    except:
        pass

def start_addition_bots():
    threading.Thread(target=checks_cw, args=[]).start()
    threading.Thread(target=polll, args=[cwbot]).start()
    threading.Thread(target=polll, args=[shennon.bot]).start()
    import buckshot
    threading.Thread(target=polll, args=[buckshot.bot]).start()
    import random_events_alice
    import popusk
    threading.Thread(target=polll, args=[random_events_alice.bot]).start()
    threading.Thread(target=polll, args=[popusk.bot]).start()
    import debilikambodja
    threading.Thread(target=polll, args=[debilikambodja.bot]).start()

    from parser.battle_log_reader import start_parser
    start_parser()

start_addition_bots()

####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
####################################### РАСКОММИТИТЬ ##################################################################
#dfbottoken = '736069523:AAEGFANhfsJfnStaoL3d8NhSrCPHL3LikV0'
#dfbot = telebot.TeleBot(dfbottoken)
#try:

#    import dickfindbot
#except:
#    dfbot.send_message(pasyuk_id, traceback.format_exc())
#import rampartguild

#threading.Thread(target=rampartguild.bot.infinity_polling, args=[]).start()
#rampartguild.bot.send_message(pasyuk_id, 'Бот перезапущен!')
#rampartguild.userbot.run()


# import pyrogram.types
# from pyrogram import Client
# from pyrogram.types import ChatPermissions
# from datetime import datetime, timedelta

# api_id = 712117
# api_hash = '318eb14ccff924fc1f5f265e465fd140'

# ubot = Client("my_p_account", api_id=api_id, api_hash=api_hash)

# bannedrchats = [-567287661]


# bannedusers = [257452723]


# @ubot.on_message()
# def alltext(ubot, m):
#    try:
#        if m.from_user.id in bannedusers and m.chat.id in bannedrchats:
#            try:
#                ubot.delete_messages(m.chat.id, m.id, revoke=False)
#                print('Deleted')
#            except:
#                pass
# print(traceback.format_exc())
# if m.from_user.id == pasyuk_id:
#    print(m.chat.id)

#    except:
#        pass
# print(traceback.format_exc())

# import funnikbot
# from multiprocessing import Process
# def runuserbot(ub):
#    threading.Timer(2, funnikbot.geteventlog, args=[-1001260934969]).start()
#    ub.run()
# try:
#    proc1 = Process(target=runuserbot, args=[funnikbot.ubot2])
#    proc1.start()
# except:
#    print(traceback.format_exc())

# ubot.run()

